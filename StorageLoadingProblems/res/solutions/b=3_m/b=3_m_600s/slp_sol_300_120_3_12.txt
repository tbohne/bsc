solved with: SLP.mip_formulations.BinPackingFormulation
time limit: 600 s
time to solve: 488,90 s
objective value: 26111.0

stacks (top to bottom):
stack   0:    1 
stack   1:    2 0 
stack   2:    
stack   3:    3 
stack   4:    4 
stack   5:    5 
stack   6:    6 
stack   7:    7 
stack   8:    8 
stack   9:    9 
stack  10:    
stack  11:    11 10 
stack  12:    12 
stack  13:    13 
stack  14:    14 
stack  15:    15 
stack  16:    
stack  17:    16 17 
stack  18:    19 
stack  19:    18 
stack  20:    20 
stack  21:    21 
stack  22:    22 
stack  23:    23 24 
stack  24:    
stack  25:    26 
stack  26:    25 
stack  27:    27 
stack  28:    28 
stack  29:    30 29 
stack  30:    287 124 
stack  31:    32 31 297 
stack  32:    68 127 290 
stack  33:    128 180 33 
stack  34:    34 187 257 
stack  35:    145 35 151 
stack  36:    36 185 237 
stack  37:    268 37 81 
stack  38:    117 40 38 
stack  39:    39 195 46 
stack  40:    141 285 231 
stack  41:    154 280 41 
stack  42:    267 42 171 
stack  43:    43 132 52 
stack  44:    44 193 159 
stack  45:    246 45 295 
stack  46:    149 47 273 
stack  47:    291 298 278 
stack  48:    49 218 48 
stack  49:    212 226 136 
stack  50:    50 271 192 
stack  51:    275 51 228 
stack  52:    61 239 219 
stack  53:    53 143 199 
stack  54:    54 125 179 
stack  55:    254 277 55 
stack  56:    283 56 203 
stack  57:    57 200 217 
stack  58:    64 186 58 
stack  59:    59 72 137 
stack  60:    60 224 65 
stack  61:    63 248 105 
stack  62:    173 62 232 
stack  63:    214 150 292 
stack  64:    176 253 191 
stack  65:    294 96 245 
stack  66:    134 123 66 
stack  67:    164 243 67 
stack  68:    259 69 167 
stack  69:    209 70 220 
stack  70:    146 207 71 
stack  71:    240 215 144 
stack  72:    198 258 206 
stack  73:    75 73 102 
stack  74:    288 190 74 
stack  75:    289 138 77 
stack  76:    76 169 112 
stack  77:    79 286 122 
stack  78:    147 135 78 
stack  79:    140 299 80 
stack  80:    281 265 160 
stack  81:    161 251 213 
stack  82:    222 82 101 
stack  83:    255 87 83 
stack  84:    84 284 264 
stack  85:    85 86 223 
stack  86:    249 182 238 
stack  87:    211 98 126 
stack  88:    181 139 88 
stack  89:    266 175 89 
stack  90:    90 170 115 
stack  91:    210 91 234 
stack  92:    92 274 93 
stack  93:    205 293 261 
stack  94:    184 260 94 
stack  95:    156 95 262 
stack  96:    236 97 162 
stack  97:    183 174 158 
stack  98:    99 269 100 
stack  99:    216 197 142 
stack 100:    152 153 252 
stack 101:    270 256 194 
stack 102:    119 235 121 
stack 103:    166 227 103 
stack 104:    225 120 104 
stack 105:    118 168 242 
stack 106:    178 157 106 
stack 107:    165 107 148 
stack 108:    109 108 229 
stack 109:    230 133 247 
stack 110:    111 196 110 
stack 111:    263 276 241 
stack 112:    188 163 177 
stack 113:    172 113 233 
stack 114:    155 114 244 
stack 115:    279 116 129 
stack 116:    130 202 131 
stack 117:    189 282 204 
stack 118:    221 296 272 
stack 119:    208 250 201 

#####################################################

solved with: SLP.mip_formulations.ThreeIndexFormulation
Problem not solved.

#####################################################

solved with: SLP.constructive_heuristics.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SLP.constructive_heuristics.ThreeCapRecursiveMCMHeuristic
time limit: 600 s
time to solve: 0,07 s
objective value: 35082.0

stacks (top to bottom):
stack   0:    32 33 142 
stack   1:    54 154 150 
stack   2:    145 25 18 
stack   3:    281 283 48 
stack   4:    90 189 190 
stack   5:    164 165 91 
stack   6:    210 211 224 
stack   7:    212 213 148 
stack   8:    36 79 78 
stack   9:    44 42 45 
stack  10:    49 128 126 
stack  11:    184 172 168 
stack  12:    149 76 72 
stack  13:    117 113 220 
stack  14:    60 53 286 
stack  15:    209 208 191 
stack  16:    166 167 37 
stack  17:    147 266 258 
stack  18:    275 274 146 
stack  19:    20 13 0 
stack  20:    225 246 240 
stack  21:    2 156 151 
stack  22:    221 43 46 
stack  23:    267 125 121 
stack  24:    3 138 144 
stack  25:    188 185 265 
stack  26:    34 35 160 
stack  27:    289 291 295 
stack  28:    277 7 276 
stack  29:    140 111 112 
stack  30:    178 173 131 
stack  31:    157 155 66 
stack  32:    64 68 71 
stack  33:    294 293 133 
stack  34:    130 198 199 
stack  35:    161 134 132 
stack  36:    118 260 250 
stack  37:    218 219 52 
stack  38:    287 285 237 
stack  39:    85 86 38 
stack  40:    47 282 290 
stack  41:    39 296 297 
stack  42:    243 84 87 
stack  43:    40 4 1 
stack  44:    119 109 115 
stack  45:    205 204 41 
stack  46:    176 59 61 
stack  47:    180 268 269 
stack  48:    254 256 174 
stack  49:    175 171 177 
stack  50:    51 19 23 
stack  51:    9 8 284 
stack  52:    63 181 179 
stack  53:    249 248 273 
stack  54:    280 255 257 
stack  55:    259 262 62 
stack  56:    163 216 217 
stack  57:    272 106 110 
stack  58:    57 236 230 
stack  59:    299 298 162 
stack  60:    201 108 102 
stack  61:    56 22 29 
stack  62:    169 170 58 
stack  63:    135 263 264 
stack  64:    95 97 194 
stack  65:    227 251 261 
stack  66:    15 6 226 
stack  67:    288 292 223 
stack  68:    123 120 136 
stack  69:    222 182 187 
stack  70:    75 206 67 
stack  71:    202 207 215 
stack  72:    96 103 12 
stack  73:    197 233 235 
stack  74:    5 114 122 
stack  75:    214 11 10 
stack  76:    195 245 247 
stack  77:    99 30 26 
stack  78:    141 137 93 
stack  79:    73 94 77 
stack  80:    196 16 27 
stack  81:    98 70 65 
stack  82:    139 231 229 
stack  83:    241 242 278 
stack  84:    92 183 186 
stack  85:    152 153 143 
stack  86:    279 253 252 
stack  87:    69 28 31 
stack  88:    101 158 159 
stack  89:    107 228 232 
stack  90:    50 234 238 
stack  91:    21 24 81 
stack  92:    100 203 200 
stack  93:    124 116 55 
stack  94:    193 129 192 
stack  95:    127 104 105 
stack  96:    239 244 
stack  97:    80 89 88 
stack  98:    270 271 
stack  99:    14 17 74 
stack 100:    
stack 101:    
stack 102:    82 83 
stack 103:    
stack 104:    
stack 105:    
stack 106:    
stack 107:    
stack 108:    
stack 109:    
stack 110:    
stack 111:    
stack 112:    
stack 113:    
stack 114:    
stack 115:    
stack 116:    
stack 117:    
stack 118:    
stack 119:    

#####################################################

solved with: SLP.constructive_heuristics.ThreeCapHeuristic
time limit: 600 s
time to solve: 0,18 s
objective value: 26402.0

stacks (top to bottom):
stack   0:    
stack   1:    
stack   2:    
stack   3:    
stack   4:    
stack   5:    2 4 1 
stack   6:    
stack   7:    3 7 0 
stack   8:    
stack   9:    
stack  10:    15 6 12 
stack  11:    
stack  12:    20 13 10 
stack  13:    
stack  14:    
stack  15:    
stack  16:    
stack  17:    
stack  18:    
stack  19:    
stack  20:    
stack  21:    
stack  22:    8 21 24 
stack  23:    
stack  24:    11 30 26 
stack  25:    34 35 9 
stack  26:    25 22 29 
stack  27:    63 62 27 
stack  28:    19 28 31 
stack  29:    16 104 105 
stack  30:    59 61 23 
stack  31:    32 56 58 
stack  32:    57 51 14 
stack  33:    60 53 17 
stack  34:    18 73 77 
stack  35:    33 80 81 
stack  36:    5 114 122 
stack  37:    36 39 38 
stack  38:    40 50 55 
stack  39:    64 66 37 
stack  40:    157 155 41 
stack  41:    42 89 88 
stack  42:    291 295 
stack  43:    44 43 46 
stack  44:    299 298 
stack  45:    145 142 45 
stack  46:    282 290 
stack  47:    48 108 102 
stack  48:    49 47 52 
stack  49:    222 239 244 
stack  50:    210 211 191 
stack  51:    246 240 278 
stack  52:    249 251 261 
stack  53:    54 70 65 
stack  54:    75 82 83 
stack  55:    84 87 74 
stack  56:    267 265 253 
stack  57:    111 112 101 
stack  58:    123 120 103 
stack  59:    288 287 285 
stack  60:    277 276 241 
stack  61:    90 91 69 
stack  62:    221 205 204 
stack  63:    130 135 136 
stack  64:    149 163 162 
stack  65:    165 181 179 
stack  66:    68 106 110 
stack  67:    117 113 67 
stack  68:    164 169 170 
stack  69:    212 213 199 
stack  70:    76 72 71 
stack  71:    175 193 192 
stack  72:    198 202 207 
stack  73:    268 269 257 
stack  74:    128 126 97 
stack  75:    79 92 93 
stack  76:    96 127 129 
stack  77:    85 86 78 
stack  78:    178 173 133 
stack  79:    124 158 159 
stack  80:    95 98 100 
stack  81:    266 258 297 
stack  82:    184 231 229 
stack  83:    254 256 252 
stack  84:    216 228 232 
stack  85:    176 180 177 
stack  86:    147 146 107 
stack  87:    188 185 171 
stack  88:    255 259 262 
stack  89:    260 250 242 
stack  90:    109 203 200 
stack  91:    196 195 167 
stack  92:    172 201 206 
stack  93:    154 150 116 
stack  94:    119 118 94 
stack  95:    99 139 143 
stack  96:    280 284 292 
stack  97:    166 182 187 
stack  98:    236 245 247 
stack  99:    140 141 137 
stack 100:    134 132 131 
stack 101:    227 226 215 
stack 102:    233 235 223 
stack 103:    152 153 148 
stack 104:    275 274 264 
stack 105:    189 197 194 
stack 106:    214 234 238 
stack 107:    296 272 273 
stack 108:    263 270 271 
stack 109:    161 160 121 
stack 110:    218 219 217 
stack 111:    243 237 220 
stack 112:    209 208 168 
stack 113:    281 283 279 
stack 114:    156 151 115 
stack 115:    183 186 174 
stack 116:    294 293 230 
stack 117:    289 286 248 
stack 118:    125 138 144 
stack 119:    225 224 190 
