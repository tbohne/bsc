solved with: BinPacking Formulation
time to solve: 81.00 s
objective value: 0.0

stacks (top to bottom):
stack   0:    170 210 244 
stack   1:    60 64 258 
stack   2:    245 165 26 
stack   3:    226 291 49 
stack   4:    51 222 28 
stack   5:    218 251 96 
stack   6:    84 
stack   7:    109 259 275 
stack   8:    232 125 224 
stack   9:    267 299 242 
stack  10:    127 158 167 
stack  11:    134 
stack  12:    150 105 276 
stack  13:    246 30 183 
stack  14:    100 
stack  15:    129 140 192 
stack  16:    176 45 87 
stack  17:    39 
stack  18:    248 247 284 
stack  19:    238 156 197 
stack  20:    184 
stack  21:    151 249 18 
stack  22:    230 104 286 
stack  23:    2 12 37 
stack  24:    252 229 94 
stack  25:    95 169 113 
stack  26:    5 212 9 
stack  27:    36 54 123 
stack  28:    44 114 263 
stack  29:    217 
stack  30:    46 92 174 
stack  31:    142 117 215 
stack  32:    214 
stack  33:    81 29 93 
stack  34:    108 110 231 
stack  35:    159 25 82 
stack  36:    153 
stack  37:    122 173 27 
stack  38:    88 65 
stack  39:    148 78 205 
stack  40:    128 53 73 
stack  41:    186 237 271 
stack  42:    177 235 69 
stack  43:    180 83 199 
stack  44:    255 149 70 
stack  45:    47 179 198 
stack  46:    239 118 175 
stack  47:    223 
stack  48:    76 
stack  49:    14 75 66 
stack  50:    253 201 102 
stack  51:    61 136 99 
stack  52:    293 260 
stack  53:    119 143 20 
stack  54:    278 32 290 
stack  55:    124 40 48 
stack  56:    68 4 297 
stack  57:    74 135 270 
stack  58:    256 
stack  59:    72 22 80 
stack  60:    264 273 23 
stack  61:    33 279 221 
stack  62:    0 
stack  63:    17 
stack  64:    234 236 138 
stack  65:    24 111 280 
stack  66:    139 163 85 
stack  67:    233 90 162 
stack  68:    97 289 240 
stack  69:    211 
stack  70:    161 
stack  71:    220 77 115 
stack  72:    126 
stack  73:    34 63 133 
stack  74:    189 21 191 
stack  75:    274 144 195 
stack  76:    98 281 194 
stack  77:    200 137 188 
stack  78:    254 120 13 
stack  79:    268 
stack  80:    91 15 
stack  81:    272 154 147 
stack  82:    219 
stack  83:    42 209 
stack  84:    172 43 10 
stack  85:    62 190 107 
stack  86:    31 171 196 
stack  87:    89 56 112 
stack  88:    225 285 116 
stack  89:    79 206 71 
stack  90:    282 
stack  91:    3 
stack  92:    178 35 213 
stack  93:    8 
stack  94:    50 57 216 
stack  95:    6 155 277 
stack  96:    55 152 168 
stack  97:    160 
stack  98:    16 287 257 
stack  99:    58 
stack 100:    208 130 
stack 101:    59 145 146 
stack 102:    241 67 294 
stack 103:    269 166 
stack 104:    185 
stack 105:    41 266 261 
stack 106:    106 121 288 
stack 107:    250 131 132 
stack 108:    181 227 204 
stack 109:    7 52 262 
stack 110:    202 298 292 
stack 111:    203 
stack 112:    103 
stack 113:    182 265 283 
stack 114:    141 243 101 
stack 115:    228 
stack 116:    207 295 86 
stack 117:    1 11 157 
stack 118:    193 296 19 
stack 119:    164 38 187 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.52 s (time limit exceeded)
objective value: 641.0 (not optimal)

stacks (top to bottom):
stack   0:    233 170 261 
stack   1:    235 191 258 
stack   2:    251 163 299 
stack   3:    100 
stack   4:    248 289 269 
stack   5:    126 
stack   6:    201 296 107 
stack   7:    181 175 
stack   8:    280 22 137 
stack   9:    38 54 78 
stack  10:    264 4 28 
stack  11:    51 73 67 
stack  12:    203 
stack  13:    114 179 166 
stack  14:    36 174 
stack  15:    230 279 143 
stack  16:    210 198 48 
stack  17:    178 108 53 
stack  18:    106 157 297 
stack  19:    202 15 
stack  20:    272 218 27 
stack  21:    89 292 
stack  22:    41 104 286 
stack  23:    7 2 144 
stack  24:    245 20 
stack  25:    134 76 
stack  26:    236 288 37 
stack  27:    273 169 147 
stack  28:    246 228 
stack  29:    127 146 173 
stack  30:    200 257 
stack  31:    293 212 132 
stack  32:    139 35 85 
stack  33:    206 11 138 
stack  34:    91 121 221 
stack  35:    290 136 263 
stack  36:    39 
stack  37:    34 274 29 
stack  38:    275 277 113 
stack  39:    140 154 162 
stack  40:    103 
stack  41:    164 70 
stack  42:    68 152 291 
stack  43:    62 118 74 
stack  44:    65 
stack  45:    47 222 213 
stack  46:    253 205 195 
stack  47:    184 219 
stack  48:    148 156 271 
stack  49:    120 61 112 
stack  50:    79 
stack  51:    177 192 26 
stack  52:    122 229 188 
stack  53:    239 281 
stack  54:    260 237 294 
stack  55:    119 124 86 
stack  56:    57 135 242 
stack  57:    268 84 
stack  58:    109 42 
stack  59:    226 25 116 
stack  60:    208 45 21 
stack  61:    282 
stack  62:    223 
stack  63:    72 243 101 
stack  64:    185 194 
stack  65:    131 92 204 
stack  66:    90 285 199 
stack  67:    250 128 240 
stack  68:    161 
stack  69:    220 216 130 
stack  70:    17 
stack  71:    256 
stack  72:    215 247 287 
stack  73:    14 158 93 
stack  74:    189 30 165 
stack  75:    186 83 
stack  76:    234 227 110 
stack  77:    58 
stack  78:    172 64 149 
stack  79:    267 23 
stack  80:    232 0 
stack  81:    97 75 123 
stack  82:    77 55 49 
stack  83:    50 193 190 
stack  84:    98 183 102 
stack  85:    8 
stack  86:    151 31 284 
stack  87:    176 33 270 
stack  88:    150 167 125 
stack  89:    255 276 99 
stack  90:    141 115 10 
stack  91:    87 5 13 
stack  92:    3 
stack  93:    252 295 224 
stack  94:    180 225 6 
stack  95:    155 171 283 
stack  96:    238 80 71 
stack  97:    278 259 82 
stack  98:    142 40 19 
stack  99:    63 46 66 
stack 100:    182 117 196 
stack 101:    88 214 
stack 102:    160 
stack 103:    24 111 18 
stack 104:    1 265 69 
stack 105:    145 32 94 
stack 106:    159 129 187 
stack 107:    266 249 209 
stack 108:    254 262 231 
stack 109:    197 244 43 
stack 110:    217 
stack 111:    44 59 
stack 112:    153 
stack 113:    81 168 
stack 114:    12 105 133 
stack 115:    211 
stack 116:    207 9 
stack 117:    241 52 96 
stack 118:    60 56 298 
stack 119:    95 16 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
time to solve: 0.95 s
objective value: 1360.0

stacks (top to bottom):
stack   0:    126 297 
stack   1:    184 219 
stack   2:    256 194 
stack   3:    129 223 228 
stack   4:    268 160 
stack   5:    58 113 
stack   6:    88 65 
stack   7:    134 185 
stack   8:    161 196 
stack   9:    100 132 
stack  10:    179 22 20 
stack  11:    177 25 26 
stack  12:    183 67 66 
stack  13:    178 73 71 
stack  14:    192 83 85 
stack  15:    189 104 101 
stack  16:    201 135 133 
stack  17:    200 167 168 
stack  18:    210 197 195 
stack  19:    208 212 213 
stack  20:    231 222 224 
stack  21:    230 243 242 
stack  22:    238 260 261 
stack  23:    237 287 286 
stack  24:    245 295 294 
stack  25:    244 11 9 
stack  26:    258 12 10 
stack  27:    253 29 27 
stack  28:    265 30 28 
stack  29:    226 34 37 
stack  30:    248 51 49 
stack  31:    233 122 123 
stack  32:    139 138 
stack  33:    264 146 147 
stack  34:    267 165 166 
stack  35:    181 188 
stack  36:    272 218 221 
stack  37:    239 240 
stack  38:    266 269 270 
stack  39:    278 285 284 
stack  40:    14 13 
stack  41:    91 15 
stack  42:    254 39 
stack  43:    50 48 
stack  44:    250 81 82 
stack  45:    241 84 
stack  46:    277 105 102 
stack  47:    106 107 
stack  48:    47 117 115 
stack  49:    46 118 116 
stack  50:    149 145 144 
stack  51:    207 209 
stack  52:    148 262 263 
stack  53:    124 16 18 
stack  54:    220 17 
stack  55:    172 21 19 
stack  56:    171 87 86 
stack  57:    232 0 
stack  58:    79 98 99 
stack  59:    293 292 
stack  60:    128 130 
stack  61:    252 257 
stack  62:    72 70 
stack  63:    127 76 
stack  64:    24 23 
stack  65:    159 162 
stack  66:    176 175 
stack  67:    202 204 
stack  68:    95 94 
stack  69:    119 3 
stack  70:    68 69 
stack  71:    97 96 
stack  72:    211 
stack  73:    214 
stack  74:    103 
stack  75:    8 
stack  76:    153 
stack  77:    217 
stack  78:    282 
stack  79:    203 
stack  80:    187 4 5 
stack  81:    180 31 32 
stack  82:    190 52 53 
stack  83:    182 54 55 
stack  84:    191 56 57 
stack  85:    186 74 75 
stack  86:    206 77 78 
stack  87:    205 92 93 
stack  88:    225 110 111 
stack  89:    234 112 114 
stack  90:    249 120 121 
stack  91:    43 136 137 
stack  92:    42 140 141 
stack  93:    131 155 156 
stack  94:    143 157 158 
stack  95:    142 169 170 
stack  96:    271 173 174 
stack  97:    80 193 299 
stack  98:    109 198 199 
stack  99:    108 215 216 
stack 100:    45 227 229 
stack 101:    44 235 236 
stack 102:    259 273 274 
stack 103:    255 275 276 
stack 104:    38 279 280 
stack 105:    36 281 283 
stack 106:    251 288 289 
stack 107:    125 290 291 
stack 108:    247 296 298 
stack 109:    1 2 
stack 110:    7 6 
stack 111:    33 35 
stack 112:    41 40 
stack 113:    246 59 61 
stack 114:    60 63 
stack 115:    62 64 
stack 116:    89 90 
stack 117:    150 152 
stack 118:    151 154 
stack 119:    164 163 

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
time to solve: 0.07 s
objective value: 1407.0

stacks (top to bottom):
stack   0:    88 65 214 
stack   1:    7 6 9 
stack   2:    62 64 10 
stack   3:    79 80 11 
stack   4:    109 108 12 
stack   5:    148 149 19 
stack   6:    151 154 20 
stack   7:    177 179 21 
stack   8:    178 183 22 
stack   9:    180 187 27 
stack  10:    182 190 29 
stack  11:    186 191 83 
stack  12:    200 201 85 
stack  13:    208 210 86 
stack  14:    226 225 87 
stack  15:    248 249 101 
stack  16:    250 251 102 
stack  17:    253 258 104 
stack  18:    1 2 105 
stack  19:    42 43 115 
stack  20:    47 46 116 
stack  21:    60 63 117 
stack  22:    89 90 118 
stack  23:    124 125 133 
stack  24:    142 143 135 
stack  25:    164 163 144 
stack  26:    238 237 145 
stack  27:    245 244 146 
stack  28:    255 259 147 
stack  29:    264 265 165 
stack  30:    272 271 166 
stack  31:    33 35 167 
stack  32:    41 40 168 
stack  33:    58 113 294 
stack  34:    150 152 195 
stack  35:    172 171 197 
stack  36:    189 192 212 
stack  37:    206 205 213 
stack  38:    207 209 242 
stack  39:    233 234 222 
stack  40:    246 247 224 
stack  41:    278 277 243 
stack  42:    36 38 260 
stack  43:    230 231 261 
stack  44:    267 266 262 
stack  45:    44 45 263 
stack  46:    129 131 269 
stack  47:    59 61 270 
stack  48:    4 5 284 
stack  49:    31 32 285 
stack  50:    52 53 286 
stack  51:    54 55 287 
stack  52:    56 57 295 
stack  53:    127 76 194 
stack  54:    68 223 228 
stack  55:    24 23 69 
stack  56:    72 70 221 
stack  57:    202 199 18 
stack  58:    98 99 48 
stack  59:    112 114 299 
stack  60:    184 219 
stack  61:    173 174 110 
stack  62:    220 17 
stack  63:    290 291 111 
stack  64:    281 283 297 
stack  65:    16 193 198 
stack  66:    235 236 25 
stack  67:    74 75 96 
stack  68:    97 215 204 
stack  69:    140 141 120 
stack  70:    268 160 
stack  71:    92 93 121 
stack  72:    252 232 0 
stack  73:    77 78 257 
stack  74:    51 49 
stack  75:    155 156 196 
stack  76:    218 216 130 
stack  77:    128 288 289 
stack  78:    106 107 
stack  79:    181 273 274 
stack  80:    139 138 
stack  81:    157 158 188 
stack  82:    134 185 
stack  83:    159 162 
stack  84:    119 293 292 
stack  85:    176 175 
stack  86:    95 81 82 
stack  87:    122 169 170 
stack  88:    14 13 
stack  89:    275 276 123 
stack  90:    241 84 
stack  91:    91 15 
stack  92:    227 229 94 
stack  93:    254 67 66 
stack  94:    50 30 26 
stack  95:    34 73 71 
stack  96:    279 280 37 
stack  97:    136 137 28 
stack  98:    8 
stack  99:    103 
stack 100:    153 
stack 101:    203 
stack 102:    211 
stack 103:    217 
stack 104:    256 
stack 105:    282 
stack 106:    126 
stack 107:    161 
stack 108:    3 
stack 109:    39 
stack 110:    239 
stack 111:    240 
stack 112:    100 
stack 113:    132 
stack 114:    296 
stack 115:    298 
stack 116:    
stack 117:    
stack 118:    
stack 119:    
