solved with: BinPacking Formulation
time to solve: 300.29 s (time limit exceeded)
objective value: 125.0 (not optimal)

stacks (top to bottom):
stack   0:    29 102 253 
stack   1:    23 68 251 
stack   2:    259 228 172 
stack   3:    291 50 268 
stack   4:    48 83 
stack   5:    126 36 215 
stack   6:    210 212 26 
stack   7:    101 54 120 
stack   8:    15 9 179 
stack   9:    292 
stack  10:    209 56 99 
stack  11:    266 
stack  12:    163 
stack  13:    295 81 
stack  14:    140 133 95 
stack  15:    63 148 243 
stack  16:    100 263 
stack  17:    106 273 153 
stack  18:    40 104 258 
stack  19:    45 70 180 
stack  20:    58 12 211 
stack  21:    98 152 198 
stack  22:    283 1 96 
stack  23:    238 89 13 
stack  24:    146 
stack  25:    20 10 252 
stack  26:    245 294 170 
stack  27:    103 49 
stack  28:    143 35 203 
stack  29:    41 274 164 
stack  30:    176 11 44 
stack  31:    65 125 240 
stack  32:    94 110 131 
stack  33:    184 165 
stack  34:    189 57 168 
stack  35:    21 174 218 
stack  36:    39 118 
stack  37:    73 272 
stack  38:    22 191 277 
stack  39:    222 248 181 
stack  40:    190 142 221 
stack  41:    270 116 195 
stack  42:    27 82 79 
stack  43:    38 
stack  44:    86 
stack  45:    150 254 117 
stack  46:    108 93 14 
stack  47:    282 33 
stack  48:    178 28 217 
stack  49:    90 6 78 
stack  50:    175 
stack  51:    257 18 111 
stack  52:    43 
stack  53:    232 122 130 
stack  54:    71 59 200 
stack  55:    183 205 287 
stack  56:    197 285 169 
stack  57:    213 55 265 
stack  58:    157 160 250 
stack  59:    147 202 42 
stack  60:    61 
stack  61:    155 34 159 
stack  62:    162 
stack  63:    97 236 242 
stack  64:    2 225 207 
stack  65:    37 119 127 
stack  66:    246 194 230 
stack  67:    224 
stack  68:    76 199 124 
stack  69:    192 206 5 
stack  70:    239 
stack  71:    107 154 260 
stack  72:    271 289 247 
stack  73:    47 53 279 
stack  74:    185 
stack  75:    114 113 17 
stack  76:    115 139 135 
stack  77:    62 229 3 
stack  78:    0 7 
stack  79:    121 91 74 
stack  80:    241 
stack  81:    51 32 
stack  82:    80 267 299 
stack  83:    137 31 4 
stack  84:    64 24 
stack  85:    264 72 298 
stack  86:    129 255 123 
stack  87:    208 261 
stack  88:    138 66 173 
stack  89:    30 161 234 
stack  90:    186 145 227 
stack  91:    112 
stack  92:    290 151 
stack  93:    280 297 
stack  94:    158 105 220 
stack  95:    214 256 25 
stack  96:    281 188 
stack  97:    223 
stack  98:    201 69 288 
stack  99:    226 231 177 
stack 100:    262 87 
stack 101:    134 128 
stack 102:    235 67 
stack 103:    278 204 182 
stack 104:    88 136 
stack 105:    52 233 16 
stack 106:    293 149 
stack 107:    216 237 46 
stack 108:    187 
stack 109:    132 
stack 110:    286 
stack 111:    193 171 60 
stack 112:    296 77 19 
stack 113:    75 8 109 
stack 114:    196 
stack 115:    166 249 92 
stack 116:    284 167 275 
stack 117:    85 156 144 
stack 118:    244 141 269 
stack 119:    219 276 84 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.69 s (time limit exceeded)
objective value: 1261.0 (not optimal)

stacks (top to bottom):
stack   0:    66 267 96 
stack   1:    226 70 144 
stack   2:    285 214 133 
stack   3:    146 
stack   4:    213 249 168 
stack   5:    9 81 
stack   6:    112 
stack   7:    57 41 273 
stack   8:    271 229 253 
stack   9:    0 65 7 
stack  10:    162 
stack  11:    223 
stack  12:    246 158 299 
stack  13:    283 274 220 
stack  14:    157 176 4 
stack  15:    116 131 12 
stack  16:    126 43 287 
stack  17:    98 102 221 
stack  18:    270 140 288 
stack  19:    262 87 
stack  20:    291 104 164 
stack  21:    219 119 217 
stack  22:    50 11 44 
stack  23:    239 
stack  24:    137 93 289 
stack  25:    209 68 153 
stack  26:    175 
stack  27:    101 54 120 
stack  28:    20 161 180 
stack  29:    280 297 
stack  30:    27 53 135 
stack  31:    64 89 230 
stack  32:    208 269 
stack  33:    107 3 60 
stack  34:    189 59 95 
stack  35:    36 222 173 
stack  36:    264 237 240 
stack  37:    90 82 109 
stack  38:    245 97 247 
stack  39:    290 151 130 
stack  40:    143 260 123 
stack  41:    38 149 
stack  42:    103 150 79 
stack  43:    114 31 124 
stack  44:    37 204 211 
stack  45:    190 236 122 
stack  46:    254 19 265 
stack  47:    266 
stack  48:    80 18 256 
stack  49:    282 33 
stack  50:    174 28 182 
stack  51:    212 142 25 
stack  52:    1 10 113 
stack  53:    8 160 92 
stack  54:    15 179 
stack  55:    138 84 14 
stack  56:    75 183 205 
stack  57:    276 148 207 
stack  58:    293 16 
stack  59:    58 106 83 
stack  60:    185 
stack  61:    186 218 
stack  62:    23 202 5 
stack  63:    147 49 242 
stack  64:    56 171 46 
stack  65:    71 129 
stack  66:    278 167 225 
stack  67:    187 
stack  68:    284 195 26 
stack  69:    73 272 177 
stack  70:    241 
stack  71:    39 118 
stack  72:    295 67 
stack  73:    155 206 268 
stack  74:    139 40 99 
stack  75:    110 194 77 
stack  76:    51 156 
stack  77:    192 62 181 
stack  78:    145 255 105 
stack  79:    178 141 165 
stack  80:    259 228 30 
stack  81:    172 261 234 
stack  82:    201 163 188 
stack  83:    86 
stack  84:    108 13 
stack  85:    2 6 117 
stack  86:    232 294 298 
stack  87:    296 191 
stack  88:    55 125 233 
stack  89:    85 152 91 
stack  90:    184 
stack  91:    48 76 200 
stack  92:    69 35 170 
stack  93:    199 34 275 
stack  94:    100 29 243 
stack  95:    197 63 250 
stack  96:    88 136 
stack  97:    166 257 277 
stack  98:    235 279 
stack  99:    263 
stack 100:    210 215 
stack 101:    132 
stack 102:    121 21 127 
stack 103:    248 169 
stack 104:    196 
stack 105:    281 203 
stack 106:    292 
stack 107:    94 231 159 
stack 108:    134 128 
stack 109:    115 252 
stack 110:    193 32 
stack 111:    61 
stack 112:    244 72 227 
stack 113:    47 42 17 
stack 114:    238 52 74 
stack 115:    286 
stack 116:    45 78 258 
stack 117:    224 24 
stack 118:    22 154 198 
stack 119:    216 251 111 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
