solved with: BinPacking Formulation
time to solve: 300.38 s (time limit exceeded)
objective value: 96.0 (not optimal)

stacks (top to bottom):
stack   0:    291 292 296 
stack   1:    15 71 3 
stack   2:    79 203 196 
stack   3:    258 
stack   4:    112 269 10 
stack   5:    18 184 257 
stack   6:    181 278 
stack   7:    106 164 146 
stack   8:    279 
stack   9:    149 32 211 
stack  10:    268 21 25 
stack  11:    56 127 92 
stack  12:    0 150 232 
stack  13:    275 
stack  14:    286 
stack  15:    182 210 13 
stack  16:    75 43 101 
stack  17:    246 197 154 
stack  18:    41 178 241 
stack  19:    240 97 263 
stack  20:    294 273 54 
stack  21:    137 19 131 
stack  22:    129 222 171 
stack  23:    249 
stack  24:    50 189 260 
stack  25:    261 
stack  26:    188 140 4 
stack  27:    35 194 
stack  28:    169 65 
stack  29:    98 76 95 
stack  30:    186 70 12 
stack  31:    283 80 72 
stack  32:    89 69 
stack  33:    77 
stack  34:    53 
stack  35:    103 277 22 
stack  36:    2 141 172 
stack  37:    224 244 17 
stack  38:    24 199 26 
stack  39:    30 37 161 
stack  40:    123 104 252 
stack  41:    99 
stack  42:    143 160 159 
stack  43:    93 5 113 
stack  44:    105 237 31 
stack  45:    108 282 219 
stack  46:    198 191 109 
stack  47:    58 100 272 
stack  48:    114 133 239 
stack  49:    248 
stack  50:    236 68 228 
stack  51:    96 293 39 
stack  52:    285 52 299 
stack  53:    91 139 287 
stack  54:    175 
stack  55:    27 78 187 
stack  56:    177 284 298 
stack  57:    20 144 138 
stack  58:    130 
stack  59:    183 185 86 
stack  60:    45 
stack  61:    84 152 156 
stack  62:    264 
stack  63:    174 204 134 
stack  64:    167 162 218 
stack  65:    280 247 168 
stack  66:    207 
stack  67:    67 85 235 
stack  68:    265 82 115 
stack  69:    208 223 124 
stack  70:    212 176 7 
stack  71:    190 217 288 
stack  72:    64 73 107 
stack  73:    192 28 63 
stack  74:    14 9 48 
stack  75:    276 23 62 
stack  76:    213 216 226 
stack  77:    88 206 201 
stack  78:    42 
stack  79:    209 233 238 
stack  80:    214 256 
stack  81:    60 125 157 
stack  82:    51 61 271 
stack  83:    165 193 195 
stack  84:    94 221 
stack  85:    225 
stack  86:    274 253 
stack  87:    231 227 
stack  88:    34 
stack  89:    132 
stack  90:    245 202 47 
stack  91:    6 250 254 
stack  92:    102 142 117 
stack  93:    116 110 158 
stack  94:    259 289 242 
stack  95:    270 281 
stack  96:    55 
stack  97:    297 
stack  98:    66 295 74 
stack  99:    166 147 151 
stack 100:    36 87 90 
stack 101:    11 
stack 102:    57 135 148 
stack 103:    145 215 8 
stack 104:    136 179 
stack 105:    267 16 122 
stack 106:    180 153 119 
stack 107:    234 44 
stack 108:    290 
stack 109:    29 262 173 
stack 110:    220 49 128 
stack 111:    111 46 251 
stack 112:    120 
stack 113:    230 200 59 
stack 114:    170 229 
stack 115:    118 243 1 
stack 116:    121 33 163 
stack 117:    126 38 81 
stack 118:    266 205 83 
stack 119:    155 40 255 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.34 s (time limit exceeded)
objective value: 677.0 (not optimal)

stacks (top to bottom):
stack   0:    291 296 239 
stack   1:    2 173 
stack   2:    79 151 104 
stack   3:    16 5 117 
stack   4:    112 24 113 
stack   5:    160 18 263 
stack   6:    75 78 4 
stack   7:    290 
stack   8:    169 65 
stack   9:    180 161 257 
stack  10:    268 1 206 
stack  11:    274 253 
stack  12:    114 150 251 
stack  13:    23 40 76 
stack  14:    270 
stack  15:    103 115 63 
stack  16:    188 26 
stack  17:    152 184 74 
stack  18:    136 49 128 
stack  19:    170 229 
stack  20:    0 199 238 
stack  21:    175 
stack  22:    181 162 272 
stack  23:    111 282 157 
stack  24:    245 174 233 
stack  25:    145 143 86 
stack  26:    140 205 195 
stack  27:    149 292 241 
stack  28:    244 102 22 
stack  29:    130 
stack  30:    27 271 298 
stack  31:    267 204 232 
stack  32:    258 288 17 
stack  33:    234 44 211 
stack  34:    11 62 
stack  35:    212 176 154 
stack  36:    51 106 179 
stack  37:    213 224 10 
stack  38:    42 
stack  39:    94 37 72 
stack  40:    248 
stack  41:    286 
stack  42:    32 110 159 
stack  43:    93 178 200 
stack  44:    98 73 243 
stack  45:    30 197 146 
stack  46:    177 202 90 
stack  47:    116 217 52 
stack  48:    265 153 31 
stack  49:    99 
stack  50:    190 220 54 
stack  51:    20 25 8 
stack  52:    6 295 80 
stack  53:    53 
stack  54:    279 
stack  55:    34 
stack  56:    121 182 148 
stack  57:    71 299 201 
stack  58:    230 127 254 
stack  59:    249 
stack  60:    222 87 260 
stack  61:    108 39 
stack  62:    264 
stack  63:    183 210 95 
stack  64:    214 256 
stack  65:    56 166 278 
stack  66:    45 12 
stack  67:    273 38 101 
stack  68:    294 293 70 
stack  69:    266 223 59 
stack  70:    246 215 109 
stack  71:    126 168 
stack  72:    36 237 287 
stack  73:    82 97 124 
stack  74:    29 15 187 
stack  75:    284 135 19 
stack  76:    14 203 122 
stack  77:    55 
stack  78:    132 
stack  79:    46 252 7 
stack  80:    123 133 171 
stack  81:    125 33 277 
stack  82:    269 276 281 
stack  83:    240 208 13 
stack  84:    297 
stack  85:    57 209 69 
stack  86:    89 259 218 
stack  87:    77 
stack  88:    137 61 172 
stack  89:    118 141 163 
stack  90:    231 227 
stack  91:    66 189 255 
stack  92:    185 247 228 
stack  93:    155 92 131 
stack  94:    50 164 262 
stack  95:    28 191 242 
stack  96:    96 100 235 
stack  97:    216 144 134 
stack  98:    84 68 219 
stack  99:    142 289 85 
stack 100:    275 
stack 101:    280 41 83 
stack 102:    198 21 138 
stack 103:    165 167 107 
stack 104:    236 250 226 
stack 105:    35 194 
stack 106:    67 193 48 
stack 107:    192 158 81 
stack 108:    261 
stack 109:    225 
stack 110:    88 
stack 111:    60 139 196 
stack 112:    120 
stack 113:    9 147 119 
stack 114:    91 43 47 
stack 115:    283 64 3 
stack 116:    186 285 
stack 117:    207 
stack 118:    129 58 221 
stack 119:    105 156 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
