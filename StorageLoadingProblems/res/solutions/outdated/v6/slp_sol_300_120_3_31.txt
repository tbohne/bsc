solved with: BinPacking Formulation
time to solve: 300.30 s (time limit exceeded)
objective value: 26.0 (not optimal)

stacks (top to bottom):
stack   0:    8 
stack   1:    46 88 210 
stack   2:    95 140 93 
stack   3:    43 253 153 
stack   4:    117 217 293 
stack   5:    92 
stack   6:    142 193 119 
stack   7:    99 204 266 
stack   8:    128 82 261 
stack   9:    103 
stack  10:    80 196 113 
stack  11:    104 151 
stack  12:    260 294 26 
stack  13:    50 240 285 
stack  14:    123 136 272 
stack  15:    111 62 86 
stack  16:    109 169 182 
stack  17:    98 144 178 
stack  18:    143 72 262 
stack  19:    75 
stack  20:    51 238 270 
stack  21:    25 57 77 
stack  22:    242 
stack  23:    171 126 125 
stack  24:    265 66 189 
stack  25:    132 
stack  26:    49 296 179 
stack  27:    116 267 159 
stack  28:    21 65 133 
stack  29:    48 207 
stack  30:    174 161 205 
stack  31:    170 45 79 
stack  32:    230 244 32 
stack  33:    53 1 146 
stack  34:    191 5 243 
stack  35:    214 275 158 
stack  36:    290 
stack  37:    278 154 157 
stack  38:    2 59 251 
stack  39:    36 84 192 
stack  40:    64 
stack  41:    85 224 91 
stack  42:    233 40 236 
stack  43:    42 288 52 
stack  44:    264 163 60 
stack  45:    181 71 208 
stack  46:    10 70 234 
stack  47:    222 295 263 
stack  48:    183 164 185 
stack  49:    15 115 188 
stack  50:    168 195 150 
stack  51:    106 254 237 
stack  52:    73 76 20 
stack  53:    286 94 
stack  54:    281 216 246 
stack  55:    202 274 61 
stack  56:    131 31 47 
stack  57:    283 
stack  58:    167 221 173 
stack  59:    156 14 180 
stack  60:    0 96 122 
stack  61:    299 160 
stack  62:    165 
stack  63:    206 23 97 
stack  64:    229 280 37 
stack  65:    81 101 102 
stack  66:    54 271 
stack  67:    197 41 
stack  68:    135 147 276 
stack  69:    7 225 63 
stack  70:    226 
stack  71:    56 241 199 
stack  72:    148 223 273 
stack  73:    24 277 
stack  74:    245 282 90 
stack  75:    16 100 203 
stack  76:    256 118 
stack  77:    137 227 
stack  78:    6 13 297 
stack  79:    18 
stack  80:    55 38 141 
stack  81:    22 44 105 
stack  82:    190 
stack  83:    235 198 28 
stack  84:    68 145 218 
stack  85:    201 232 139 
stack  86:    78 
stack  87:    248 120 247 
stack  88:    255 
stack  89:    284 112 166 
stack  90:    58 
stack  91:    27 83 215 
stack  92:    87 134 152 
stack  93:    29 250 279 
stack  94:    114 184 257 
stack  95:    211 219 172 
stack  96:    35 138 252 
stack  97:    249 
stack  98:    108 
stack  99:    228 239 194 
stack 100:    110 292 
stack 101:    175 177 130 
stack 102:    213 
stack 103:    30 
stack 104:    129 149 162 
stack 105:    259 186 74 
stack 106:    200 298 107 
stack 107:    33 212 209 
stack 108:    268 287 
stack 109:    4 
stack 110:    3 11 
stack 111:    187 
stack 112:    176 
stack 113:    9 269 291 
stack 114:    121 289 12 
stack 115:    231 124 39 
stack 116:    127 
stack 117:    89 155 220 
stack 118:    258 19 69 
stack 119:    34 67 17 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.95 s (time limit exceeded)
objective value: 111.0 (not optimal)

stacks (top to bottom):
stack   0:    24 210 140 
stack   1:    143 164 185 
stack   2:    258 288 199 
stack   3:    265 198 38 
stack   4:    137 225 293 
stack   5:    161 36 186 
stack   6:    235 43 247 
stack   7:    98 96 178 
stack   8:    214 282 261 
stack   9:    192 126 150 
stack  10:    248 66 37 
stack  11:    255 
stack  12:    120 13 102 
stack  13:    183 59 119 
stack  14:    123 42 136 
stack  15:    128 114 173 
stack  16:    78 
stack  17:    89 234 35 
stack  18:    50 262 107 
stack  19:    259 211 86 
stack  20:    216 193 270 
stack  21:    156 275 145 
stack  22:    4 
stack  23:    23 208 152 
stack  24:    46 31 237 
stack  25:    80 144 159 
stack  26:    57 32 130 
stack  27:    260 245 189 
stack  28:    7 267 158 
stack  29:    242 
stack  30:    290 
stack  31:    30 
stack  32:    100 223 20 
stack  33:    239 169 209 
stack  34:    213 
stack  35:    132 
stack  36:    34 49 172 
stack  37:    170 197 41 
stack  38:    117 196 266 
stack  39:    228 84 157 
stack  40:    75 
stack  41:    54 
stack  42:    16 21 9 
stack  43:    190 52 
stack  44:    233 163 236 
stack  45:    181 62 45 
stack  46:    127 
stack  47:    281 60 285 
stack  48:    206 154 93 
stack  49:    106 
stack  50:    200 40 182 
stack  51:    109 269 133 
stack  52:    18 
stack  53:    191 295 250 
stack  54:    286 8 
stack  55:    294 274 179 
stack  56:    95 82 47 
stack  57:    138 121 85 
stack  58:    103 
stack  59:    168 129 257 
stack  60:    174 135 252 
stack  61:    299 160 
stack  62:    171 77 25 
stack  63:    297 105 12 
stack  64:    116 238 204 
stack  65:    101 280 39 
stack  66:    94 
stack  67:    268 162 33 
stack  68:    249 
stack  69:    64 
stack  70:    226 
stack  71:    72 2 291 
stack  72:    187 
stack  73:    167 205 271 
stack  74:    99 29 220 
stack  75:    253 194 203 
stack  76:    147 272 28 
stack  77:    227 
stack  78:    6 277 
stack  79:    88 244 79 
stack  80:    131 188 
stack  81:    87 22 74 
stack  82:    70 224 263 
stack  83:    51 241 90 
stack  84:    195 279 17 
stack  85:    278 67 243 
stack  86:    68 
stack  87:    14 112 184 
stack  88:    287 
stack  89:    284 264 166 
stack  90:    110 292 
stack  91:    134 27 215 
stack  92:    111 296 254 
stack  93:    149 5 69 
stack  94:    58 
stack  95:    229 219 276 
stack  96:    48 218 
stack  97:    19 73 153 
stack  98:    108 
stack  99:    56 251 125 
stack 100:    165 104 151 
stack 101:    175 61 
stack 102:    231 55 246 
stack 103:    222 217 63 
stack 104:    83 148 76 
stack 105:    0 232 146 
stack 106:    53 44 97 
stack 107:    124 240 212 
stack 108:    298 81 26 
stack 109:    92 113 
stack 110:    201 230 91 
stack 111:    3 11 
stack 112:    202 71 141 
stack 113:    142 221 273 
stack 114:    283 176 
stack 115:    1 115 207 
stack 116:    256 118 
stack 117:    10 155 122 
stack 118:    65 139 180 
stack 119:    15 177 289 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
