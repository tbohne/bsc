solved with: BinPacking Formulation
time to solve: 314,96 s (time limit exceeded)
objective value: 2514.0 (not optimal)

stacks (top to bottom):
stack   0:    0 2 1 
stack   1:    5 7 3 
stack   2:    120 162 4 
stack   3:    6 8 9 
stack   4:    10 12 13 
stack   5:    11 
stack   6:    15 18 14 
stack   7:    19 22 16 
stack   8:    405 17 309 
stack   9:    23 25 20 
stack  10:    26 28 21 
stack  11:    305 466 24 
stack  12:    27 69 99 
stack  13:    29 30 32 
stack  14:    149 31 
stack  15:    33 34 35 
stack  16:    39 36 38 
stack  17:    37 
stack  18:    41 40 43 
stack  19:    42 
stack  20:    44 47 45 
stack  21:    46 50 48 
stack  22:    49 52 51 
stack  23:    132 53 
stack  24:    54 55 60 
stack  25:    56 62 61 
stack  26:    57 65 64 
stack  27:    58 68 70 
stack  28:    59 72 71 
stack  29:    483 77 63 
stack  30:    66 74 73 
stack  31:    67 78 75 
stack  32:    79 80 76 
stack  33:    81 83 82 
stack  34:    87 84 85 
stack  35:    165 166 86 
stack  36:    90 93 88 
stack  37:    89 
stack  38:    91 101 96 
stack  39:    354 102 92 
stack  40:    112 198 94 
stack  41:    95 
stack  42:    97 103 104 
stack  43:    98 105 107 
stack  44:    100 108 109 
stack  45:    106 
stack  46:    141 110 131 
stack  47:    111 113 114 
stack  48:    115 116 117 
stack  49:    118 121 123 
stack  50:    119 
stack  51:    122 
stack  52:    126 124 125 
stack  53:    128 130 127 
stack  54:    129 134 135 
stack  55:    133 137 136 
stack  56:    139 142 138 
stack  57:    145 143 140 
stack  58:    146 147 144 
stack  59:    148 150 151 
stack  60:    153 155 152 
stack  61:    158 159 154 
stack  62:    161 160 156 
stack  63:    163 164 157 
stack  64:    167 168 169 
stack  65:    170 171 172 
stack  66:    174 173 176 
stack  67:    175 193 
stack  68:    177 273 247 
stack  69:    457 178 
stack  70:    179 180 181 
stack  71:    183 182 186 
stack  72:    184 195 190 
stack  73:    185 359 187 
stack  74:    188 399 
stack  75:    189 196 192 
stack  76:    191 229 
stack  77:    396 194 
stack  78:    199 197 202 
stack  79:    200 204 203 
stack  80:    201 205 206 
stack  81:    207 208 209 
stack  82:    211 212 210 
stack  83:    213 214 215 
stack  84:    216 217 218 
stack  85:    219 221 220 
stack  86:    222 226 223 
stack  87:    224 228 227 
stack  88:    225 232 231 
stack  89:    230 236 234 
stack  90:    233 238 235 
stack  91:    237 239 242 
stack  92:    240 243 248 
stack  93:    241 251 252 
stack  94:    244 253 255 
stack  95:    245 246 256 
stack  96:    249 258 259 
stack  97:    250 260 261 
stack  98:    254 264 265 
stack  99:    257 
stack 100:    452 262 285 
stack 101:    263 266 267 
stack 102:    270 272 268 
stack 103:    275 274 269 
stack 104:    276 283 271 
stack 105:    278 284 277 
stack 106:    279 
stack 107:    280 286 289 
stack 108:    281 292 293 
stack 109:    282 295 296 
stack 110:    287 299 298 
stack 111:    288 
stack 112:    290 303 301 
stack 113:    291 306 304 
stack 114:    294 307 308 
stack 115:    297 312 310 
stack 116:    300 314 311 
stack 117:    302 318 313 
stack 118:    315 
stack 119:    316 320 317 
stack 120:    321 322 319 
stack 121:    323 325 326 
stack 122:    324 327 328 
stack 123:    329 330 331 
stack 124:    334 332 333 
stack 125:    336 337 335 
stack 126:    339 341 338 
stack 127:    340 
stack 128:    343 342 344 
stack 129:    348 347 345 
stack 130:    349 351 346 
stack 131:    352 355 350 
stack 132:    419 353 449 
stack 133:    357 356 360 
stack 134:    358 362 364 
stack 135:    361 
stack 136:    363 
stack 137:    365 366 367 
stack 138:    368 370 373 
stack 139:    369 374 375 
stack 140:    371 384 377 
stack 141:    372 385 378 
stack 142:    376 
stack 143:    379 387 388 
stack 144:    380 389 391 
stack 145:    381 392 393 
stack 146:    382 394 397 
stack 147:    383 
stack 148:    386 400 404 
stack 149:    390 
stack 150:    395 407 406 
stack 151:    398 
stack 152:    401 
stack 153:    402 410 411 
stack 154:    403 
stack 155:    408 412 414 
stack 156:    409 415 416 
stack 157:    413 418 417 
stack 158:    421 422 420 
stack 159:    426 424 423 
stack 160:    425 
stack 161:    429 428 427 
stack 162:    430 431 432 
stack 163:    433 436 435 
stack 164:    434 437 439 
stack 165:    498 438 
stack 166:    442 440 441 
stack 167:    443 445 444 
stack 168:    446 453 451 
stack 169:    461 447 
stack 170:    448 454 458 
stack 171:    450 459 460 
stack 172:    455 
stack 173:    456 463 464 
stack 174:    462 465 467 
stack 175:    469 468 470 
stack 176:    471 474 475 
stack 177:    472 
stack 178:    473 477 476 
stack 179:    480 481 478 
stack 180:    486 488 479 
stack 181:    489 490 482 
stack 182:    492 493 484 
stack 183:    495 496 485 
stack 184:    499 487 
stack 185:    491 
stack 186:    494 
stack 187:    497 
stack 188:    
stack 189:    
stack 190:    
stack 191:    
stack 192:    
stack 193:    
stack 194:    
stack 195:    
stack 196:    
stack 197:    
stack 198:    
stack 199:    

#####################################################

solved with: ThreeIndex Formulation
time to solve: 303,55 s (time limit exceeded)
objective value: 2320.0 (not optimal)

stacks (top to bottom):
stack   0:    35 32 3 
stack   1:    41 40 75 
stack   2:    22 8 73 
stack   3:    44 51 273 
stack   4:    280 43 13 
stack   5:    172 468 61 
stack   6:    49 65 18 
stack   7:    29 52 259 
stack   8:    481 496 487 
stack   9:    57 47 156 
stack  10:    198 58 15 
stack  11:    54 
stack  12:    250 48 
stack  13:    68 72 55 
stack  14:    33 493 70 
stack  15:    74 25 192 
stack  16:    364 81 12 
stack  17:    83 78 85 
stack  18:    282 84 229 
stack  19:    37 
stack  20:    354 102 92 
stack  21:    112 94 
stack  22:    175 
stack  23:    87 378 14 
stack  24:    91 93 69 
stack  25:    191 
stack  26:    100 101 103 
stack  27:    106 
stack  28:    104 105 76 
stack  29:    107 108 258 
stack  30:    90 115 109 
stack  31:    113 111 136 
stack  32:    119 
stack  33:    116 117 30 
stack  34:    125 124 499 
stack  35:    323 126 121 
stack  36:    457 178 
stack  37:    442 110 131 
stack  38:    129 293 186 
stack  39:    128 180 154 
stack  40:    134 137 494 
stack  41:    95 
stack  42:    139 
stack  43:    142 143 7 
stack  44:    146 147 148 
stack  45:    149 45 21 
stack  46:    150 152 313 
stack  47:    155 253 309 
stack  48:    158 159 164 
stack  49:    185 187 
stack  50:    167 163 406 
stack  51:    168 169 497 
stack  52:    10 160 470 
stack  53:    173 171 231 
stack  54:    11 
stack  55:    305 24 
stack  56:    176 179 484 
stack  57:    46 182 304 
stack  58:    97 387 427 
stack  59:    188 
stack  60:    141 386 247 
stack  61:    183 407 
stack  62:    165 194 
stack  63:    452 262 285 
stack  64:    66 189 385 
stack  65:    195 196 338 
stack  66:    199 193 
stack  67:    200 202 236 
stack  68:    39 205 207 
stack  69:    208 209 440 
stack  70:    211 212 214 
stack  71:    215 216 220 
stack  72:    217 218 190 
stack  73:    219 221 203 
stack  74:    224 317 
stack  75:    53 
stack  76:    225 228 234 
stack  77:    230 232 235 
stack  78:    233 206 
stack  79:    237 238 239 
stack  80:    278 375 
stack  81:    241 242 243 
stack  82:    244 19 
stack  83:    246 248 71 
stack  84:    257 
stack  85:    177 
stack  86:    249 252 458 
stack  87:    255 465 251 
stack  88:    166 86 99 
stack  89:    122 
stack  90:    5 478 127 
stack  91:    260 490 269 
stack  92:    213 263 123 
stack  93:    264 267 271 
stack  94:    265 266 170 
stack  95:    270 272 268 
stack  96:    56 277 
stack  97:    276 256 
stack  98:    240 157 
stack  99:    275 34 
stack 100:    27 16 223 
stack 101:    472 
stack 102:    288 210 
stack 103:    281 283 296 
stack 104:    197 286 298 
stack 105:    287 284 301 
stack 106:    245 292 140 
stack 107:    291 144 
stack 108:    297 299 308 
stack 109:    300 303 261 
stack 110:    324 347 311 
stack 111:    306 307 135 
stack 112:    315 
stack 113:    312 314 60 
stack 114:    316 318 64 
stack 115:    320 321 322 
stack 116:    334 310 
stack 117:    348 325 331 
stack 118:    327 328 326 
stack 119:    329 330 335 
stack 120:    340 181 
stack 121:    332 333 344 
stack 122:    379 336 345 
stack 123:    337 339 96 
stack 124:    341 342 114 
stack 125:    381 350 
stack 126:    349 351 
stack 127:    98 118 353 
stack 128:    67 359 
stack 129:    352 355 356 
stack 130:    279 
stack 131:    368 151 289 
stack 132:    132 361 
stack 133:    363 
stack 134:    360 362 79 
stack 135:    365 366 367 
stack 136:    222 357 
stack 137:    372 370 227 
stack 138:    133 376 
stack 139:    302 371 377 
stack 140:    373 374 491 
stack 141:    380 2 480 
stack 142:    390 
stack 143:    89 
stack 144:    383 
stack 145:    382 384 9 
stack 146:    426 388 488 
stack 147:    153 401 
stack 148:    389 391 393 
stack 149:    392 394 397 
stack 150:    398 
stack 151:    395 492 
stack 152:    396 130 
stack 153:    405 17 
stack 154:    403 
stack 155:    161 495 0 
stack 156:    408 404 
stack 157:    409 411 
stack 158:    433 410 412 
stack 159:    461 414 417 
stack 160:    415 416 418 
stack 161:    290 419 420 
stack 162:    421 423 
stack 163:    425 
stack 164:    422 424 226 
stack 165:    23 428 1 
stack 166:    174 429 
stack 167:    400 431 432 
stack 168:    448 430 
stack 169:    162 434 435 
stack 170:    358 438 
stack 171:    436 437 439 
stack 172:    50 441 444 
stack 173:    456 443 88 
stack 174:    447 
stack 175:    446 449 
stack 176:    145 450 451 
stack 177:    120 4 
stack 178:    498 453 82 
stack 179:    455 
stack 180:    184 
stack 181:    42 
stack 182:    466 346 
stack 183:    413 460 
stack 184:    294 462 274 
stack 185:    463 464 445 
stack 186:    473 467 20 
stack 187:    343 295 479 
stack 188:    369 31 
stack 189:    469 459 80 
stack 190:    471 138 
stack 191:    483 62 482 
stack 192:    475 477 319 
stack 193:    36 474 399 
stack 194:    77 63 
stack 195:    201 38 
stack 196:    489 454 204 
stack 197:    254 26 476 
stack 198:    6 28 486 
stack 199:    59 402 485 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
