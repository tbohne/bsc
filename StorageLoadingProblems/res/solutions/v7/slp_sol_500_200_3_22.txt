solved with: BinPacking Formulation
time to solve: 300,28 s (time limit exceeded)
objective value: 2619.0 (not optimal)

stacks (top to bottom):
stack   0:    0 1 2 
stack   1:    3 6 4 
stack   2:    7 8 5 
stack   3:    9 10 14 
stack   4:    11 17 15 
stack   5:    12 286 
stack   6:    13 18 25 
stack   7:    16 89 76 
stack   8:    19 26 27 
stack   9:    20 
stack  10:    21 30 32 
stack  11:    22 36 33 
stack  12:    23 188 98 
stack  13:    24 37 34 
stack  14:    38 28 39 
stack  15:    29 61 
stack  16:    31 40 41 
stack  17:    35 42 43 
stack  18:    45 44 48 
stack  19:    46 50 49 
stack  20:    47 52 53 
stack  21:    51 54 55 
stack  22:    56 57 58 
stack  23:    60 59 63 
stack  24:    62 64 67 
stack  25:    65 69 71 
stack  26:    66 
stack  27:    72 68 178 
stack  28:    70 75 73 
stack  29:    123 74 
stack  30:    80 77 78 
stack  31:    81 83 79 
stack  32:    82 
stack  33:    84 86 85 
stack  34:    88 93 87 
stack  35:    94 95 90 
stack  36:    100 101 91 
stack  37:    104 103 92 
stack  38:    96 
stack  39:    97 
stack  40:    99 
stack  41:    108 105 102 
stack  42:    109 110 106 
stack  43:    107 
stack  44:    112 111 116 
stack  45:    137 113 181 
stack  46:    114 124 117 
stack  47:    115 126 119 
stack  48:    118 127 120 
stack  49:    121 132 125 
stack  50:    122 
stack  51:    130 136 128 
stack  52:    134 139 129 
stack  53:    140 141 131 
stack  54:    383 211 133 
stack  55:    146 143 135 
stack  56:    147 150 138 
stack  57:    154 151 142 
stack  58:    144 330 
stack  59:    262 145 302 
stack  60:    156 155 148 
stack  61:    149 
stack  62:    152 
stack  63:    157 163 153 
stack  64:    159 165 158 
stack  65:    161 167 160 
stack  66:    166 171 162 
stack  67:    169 172 164 
stack  68:    170 174 168 
stack  69:    176 177 173 
stack  70:    182 184 175 
stack  71:    185 186 179 
stack  72:    306 180 
stack  73:    187 191 183 
stack  74:    193 195 189 
stack  75:    196 197 190 
stack  76:    199 201 192 
stack  77:    202 203 194 
stack  78:    204 205 198 
stack  79:    207 208 200 
stack  80:    271 206 294 
stack  81:    209 210 212 
stack  82:    213 214 215 
stack  83:    217 218 216 
stack  84:    222 219 221 
stack  85:    357 220 
stack  86:    223 336 299 
stack  87:    224 225 227 
stack  88:    226 298 232 
stack  89:    228 230 229 
stack  90:    233 231 235 
stack  91:    254 234 409 
stack  92:    237 238 236 
stack  93:    240 239 243 
stack  94:    241 245 244 
stack  95:    242 247 248 
stack  96:    250 246 252 
stack  97:    249 255 253 
stack  98:    251 257 256 
stack  99:    260 259 258 
stack 100:    263 261 264 
stack 101:    265 266 267 
stack 102:    270 277 268 
stack 103:    272 279 269 
stack 104:    273 280 275 
stack 105:    274 285 278 
stack 106:    276 287 282 
stack 107:    281 462 333 
stack 108:    283 
stack 109:    284 288 289 
stack 110:    290 295 291 
stack 111:    292 
stack 112:    293 296 303 
stack 113:    297 304 307 
stack 114:    300 311 308 
stack 115:    301 312 313 
stack 116:    305 314 315 
stack 117:    309 
stack 118:    310 317 318 
stack 119:    316 319 322 
stack 120:    320 
stack 121:    321 
stack 122:    323 
stack 123:    324 
stack 124:    326 325 329 
stack 125:    327 331 332 
stack 126:    328 340 337 
stack 127:    406 442 334 
stack 128:    371 411 335 
stack 129:    345 344 338 
stack 130:    339 466 
stack 131:    348 349 341 
stack 132:    342 
stack 133:    351 356 343 
stack 134:    346 
stack 135:    355 358 347 
stack 136:    360 364 350 
stack 137:    361 366 352 
stack 138:    362 368 353 
stack 139:    367 369 354 
stack 140:    370 372 359 
stack 141:    374 375 363 
stack 142:    378 376 365 
stack 143:    382 387 373 
stack 144:    377 
stack 145:    385 388 379 
stack 146:    380 
stack 147:    386 389 381 
stack 148:    390 392 384 
stack 149:    391 475 453 
stack 150:    393 394 395 
stack 151:    396 398 399 
stack 152:    397 401 402 
stack 153:    400 
stack 154:    407 404 403 
stack 155:    408 412 405 
stack 156:    410 
stack 157:    413 414 415 
stack 158:    418 420 416 
stack 159:    421 422 417 
stack 160:    423 424 419 
stack 161:    425 426 427 
stack 162:    428 432 433 
stack 163:    451 473 429 
stack 164:    430 434 440 
stack 165:    431 441 443 
stack 166:    468 435 487 
stack 167:    436 449 446 
stack 168:    437 455 448 
stack 169:    438 445 
stack 170:    439 489 
stack 171:    444 457 450 
stack 172:    447 461 454 
stack 173:    452 469 470 
stack 174:    456 471 472 
stack 175:    458 474 477 
stack 176:    459 
stack 177:    460 479 481 
stack 178:    463 482 484 
stack 179:    464 
stack 180:    465 486 485 
stack 181:    467 490 491 
stack 182:    476 496 492 
stack 183:    478 
stack 184:    480 
stack 185:    483 497 493 
stack 186:    488 498 
stack 187:    494 
stack 188:    495 
stack 189:    499 
stack 190:    
stack 191:    
stack 192:    
stack 193:    
stack 194:    
stack 195:    
stack 196:    
stack 197:    
stack 198:    
stack 199:    

#####################################################

solved with: ThreeIndex Formulation
time to solve: 303,31 s (time limit exceeded)
objective value: 2314.0 (not optimal)

stacks (top to bottom):
stack   0:    321 
stack   1:    146 116 
stack   2:    270 373 78 
stack   3:    436 325 193 
stack   4:    29 
stack   5:    314 217 481 
stack   6:    380 
stack   7:    458 246 365 
stack   8:    250 150 54 
stack   9:    46 202 288 
stack  10:    96 
stack  11:    285 493 102 
stack  12:    390 67 17 
stack  13:    123 454 
stack  14:    226 
stack  15:    38 77 106 
stack  16:    361 317 229 
stack  17:    36 366 44 
stack  18:    316 18 237 
stack  19:    400 
stack  20:    435 216 487 
stack  21:    263 408 
stack  22:    60 222 376 
stack  23:    456 208 255 
stack  24:    460 
stack  25:    20 
stack  26:    137 447 
stack  27:    254 157 495 
stack  28:    260 83 414 
stack  29:    420 100 294 
stack  30:    144 
stack  31:    478 
stack  32:    223 113 
stack  33:    292 
stack  34:    393 491 409 
stack  35:    15 243 419 
stack  36:    45 354 
stack  37:    156 275 76 
stack  38:    227 394 194 
stack  39:    423 319 466 
stack  40:    470 239 353 
stack  41:    411 310 192 
stack  42:    274 492 
stack  43:    306 180 
stack  44:    351 174 87 
stack  45:    480 248 
stack  46:    19 65 339 
stack  47:    40 440 322 
stack  48:    357 220 
stack  49:    177 295 347 
stack  50:    342 
stack  51:    115 187 128 
stack  52:    410 
stack  53:    300 441 4 
stack  54:    165 75 462 
stack  55:    385 52 363 
stack  56:    1 64 236 
stack  57:    240 396 486 
stack  58:    167 340 232 
stack  59:    22 136 171 
stack  60:    259 278 34 
stack  61:    152 
stack  62:    209 368 
stack  63:    66 
stack  64:    311 490 147 
stack  65:    276 32 299 
stack  66:    327 
stack  67:    62 401 175 
stack  68:    358 184 384 
stack  69:    12 286 
stack  70:    421 370 298 
stack  71:    257 185 453 
stack  72:    430 349 119 
stack  73:    124 41 318 
stack  74:    204 427 89 
stack  75:    309 
stack  76:    196 132 405 
stack  77:    21 207 109 
stack  78:    387 127 5 
stack  79:    355 485 73 
stack  80:    386 142 
stack  81:    3 141 
stack  82:    70 191 450 
stack  83:    377 
stack  84:    31 241 
stack  85:    161 50 172 
stack  86:    35 2 49 
stack  87:    389 267 135 
stack  88:    159 429 234 
stack  89:    301 442 334 
stack  90:    218 235 258 
stack  91:    23 
stack  92:    280 53 148 
stack  93:    228 111 120 
stack  94:    166 489 
stack  95:    26 471 296 
stack  96:    121 139 266 
stack  97:    283 181 
stack  98:    82 
stack  99:    494 
stack 100:    407 154 472 
stack 101:    118 43 
stack 102:    47 6 168 
stack 103:    312 0 479 
stack 104:    272 362 499 
stack 105:    155 277 188 
stack 106:    242 10 190 
stack 107:    99 
stack 108:    63 469 160 
stack 109:    233 245 416 
stack 110:    483 341 
stack 111:    374 131 253 
stack 112:    7 261 92 
stack 113:    406 108 189 
stack 114:    434 205 33 
stack 115:    345 39 
stack 116:    367 42 215 
stack 117:    249 398 308 
stack 118:    422 48 117 
stack 119:    182 225 381 
stack 120:    464 
stack 121:    356 210 153 
stack 122:    97 
stack 123:    468 273 269 
stack 124:    247 101 433 
stack 125:    293 162 
stack 126:    444 183 
stack 127:    201 27 372 
stack 128:    397 197 350 
stack 129:    488 125 
stack 130:    371 57 484 
stack 131:    497 14 173 
stack 132:    58 126 265 
stack 133:    465 16 
stack 134:    452 114 164 
stack 135:    439 
stack 136:    224 93 432 
stack 137:    328 412 498 
stack 138:    122 
stack 139:    281 198 
stack 140:    378 264 
stack 141:    84 332 343 
stack 142:    213 176 221 
stack 143:    467 59 98 
stack 144:    305 88 
stack 145:    271 231 352 
stack 146:    413 151 330 
stack 147:    463 24 446 
stack 148:    437 359 
stack 149:    474 69 329 
stack 150:    199 326 388 
stack 151:    81 395 336 
stack 152:    107 
stack 153:    297 86 
stack 154:    438 445 
stack 155:    476 461 238 
stack 156:    112 399 302 
stack 157:    145 
stack 158:    13 455 417 
stack 159:    320 
stack 160:    382 68 178 
stack 161:    375 424 313 
stack 162:    383 211 133 
stack 163:    426 392 129 
stack 164:    170 74 
stack 165:    80 338 303 
stack 166:    402 103 268 
stack 167:    428 230 79 
stack 168:    149 
stack 169:    448 291 91 
stack 170:    404 344 287 
stack 171:    28 179 85 
stack 172:    51 203 
stack 173:    143 252 315 
stack 174:    360 110 244 
stack 175:    477 30 219 
stack 176:    279 186 56 
stack 177:    169 425 138 
stack 178:    323 
stack 179:    9 163 256 
stack 180:    134 348 415 
stack 181:    290 195 333 
stack 182:    482 8 496 
stack 183:    457 364 307 
stack 184:    206 335 337 
stack 185:    72 451 459 
stack 186:    11 289 200 
stack 187:    331 403 214 
stack 188:    431 90 
stack 189:    251 95 61 
stack 190:    25 71 282 
stack 191:    418 55 449 
stack 192:    369 304 37 
stack 193:    104 443 158 
stack 194:    324 
stack 195:    391 475 
stack 196:    284 140 379 
stack 197:    346 
stack 198:    473 94 105 
stack 199:    130 262 212 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
