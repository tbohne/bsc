solved with: SLP.mip_formulations.BinPackingFormulation
time limit: 180 s
time to solve: 180.56 s (time limit exceeded)
objective value: 732.0 (not optimal)

stacks (top to bottom):
stack   0:    108 10 
stack   1:    2 
stack   2:    123 32 
stack   3:    296 168 
stack   4:    17 
stack   5:    65 13 
stack   6:    0 
stack   7:    119 264 
stack   8:    222 12 
stack   9:    257 101 
stack  10:    114 105 
stack  11:    14 
stack  12:    15 
stack  13:    100 247 
stack  14:    40 73 
stack  15:    34 120 
stack  16:    27 51 
stack  17:    90 
stack  18:    170 53 
stack  19:    26 
stack  20:    162 28 
stack  21:    199 47 
stack  22:    50 59 
stack  23:    216 38 
stack  24:    112 39 
stack  25:    37 
stack  26:    44 43 
stack  27:    129 148 
stack  28:    55 
stack  29:    46 
stack  30:    298 266 
stack  31:    62 94 
stack  32:    49 
stack  33:    64 145 
stack  34:    165 82 
stack  35:    54 
stack  36:    205 71 
stack  37:    58 
stack  38:    290 93 
stack  39:    61 
stack  40:    195 19 
stack  41:    16 66 
stack  42:    68 
stack  43:    132 67 
stack  44:    164 
stack  45:    70 
stack  46:    214 74 
stack  47:    228 75 
stack  48:    87 143 
stack  49:    86 131 
stack  50:    77 149 
stack  51:    79 
stack  52:    78 103 
stack  53:    80 
stack  54:    89 83 
stack  55:    113 81 
stack  56:    213 91 
stack  57:    194 92 
stack  58:    115 258 
stack  59:    179 96 
stack  60:    253 95 
stack  61:    169 142 
stack  62:    187 
stack  63:    98 191 
stack  64:    259 212 
stack  65:    156 5 
stack  66:    121 
stack  67:    84 291 
stack  68:    107 
stack  69:    133 60 
stack  70:    125 141 
stack  71:    184 226 
stack  72:    127 111 
stack  73:    263 144 
stack  74:    158 76 
stack  75:    117 
stack  76:    198 146 
stack  77:    122 
stack  78:    41 235 
stack  79:    124 218 
stack  80:    243 130 
stack  81:    135 
stack  82:    136 134 
stack  83:    128 
stack  84:    137 183 
stack  85:    138 239 
stack  86:    250 139 
stack  87:    287 
stack  88:    140 211 
stack  89:    249 219 
stack  90:    175 171 
stack  91:    151 
stack  92:    292 52 
stack  93:    72 152 
stack  94:    153 189 
stack  95:    154 
stack  96:    215 157 
stack  97:    159 192 
stack  98:    7 85 
stack  99:    163 
stack 100:    167 106 
stack 101:    166 
stack 102:    244 181 
stack 103:    203 177 
stack 104:    172 
stack 105:    238 116 
stack 106:    48 208 
stack 107:    160 237 
stack 108:    69 223 
stack 109:    25 178 
stack 110:    294 
stack 111:    185 283 
stack 112:    220 186 
stack 113:    182 
stack 114:    23 
stack 115:    110 293 
stack 116:    188 
stack 117:    246 227 
stack 118:    193 11 
stack 119:    196 
stack 120:    176 297 
stack 121:    197 
stack 122:    217 204 
stack 123:    42 
stack 124:    280 207 
stack 125:    206 18 
stack 126:    210 
stack 127:    147 229 
stack 128:    225 202 
stack 129:    230 281 
stack 130:    29 282 
stack 131:    209 224 
stack 132:    221 
stack 133:    231 
stack 134:    288 232 
stack 135:    276 233 
stack 136:    234 
stack 137:    35 99 
stack 138:    241 
stack 139:    240 126 
stack 140:    248 173 
stack 141:    251 
stack 142:    242 268 
stack 143:    245 
stack 144:    97 252 
stack 145:    102 22 
stack 146:    299 
stack 147:    255 
stack 148:    254 275 
stack 149:    256 
stack 150:    289 265 
stack 151:    180 88 
stack 152:    260 
stack 153:    261 
stack 154:    270 
stack 155:    274 
stack 156:    267 190 
stack 157:    262 
stack 158:    269 
stack 159:    57 273 
stack 160:    272 174 
stack 161:    150 277 
stack 162:    161 271 
stack 163:    278 
stack 164:    279 
stack 165:    118 284 
stack 166:    155 286 
stack 167:    285 236 
stack 168:    104 
stack 169:    56 30 
stack 170:    200 
stack 171:    6 31 
stack 172:    295 
stack 173:    9 45 
stack 174:    8 20 
stack 175:    3 109 
stack 176:    4 24 
stack 177:    1 21 
stack 178:    36 63 
stack 179:    33 201 

#####################################################

solved with: SLP.mip_formulations.ThreeIndexFormulation
time limit: 180 s
time to solve: 32.57 s
objective value: 300.0

stacks (top to bottom):
stack   0:    68 
stack   1:    234 
stack   2:    170 29 
stack   3:    296 0 
stack   4:    284 
stack   5:    16 28 
stack   6:    14 
stack   7:    124 200 
stack   8:    253 55 
stack   9:    182 
stack  10:    257 183 
stack  11:    56 227 
stack  12:    49 
stack  13:    223 
stack  14:    58 299 
stack  15:    225 120 
stack  16:    48 42 
stack  17:    288 118 
stack  18:    51 
stack  19:    71 41 
stack  20:    162 218 
stack  21:    15 
stack  22:    217 21 
stack  23:    121 85 
stack  24:    196 192 
stack  25:    75 
stack  26:    157 43 
stack  27:    129 99 
stack  28:    98 
stack  29:    106 
stack  30:    115 60 
stack  31:    210 
stack  32:    113 130 
stack  33:    17 224 
stack  34:    197 
stack  35:    65 178 
stack  36:    136 82 
stack  37:    198 194 
stack  38:    202 189 
stack  39:    33 206 
stack  40:    19 88 
stack  41:    175 13 
stack  42:    261 5 
stack  43:    119 171 
stack  44:    208 168 
stack  45:    80 
stack  46:    238 282 
stack  47:    84 173 
stack  48:    7 
stack  49:    1 134 
stack  50:    246 236 
stack  51:    104 
stack  52:    26 
stack  53:    195 204 
stack  54:    79 
stack  55:    276 64 
stack  56:    135 
stack  57:    70 
stack  58:    117 
stack  59:    248 179 
stack  60:    221 
stack  61:    274 142 
stack  62:    255 
stack  63:    46 
stack  64:    259 105 
stack  65:    72 265 
stack  66:    35 273 
stack  67:    34 291 
stack  68:    156 226 
stack  69:    114 
stack  70:    128 
stack  71:    40 63 
stack  72:    139 111 
stack  73:    240 144 
stack  74:    269 127 
stack  75:    87 47 
stack  76:    9 146 
stack  77:    155 161 
stack  78:    73 30 
stack  79:    287 
stack  80:    86 116 
stack  81:    215 
stack  82:    44 237 
stack  83:    154 219 
stack  84:    137 231 
stack  85:    153 229 
stack  86:    27 212 
stack  87:    169 45 
stack  88:    62 264 
stack  89:    292 
stack  90:    207 
stack  91:    158 281 
stack  92:    112 39 
stack  93:    25 90 
stack  94:    4 126 
stack  95:    298 
stack  96:    285 141 
stack  97:    249 10 
stack  98:    214 32 
stack  99:    163 
stack 100:    251 
stack 101:    61 
stack 102:    244 181 
stack 103:    290 
stack 104:    107 
stack 105:    280 293 
stack 106:    294 
stack 107:    31 149 
stack 108:    222 12 
stack 109:    185 187 
stack 110:    228 266 
stack 111:    57 38 
stack 112:    180 297 
stack 113:    94 
stack 114:    100 101 
stack 115:    203 103 
stack 116:    66 148 
stack 117:    233 59 
stack 118:    286 145 
stack 119:    262 
stack 120:    193 
stack 121:    23 
stack 122:    213 24 
stack 123:    36 93 
stack 124:    6 109 
stack 125:    133 186 
stack 126:    270 
stack 127:    125 235 
stack 128:    97 20 
stack 129:    167 2 
stack 130:    176 92 
stack 131:    147 239 
stack 132:    243 96 
stack 133:    151 
stack 134:    209 258 
stack 135:    110 69 
stack 136:    242 268 
stack 137:    184 271 
stack 138:    132 191 
stack 139:    199 177 
stack 140:    279 
stack 141:    89 11 
stack 142:    220 52 
stack 143:    150 275 
stack 144:    91 
stack 145:    102 252 
stack 146:    254 131 
stack 147:    122 
stack 148:    272 95 
stack 149:    37 22 
stack 150:    140 211 
stack 151:    241 
stack 152:    245 
stack 153:    160 174 
stack 154:    263 123 
stack 155:    277 
stack 156:    159 
stack 157:    232 
stack 158:    256 
stack 159:    295 
stack 160:    143 76 
stack 161:    172 
stack 162:    278 
stack 163:    166 205 
stack 164:    83 283 
stack 165:    77 
stack 166:    108 53 
stack 167:    165 81 
stack 168:    50 18 
stack 169:    138 
stack 170:    188 
stack 171:    267 190 
stack 172:    216 247 
stack 173:    54 
stack 174:    250 8 
stack 175:    3 74 
stack 176:    78 260 
stack 177:    164 67 
stack 178:    289 152 
stack 179:    230 201 
