solved with: BinPacking Formulation
time to solve: 186.86 s
objective value: 0.0

stacks (top to bottom):
stack   0:    106 262 91 
stack   1:    85 52 96 
stack   2:    180 150 233 
stack   3:    79 217 277 
stack   4:    237 156 265 
stack   5:    224 28 109 
stack   6:    58 197 46 
stack   7:    174 238 
stack   8:    25 76 192 
stack   9:    149 157 67 
stack  10:    184 118 72 
stack  11:    59 286 160 
stack  12:    14 51 210 
stack  13:    93 219 247 
stack  14:    284 48 81 
stack  15:    123 105 199 
stack  16:    120 182 207 
stack  17:    203 
stack  18:    17 139 172 
stack  19:    198 173 166 
stack  20:    104 49 144 
stack  21:    269 231 33 
stack  22:    213 
stack  23:    66 138 7 
stack  24:    19 209 22 
stack  25:    63 283 15 
stack  26:    148 4 171 
stack  27:    26 137 68 
stack  28:    242 293 295 
stack  29:    78 
stack  30:    152 
stack  31:    88 292 103 
stack  32:    6 241 98 
stack  33:    216 206 29 
stack  34:    0 10 272 
stack  35:    134 9 50 
stack  36:    266 287 155 
stack  37:    275 165 279 
stack  38:    175 285 95 
stack  39:    276 256 89 
stack  40:    133 
stack  41:    294 278 222 
stack  42:    193 61 43 
stack  43:    260 263 80 
stack  44:    153 131 
stack  45:    38 24 92 
stack  46:    179 289 8 
stack  47:    254 282 191 
stack  48:    69 127 
stack  49:    253 245 187 
stack  50:    62 189 162 
stack  51:    37 45 136 
stack  52:    34 
stack  53:    13 183 147 
stack  54:    268 110 122 
stack  55:    97 
stack  56:    30 273 204 
stack  57:    230 99 
stack  58:    128 64 164 
stack  59:    200 185 18 
stack  60:    232 267 42 
stack  61:    252 
stack  62:    3 271 74 
stack  63:    140 125 240 
stack  64:    170 255 
stack  65:    100 116 214 
stack  66:    235 299 82 
stack  67:    205 
stack  68:    2 
stack  69:    41 154 215 
stack  70:    161 243 60 
stack  71:    40 195 167 
stack  72:    39 
stack  73:    20 
stack  74:    291 77 35 
stack  75:    32 84 176 
stack  76:    47 
stack  77:    178 212 16 
stack  78:    44 70 296 
stack  79:    249 223 264 
stack  80:    101 208 75 
stack  81:    113 126 259 
stack  82:    220 
stack  83:    145 226 251 
stack  84:    71 297 250 
stack  85:    27 
stack  86:    225 23 
stack  87:    211 234 274 
stack  88:    261 
stack  89:    159 73 121 
stack  90:    130 
stack  91:    12 94 290 
stack  92:    56 124 117 
stack  93:    65 11 107 
stack  94:    108 
stack  95:    227 236 54 
stack  96:    112 5 53 
stack  97:    132 57 90 
stack  98:    177 
stack  99:    143 196 239 
stack 100:    218 114 87 
stack 101:    86 
stack 102:    135 201 163 
stack 103:    142 36 248 
stack 104:    1 129 280 
stack 105:    111 
stack 106:    186 119 
stack 107:    281 188 141 
stack 108:    221 
stack 109:    258 194 244 
stack 110:    228 298 
stack 111:    190 
stack 112:    257 288 158 
stack 113:    55 146 229 
stack 114:    169 
stack 115:    151 
stack 116:    115 
stack 117:    21 31 102 
stack 118:    270 202 181 
stack 119:    168 246 83 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.71 s (time limit exceeded)
objective value: 231.0 (not optimal)

stacks (top to bottom):
stack   0:    170 255 
stack   1:    266 251 46 
stack   2:    252 
stack   3:    132 87 155 
stack   4:    218 7 43 
stack   5:    281 188 54 
stack   6:    85 219 162 
stack   7:    106 241 238 
stack   8:    56 26 264 
stack   9:    190 
stack  10:    151 
stack  11:    216 48 240 
stack  12:    86 
stack  13:    291 202 114 
stack  14:    289 70 60 
stack  15:    196 77 229 
stack  16:    177 
stack  17:    228 57 90 
stack  18:    203 
stack  19:    260 288 50 
stack  20:    68 164 75 
stack  21:    161 49 
stack  22:    116 278 22 
stack  23:    270 234 33 
stack  24:    193 247 
stack  25:    174 
stack  26:    66 124 107 
stack  27:    198 123 204 
stack  28:    242 73 42 
stack  29:    44 
stack  30:    12 118 192 
stack  31:    152 
stack  32:    142 31 82 
stack  33:    254 156 167 
stack  34:    268 194 272 
stack  35:    276 244 201 
stack  36:    178 165 239 
stack  37:    169 
stack  38:    231 207 285 
stack  39:    120 30 144 
stack  40:    108 210 
stack  41:    220 
stack  42:    261 
stack  43:    263 208 76 
stack  44:    55 248 211 
stack  45:    180 286 3 
stack  46:    126 176 16 
stack  47:    62 227 136 
stack  48:    99 
stack  49:    168 295 187 
stack  50:    175 274 267 
stack  51:    10 9 147 
stack  52:    101 157 105 
stack  53:    275 273 296 
stack  54:    253 89 
stack  55:    13 52 122 
stack  56:    78 214 
stack  57:    131 205 
stack  58:    37 154 91 
stack  59:    111 
stack  60:    58 0 18 
stack  61:    134 195 189 
stack  62:    262 40 67 
stack  63:    182 223 98 
stack  64:    200 185 
stack  65:    19 83 
stack  66:    237 298 
stack  67:    41 213 
stack  68:    257 293 11 
stack  69:    1 215 172 
stack  70:    93 24 74 
stack  71:    249 206 191 
stack  72:    179 121 4 
stack  73:    59 271 199 
stack  74:    243 287 160 
stack  75:    32 94 212 
stack  76:    133 
stack  77:    269 277 259 
stack  78:    279 217 29 
stack  79:    284 79 250 
stack  80:    112 235 72 
stack  81:    88 45 163 
stack  82:    294 110 8 
stack  83:    149 23 
stack  84:    153 225 
stack  85:    27 
stack  86:    140 20 
stack  87:    21 150 80 
stack  88:    113 129 171 
stack  89:    143 63 117 
stack  90:    221 
stack  91:    47 
stack  92:    145 226 81 
stack  93:    84 283 64 
stack  94:    258 297 166 
stack  95:    34 
stack  96:    137 5 53 
stack  97:    6 236 181 
stack  98:    230 28 109 
stack  99:    184 290 233 
stack 100:    100 127 
stack 101:    128 2 
stack 102:    135 209 222 
stack 103:    115 
stack 104:    159 299 280 
stack 105:    104 256 92 
stack 106:    186 119 
stack 107:    138 14 141 
stack 108:    197 36 95 
stack 109:    71 282 139 
stack 110:    245 125 96 
stack 111:    224 61 35 
stack 112:    39 
stack 113:    183 146 103 
stack 114:    38 232 65 
stack 115:    130 97 
stack 116:    25 292 158 
stack 117:    51 102 15 
stack 118:    69 17 265 
stack 119:    148 173 246 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
