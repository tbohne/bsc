solved with: BinPacking Formulation
time to solve: 300.69 s (time limit exceeded)
objective value: 2.0 (not optimal)

stacks (top to bottom):
stack   0:    202 90 51 
stack   1:    214 
stack   2:    164 189 1 
stack   3:    198 215 106 
stack   4:    0 194 
stack   5:    22 
stack   6:    244 
stack   7:    123 130 133 
stack   8:    229 297 222 
stack   9:    156 136 288 
stack  10:    33 
stack  11:    52 129 76 
stack  12:    107 227 158 
stack  13:    121 245 252 
stack  14:    259 8 180 
stack  15:    119 32 154 
stack  16:    138 248 284 
stack  17:    12 
stack  18:    200 
stack  19:    146 89 128 
stack  20:    105 263 151 
stack  21:    38 
stack  22:    93 190 
stack  23:    237 108 179 
stack  24:    167 159 298 
stack  25:    145 177 54 
stack  26:    115 117 287 
stack  27:    102 125 293 
stack  28:    19 98 212 
stack  29:    196 41 94 
stack  30:    88 49 28 
stack  31:    40 201 230 
stack  32:    62 
stack  33:    118 24 26 
stack  34:    48 112 59 
stack  35:    127 173 16 
stack  36:    20 25 181 
stack  37:    204 277 236 
stack  38:    82 268 155 
stack  39:    67 78 91 
stack  40:    270 43 
stack  41:    241 296 219 
stack  42:    79 250 
stack  43:    57 184 228 
stack  44:    150 153 278 
stack  45:    100 162 73 
stack  46:    221 166 142 
stack  47:    160 46 
stack  48:    29 192 80 
stack  49:    168 217 11 
stack  50:    261 
stack  51:    246 
stack  52:    299 223 256 
stack  53:    66 209 170 
stack  54:    191 135 75 
stack  55:    113 
stack  56:    85 269 174 
stack  57:    283 186 143 
stack  58:    9 23 294 
stack  59:    224 126 122 
stack  60:    240 
stack  61:    265 275 44 
stack  62:    35 71 271 
stack  63:    17 101 81 
stack  64:    2 39 234 
stack  65:    63 
stack  66:    144 262 203 
stack  67:    260 242 55 
stack  68:    286 69 56 
stack  69:    15 272 
stack  70:    251 134 
stack  71:    232 
stack  72:    182 289 220 
stack  73:    77 50 84 
stack  74:    148 7 34 
stack  75:    276 171 
stack  76:    64 
stack  77:    205 254 282 
stack  78:    99 103 74 
stack  79:    211 
stack  80:    86 131 
stack  81:    147 274 58 
stack  82:    31 95 292 
stack  83:    140 68 114 
stack  84:    178 249 279 
stack  85:    6 137 199 
stack  86:    152 
stack  87:    47 
stack  88:    61 124 207 
stack  89:    110 116 266 
stack  90:    4 176 197 
stack  91:    157 206 65 
stack  92:    210 60 
stack  93:    37 83 295 
stack  94:    96 3 
stack  95:    163 183 264 
stack  96:    109 233 213 
stack  97:    21 195 175 
stack  98:    172 290 70 
stack  99:    243 253 255 
stack 100:    139 165 235 
stack 101:    285 
stack 102:    42 
stack 103:    104 
stack 104:    30 97 216 
stack 105:    273 247 
stack 106:    169 
stack 107:    225 
stack 108:    72 239 267 
stack 109:    53 226 291 
stack 110:    193 10 185 
stack 111:    258 231 120 
stack 112:    45 208 
stack 113:    111 187 280 
stack 114:    87 149 36 
stack 115:    281 188 
stack 116:    14 27 238 
stack 117:    218 13 5 
stack 118:    161 257 92 
stack 119:    132 141 18 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 301.86 s (time limit exceeded)
objective value: 308.0 (not optimal)

stacks (top to bottom):
stack   0:    193 112 94 
stack   1:    85 192 70 
stack   2:    110 189 1 
stack   3:    64 
stack   4:    253 150 75 
stack   5:    205 124 266 
stack   6:    69 187 155 
stack   7:    63 
stack   8:    87 226 180 
stack   9:    90 108 222 
stack  10:    33 
stack  11:    113 
stack  12:    72 296 284 
stack  13:    126 121 120 
stack  14:    178 275 34 
stack  15:    148 196 157 
stack  16:    38 
stack  17:    244 
stack  18:    131 
stack  19:    204 117 122 
stack  20:    17 209 133 
stack  21:    145 135 171 
stack  22:    241 290 293 
stack  23:    210 
stack  24:    251 291 234 
stack  25:    202 163 181 
stack  26:    160 46 
stack  27:    262 153 186 
stack  28:    227 233 278 
stack  29:    19 269 223 
stack  30:    102 25 50 
stack  31:    103 138 280 
stack  32:    258 211 
stack  33:    93 24 26 
stack  34:    281 188 
stack  35:    190 
stack  36:    40 130 54 
stack  37:    166 52 212 
stack  38:    246 
stack  39:    118 35 179 
stack  40:    263 49 74 
stack  41:    200 
stack  42:    299 18 
stack  43:    57 184 277 
stack  44:    237 144 149 
stack  45:    6 99 73 
stack  46:    232 
stack  47:    13 243 298 
stack  48:    66 134 
stack  49:    270 43 
stack  50:    225 
stack  51:    172 7 53 
stack  52:    250 
stack  53:    105 71 170 
stack  54:    21 98 76 
stack  55:    104 
stack  56:    95 162 82 
stack  57:    294 201 267 
stack  58:    206 176 256 
stack  59:    152 142 
stack  60:    167 127 58 
stack  61:    146 55 44 
stack  62:    96 3 
stack  63:    123 283 154 
stack  64:    191 254 101 
stack  65:    136 141 114 
stack  66:    107 83 128 
stack  67:    62 
stack  68:    286 86 12 
stack  69:    260 183 228 
stack  70:    245 216 27 
stack  71:    214 
stack  72:    169 143 230 
stack  73:    77 61 5 
stack  74:    139 217 11 
stack  75:    39 177 151 
stack  76:    297 164 219 
stack  77:    132 274 238 
stack  78:    264 168 28 
stack  79:    276 
stack  80:    224 116 287 
stack  81:    14 147 65 
stack  82:    229 137 84 
stack  83:    140 165 125 
stack  84:    156 279 220 
stack  85:    20 235 249 
stack  86:    268 30 174 
stack  87:    47 
stack  88:    100 109 41 
stack  89:    37 261 
stack  90:    4 197 56 
stack  91:    8 129 80 
stack  92:    42 92 
stack  93:    173 78 199 
stack  94:    240 213 
stack  95:    115 236 185 
stack  96:    161 10 81 
stack  97:    259 239 175 
stack  98:    242 51 215 
stack  99:    289 252 282 
stack 100:    285 
stack 101:    221 292 
stack 102:    88 271 231 
stack 103:    29 68 203 
stack 104:    159 97 31 
stack 105:    15 207 106 
stack 106:    67 23 248 
stack 107:    22 
stack 108:    0 194 
stack 109:    48 295 16 
stack 110:    45 
stack 111:    273 247 
stack 112:    89 288 59 
stack 113:    198 272 
stack 114:    119 36 60 
stack 115:    111 265 195 
stack 116:    79 182 158 
stack 117:    218 32 
stack 118:    2 257 208 
stack 119:    9 91 255 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
