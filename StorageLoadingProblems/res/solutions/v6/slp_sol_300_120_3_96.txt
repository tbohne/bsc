solved with: BinPacking Formulation
time to solve: 300.27 s (time limit exceeded)
objective value: 3.0 (not optimal)

stacks (top to bottom):
stack   0:    163 168 263 
stack   1:    90 202 42 
stack   2:    44 123 70 
stack   3:    57 55 197 
stack   4:    185 244 13 
stack   5:    172 165 64 
stack   6:    215 283 190 
stack   7:    240 248 184 
stack   8:    179 1 147 
stack   9:    275 170 36 
stack  10:    110 208 8 
stack  11:    238 84 227 
stack  12:    106 112 
stack  13:    291 152 
stack  14:    153 230 284 
stack  15:    254 276 34 
stack  16:    262 
stack  17:    141 178 32 
stack  18:    269 196 132 
stack  19:    99 101 271 
stack  20:    260 
stack  21:    201 89 9 
stack  22:    143 225 267 
stack  23:    107 
stack  24:    286 124 134 
stack  25:    100 109 229 
stack  26:    35 273 294 
stack  27:    5 
stack  28:    155 
stack  29:    264 78 194 
stack  30:    193 
stack  31:    233 73 277 
stack  32:    40 144 129 
stack  33:    77 47 251 
stack  34:    137 228 119 
stack  35:    53 74 49 
stack  36:    245 135 281 
stack  37:    279 
stack  38:    199 246 203 
stack  39:    175 148 285 
stack  40:    126 
stack  41:    45 169 4 
stack  42:    140 204 258 
stack  43:    58 67 94 
stack  44:    43 
stack  45:    219 86 207 
stack  46:    138 237 187 
stack  47:    158 56 198 
stack  48:    220 
stack  49:    52 80 162 
stack  50:    174 96 105 
stack  51:    62 79 157 
stack  52:    88 252 223 
stack  53:    236 
stack  54:    68 287 278 
stack  55:    221 7 82 
stack  56:    50 280 
stack  57:    214 130 290 
stack  58:    133 
stack  59:    249 115 
stack  60:    102 0 261 
stack  61:    293 
stack  62:    282 181 272 
stack  63:    91 
stack  64:    213 17 54 
stack  65:    25 253 39 
stack  66:    183 295 159 
stack  67:    103 226 
stack  68:    266 65 19 
stack  69:    180 95 268 
stack  70:    255 
stack  71:    6 224 150 
stack  72:    26 28 232 
stack  73:    97 265 297 
stack  74:    29 296 188 
stack  75:    139 217 
stack  76:    146 128 156 
stack  77:    2 142 149 
stack  78:    242 75 16 
stack  79:    164 131 241 
stack  80:    256 
stack  81:    27 63 48 
stack  82:    30 257 235 
stack  83:    18 192 24 
stack  84:    250 288 195 
stack  85:    83 209 
stack  86:    218 
stack  87:    114 
stack  88:    161 270 176 
stack  89:    87 160 61 
stack  90:    243 12 186 
stack  91:    98 210 177 
stack  92:    206 182 222 
stack  93:    3 118 298 
stack  94:    81 173 211 
stack  95:    85 21 113 
stack  96:    14 
stack  97:    205 117 
stack  98:    10 11 60 
stack  99:    299 171 
stack 100:    72 37 
stack 101:    46 93 212 
stack 102:    166 289 23 
stack 103:    92 216 167 
stack 104:    145 
stack 105:    116 
stack 106:    136 
stack 107:    111 
stack 108:    31 259 59 
stack 109:    231 292 76 
stack 110:    274 189 121 
stack 111:    200 
stack 112:    108 
stack 113:    38 234 122 
stack 114:    51 127 151 
stack 115:    15 66 41 
stack 116:    239 71 104 
stack 117:    191 247 125 
stack 118:    33 69 20 
stack 119:    154 22 120 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.70 s (time limit exceeded)
objective value: 126.0 (not optimal)

stacks (top to bottom):
stack   0:    83 209 
stack   1:    109 7 197 
stack   2:    126 
stack   3:    98 118 
stack   4:    77 13 59 
stack   5:    146 128 
stack   6:    158 46 235 
stack   7:    255 
stack   8:    206 114 5 
stack   9:    274 95 32 
stack  10:    90 202 
stack  11:    238 170 127 
stack  12:    282 199 60 
stack  13:    252 173 48 
stack  14:    242 297 24 
stack  15:    166 288 36 
stack  16:    293 
stack  17:    99 21 178 
stack  18:    108 42 
stack  19:    227 148 96 
stack  20:    6 261 283 
stack  21:    226 
stack  22:    79 1 34 
stack  23:    139 
stack  24:    213 81 104 
stack  25:    155 
stack  26:    92 257 70 
stack  27:    133 220 
stack  28:    239 295 186 
stack  29:    266 215 194 
stack  30:    102 248 278 
stack  31:    73 225 195 
stack  32:    243 153 0 
stack  33:    131 47 187 
stack  34:    228 75 18 
stack  35:    256 
stack  36:    201 121 
stack  37:    233 250 161 
stack  38:    68 254 207 
stack  39:    164 290 268 
stack  40:    171 28 
stack  41:    169 45 35 
stack  42:    246 258 8 
stack  43:    212 142 12 
stack  44:    138 110 132 
stack  45:    219 86 19 
stack  46:    218 
stack  47:    43 
stack  48:    264 151 177 
stack  49:    172 210 203 
stack  50:    214 270 64 
stack  51:    179 244 150 
stack  52:    33 78 223 
stack  53:    182 292 9 
stack  54:    44 40 198 
stack  55:    97 273 69 
stack  56:    174 168 105 
stack  57:    191 130 190 
stack  58:    291 
stack  59:    180 229 284 
stack  60:    193 
stack  61:    72 
stack  62:    140 74 61 
stack  63:    106 156 112 
stack  64:    14 116 
stack  65:    154 143 16 
stack  66:    249 137 23 
stack  67:    103 294 
stack  68:    58 208 49 
stack  69:    181 25 37 
stack  70:    3 115 
stack  71:    63 144 39 
stack  72:    26 113 15 
stack  73:    107 
stack  74:    221 216 192 
stack  75:    280 
stack  76:    286 245 4 
stack  77:    231 285 159 
stack  78:    91 
stack  79:    217 145 
stack  80:    101 94 267 
stack  81:    111 
stack  82:    253 296 271 
stack  83:    185 147 
stack  84:    275 53 141 
stack  85:    85 232 263 
stack  86:    211 265 167 
stack  87:    66 93 176 
stack  88:    57 251 188 
stack  89:    27 277 54 
stack  90:    260 
stack  91:    17 55 129 
stack  92:    51 157 125 
stack  93:    62 124 89 
stack  94:    240 241 160 
stack  95:    183 84 196 
stack  96:    52 204 298 
stack  97:    205 
stack  98:    10 234 11 
stack  99:    236 
stack 100:    56 22 134 
stack 101:    299 281 
stack 102:    38 259 117 
stack 103:    162 237 20 
stack 104:    29 88 122 
stack 105:    87 123 119 
stack 106:    136 
stack 107:    71 289 152 
stack 108:    262 
stack 109:    272 65 184 
stack 110:    30 189 67 
stack 111:    200 
stack 112:    2 80 230 
stack 113:    175 149 76 
stack 114:    224 165 135 
stack 115:    276 287 120 
stack 116:    31 269 41 
stack 117:    100 247 82 
stack 118:    50 163 222 
stack 119:    279 

#####################################################

solved with: Constructive Heuristic
Problem not solved.
