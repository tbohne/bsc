solved with: BinPacking Formulation
time to solve: 125.62 s
objective value: 0.0

stacks (top to bottom):
stack   0:    182 232 31 
stack   1:    40 
stack   2:    22 293 18 
stack   3:    8 111 33 
stack   4:    16 60 264 
stack   5:    47 
stack   6:    231 10 30 
stack   7:    55 38 48 
stack   8:    63 42 268 
stack   9:    219 5 266 
stack  10:    196 206 27 
stack  11:    72 25 
stack  12:    276 282 69 
stack  13:    114 
stack  14:    0 221 
stack  15:    50 54 75 
stack  16:    169 70 117 
stack  17:    13 36 77 
stack  18:    158 
stack  19:    220 23 74 
stack  20:    173 3 285 
stack  21:    218 
stack  22:    51 62 133 
stack  23:    183 83 257 
stack  24:    68 
stack  25:    281 294 
stack  26:    234 272 103 
stack  27:    189 
stack  28:    197 46 181 
stack  29:    137 150 170 
stack  30:    14 148 32 
stack  31:    24 78 216 
stack  32:    290 
stack  33:    59 297 203 
stack  34:    53 156 89 
stack  35:    116 39 67 
stack  36:    56 292 92 
stack  37:    79 90 162 
stack  38:    49 17 
stack  39:    251 
stack  40:    100 112 185 
stack  41:    152 81 225 
stack  42:    37 102 87 
stack  43:    28 184 93 
stack  44:    215 106 113 
stack  45:    130 174 9 
stack  46:    20 
stack  47:    143 110 144 
stack  48:    73 65 178 
stack  49:    88 109 179 
stack  50:    85 
stack  51:    236 57 299 
stack  52:    7 199 151 
stack  53:    134 96 97 
stack  54:    240 238 123 
stack  55:    76 4 104 
stack  56:    193 52 61 
stack  57:    118 98 241 
stack  58:    129 145 237 
stack  59:    259 
stack  60:    263 86 
stack  61:    176 
stack  62:    6 84 149 
stack  63:    1 140 195 
stack  64:    139 136 214 
stack  65:    132 230 142 
stack  66:    141 273 168 
stack  67:    192 94 105 
stack  68:    58 127 131 
stack  69:    159 261 161 
stack  70:    265 2 153 
stack  71:    235 21 135 
stack  72:    99 138 
stack  73:    44 172 204 
stack  74:    125 253 43 
stack  75:    298 
stack  76:    165 34 
stack  77:    71 262 
stack  78:    248 
stack  79:    194 
stack  80:    295 198 
stack  81:    188 202 227 
stack  82:    120 
stack  83:    157 177 171 
stack  84:    164 283 126 
stack  85:    163 121 64 
stack  86:    222 244 29 
stack  87:    108 280 146 
stack  88:    226 
stack  89:    223 12 80 
stack  90:    95 122 
stack  91:    288 211 
stack  92:    91 
stack  93:    274 224 201 
stack  94:    207 269 15 
stack  95:    200 167 175 
stack  96:    260 258 271 
stack  97:    35 239 209 
stack  98:    19 191 205 
stack  99:    107 
stack 100:    26 155 45 
stack 101:    279 154 166 
stack 102:    160 128 41 
stack 103:    250 254 217 
stack 104:    187 
stack 105:    278 208 101 
stack 106:    212 
stack 107:    247 
stack 108:    243 66 119 
stack 109:    284 233 275 
stack 110:    213 255 11 
stack 111:    249 270 246 
stack 112:    277 115 
stack 113:    82 180 228 
stack 114:    229 147 186 
stack 115:    291 252 256 
stack 116:    286 
stack 117:    245 190 267 
stack 118:    287 210 289 
stack 119:    242 296 124 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.33 s (time limit exceeded)
objective value: 268.0 (not optimal)

stacks (top to bottom):
stack   0:    235 96 78 
stack   1:    88 232 80 
stack   2:    251 
stack   3:    248 
stack   4:    71 262 
stack   5:    228 224 195 
stack   6:    184 10 131 
stack   7:    234 290 
stack   8:    22 239 182 
stack   9:    53 5 180 
stack  10:    295 198 
stack  11:    287 186 
stack  12:    91 
stack  13:    298 
stack  14:    221 
stack  15:    223 225 93 
stack  16:    8 106 43 
stack  17:    150 105 135 
stack  18:    139 168 104 
stack  19:    250 206 
stack  20:    0 172 285 
stack  21:    95 
stack  22:    79 242 246 
stack  23:    218 
stack  24:    245 46 
stack  25:    265 120 
stack  26:    187 
stack  27:    68 
stack  28:    62 294 3 
stack  29:    76 281 170 
stack  30:    286 41 
stack  31:    196 113 27 
stack  32:    134 269 126 
stack  33:    207 90 2 
stack  34:    279 112 89 
stack  35:    240 39 61 
stack  36:    278 270 146 
stack  37:    72 
stack  38:    159 121 256 
stack  39:    37 109 292 
stack  40:    137 122 85 
stack  41:    38 147 167 
stack  42:    213 110 33 
stack  43:    163 264 237 
stack  44:    99 
stack  45:    158 
stack  46:    291 208 69 
stack  47:    144 83 101 
stack  48:    254 24 18 
stack  49:    50 189 
stack  50:    148 202 15 
stack  51:    132 238 25 
stack  52:    73 177 12 
stack  53:    98 185 59 
stack  54:    108 283 123 
stack  55:    215 209 87 
stack  56:    128 4 175 
stack  57:    116 19 66 
stack  58:    260 140 233 
stack  59:    125 199 29 
stack  60:    258 244 45 
stack  61:    35 65 124 
stack  62:    272 103 
stack  63:    210 155 178 
stack  64:    47 
stack  65:    63 282 60 
stack  66:    273 162 48 
stack  67:    259 173 203 
stack  68:    165 280 52 
stack  69:    268 216 161 
stack  70:    219 42 31 
stack  71:    229 74 149 
stack  72:    247 
stack  73:    20 
stack  74:    86 
stack  75:    197 157 201 
stack  76:    28 23 34 
stack  77:    143 164 181 
stack  78:    200 153 275 
stack  79:    263 226 
stack  80:    241 14 267 
stack  81:    169 26 204 
stack  82:    220 13 211 
stack  83:    100 299 
stack  84:    40 
stack  85:    253 252 119 
stack  86:    54 49 92 
stack  87:    1 97 
stack  88:    55 127 151 
stack  89:    56 142 
stack  90:    193 6 222 
stack  91:    255 129 271 
stack  92:    174 261 171 
stack  93:    288 
stack  94:    58 230 179 
stack  95:    257 154 17 
stack  96:    70 16 145 
stack  97:    7 82 118 
stack  98:    160 191 205 
stack  99:    183 266 81 
stack 100:    30 21 67 
stack 101:    152 94 64 
stack 102:    276 102 297 
stack 103:    130 111 217 
stack 104:    194 
stack 105:    114 
stack 106:    212 
stack 107:    190 57 133 
stack 108:    274 243 156 
stack 109:    284 227 77 
stack 110:    107 
stack 111:    249 293 32 
stack 112:    277 115 
stack 113:    231 176 
stack 114:    51 289 214 
stack 115:    236 136 188 
stack 116:    75 117 11 
stack 117:    192 36 84 
stack 118:    44 9 138 
stack 119:    296 141 166 

#####################################################

solved with: Constructive Heuristic
Problem not solved.
