solved with: BinPacking Formulation
time to solve: 193.39 s
objective value: 0.0

stacks (top to bottom):
stack   0:    59 
stack   1:    185 24 116 
stack   2:    120 234 189 
stack   3:    6 47 190 
stack   4:    251 159 242 
stack   5:    165 250 291 
stack   6:    88 246 179 
stack   7:    61 223 104 
stack   8:    219 138 163 
stack   9:    17 15 216 
stack  10:    29 108 214 
stack  11:    126 4 102 
stack  12:    144 105 257 
stack  13:    201 81 155 
stack  14:    278 
stack  15:    89 150 181 
stack  16:    194 273 
stack  17:    218 238 263 
stack  18:    192 71 202 
stack  19:    188 129 270 
stack  20:    187 87 298 
stack  21:    227 229 166 
stack  22:    48 
stack  23:    235 93 125 
stack  24:    90 
stack  25:    266 53 9 
stack  26:    142 20 156 
stack  27:    41 79 134 
stack  28:    205 
stack  29:    285 63 70 
stack  30:    206 
stack  31:    228 
stack  32:    64 141 280 
stack  33:    40 16 72 
stack  34:    162 11 143 
stack  35:    55 95 45 
stack  36:    137 5 22 
stack  37:    111 124 255 
stack  38:    135 35 184 
stack  39:    175 213 283 
stack  40:    83 243 97 
stack  41:    264 
stack  42:    248 299 292 
stack  43:    127 
stack  44:    21 106 118 
stack  45:    68 180 182 
stack  46:    136 3 26 
stack  47:    19 46 30 
stack  48:    232 2 294 
stack  49:    23 13 56 
stack  50:    112 139 10 
stack  51:    145 160 43 
stack  52:    123 115 0 
stack  53:    167 197 272 
stack  54:    173 14 178 
stack  55:    28 
stack  56:    249 51 132 
stack  57:    44 
stack  58:    207 69 281 
stack  59:    36 94 121 
stack  60:    52 
stack  61:    65 
stack  62:    78 241 215 
stack  63:    140 32 
stack  64:    258 195 225 
stack  65:    154 174 267 
stack  66:    269 18 244 
stack  67:    271 122 172 
stack  68:    212 
stack  69:    209 12 34 
stack  70:    279 196 8 
stack  71:    158 33 66 
stack  72:    290 133 177 
stack  73:    84 204 
stack  74:    25 114 149 
stack  75:    42 99 
stack  76:    98 275 176 
stack  77:    210 76 50 
stack  78:    164 
stack  79:    289 208 288 
stack  80:    198 224 276 
stack  81:    186 
stack  82:    231 171 77 
stack  83:    254 86 245 
stack  84:    191 
stack  85:    60 91 96 
stack  86:    58 203 282 
stack  87:    233 217 297 
stack  88:    274 170 74 
stack  89:    110 261 148 
stack  90:    293 295 268 
stack  91:    265 128 153 
stack  92:    37 230 252 
stack  93:    157 100 
stack  94:    183 222 287 
stack  95:    1 
stack  96:    296 
stack  97:    211 
stack  98:    82 27 92 
stack  99:    277 
stack 100:    75 
stack 101:    80 152 247 
stack 102:    7 253 
stack 103:    103 113 259 
stack 104:    237 200 240 
stack 105:    226 
stack 106:    193 39 119 
stack 107:    151 
stack 108:    146 169 239 
stack 109:    161 62 131 
stack 110:    286 85 107 
stack 111:    221 262 236 
stack 112:    117 
stack 113:    101 31 73 
stack 114:    57 
stack 115:    199 147 284 
stack 116:    109 
stack 117:    54 256 168 
stack 118:    38 220 67 
stack 119:    130 49 260 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.84 s (time limit exceeded)
objective value: 295.0 (not optimal)

stacks (top to bottom):
stack   0:    231 203 225 
stack   1:    207 184 116 
stack   2:    89 139 53 
stack   3:    186 
stack   4:    145 24 118 
stack   5:    211 
stack   6:    80 83 94 
stack   7:    123 223 108 
stack   8:    232 239 
stack   9:    17 295 106 
stack  10:    28 
stack  11:    209 8 27 
stack  12:    68 76 236 
stack  13:    287 114 70 
stack  14:    218 164 
stack  15:    210 220 181 
stack  16:    88 281 179 
stack  17:    194 
stack  18:    54 71 288 
stack  19:    188 208 163 
stack  20:    192 52 
stack  21:    48 
stack  22:    237 85 255 
stack  23:    7 20 272 
stack  24:    60 284 122 
stack  25:    221 49 9 
stack  26:    117 278 
stack  27:    264 
stack  28:    205 
stack  29:    63 102 298 
stack  30:    206 
stack  31:    59 32 
stack  32:    64 15 119 
stack  33:    111 257 
stack  34:    212 
stack  35:    103 174 267 
stack  36:    137 55 22 
stack  37:    227 283 268 
stack  38:    135 12 134 
stack  39:    165 213 182 
stack  40:    25 129 214 
stack  41:    1 
stack  42:    151 
stack  43:    127 
stack  44:    120 144 50 
stack  45:    99 
stack  46:    266 124 26 
stack  47:    75 
stack  48:    146 79 168 
stack  49:    247 4 39 
stack  50:    155 72 121 
stack  51:    199 11 240 
stack  52:    140 46 234 
stack  53:    219 238 292 
stack  54:    159 66 
stack  55:    251 150 171 
stack  56:    196 110 202 
stack  57:    201 294 56 
stack  58:    136 200 77 
stack  59:    187 248 115 
stack  60:    109 
stack  61:    253 97 
stack  62:    38 299 74 
stack  63:    78 289 
stack  64:    42 191 
stack  65:    112 242 
stack  66:    2 73 166 
stack  67:    269 177 
stack  68:    82 35 291 
stack  69:    183 143 149 
stack  70:    279 67 
stack  71:    36 87 30 
stack  72:    285 297 293 
stack  73:    167 230 263 
stack  74:    154 153 229 
stack  75:    6 260 280 
stack  76:    130 169 215 
stack  77:    265 41 243 
stack  78:    141 259 0 
stack  79:    254 81 18 
stack  80:    249 244 
stack  81:    175 189 
stack  82:    128 107 
stack  83:    84 204 
stack  84:    43 282 190 
stack  85:    21 250 69 
stack  86:    158 224 5 
stack  87:    173 16 217 
stack  88:    235 34 270 
stack  89:    245 86 148 
stack  90:    296 
stack  91:    98 65 
stack  92:    185 37 193 
stack  93:    57 
stack  94:    277 
stack  95:    142 125 31 
stack  96:    274 105 
stack  97:    23 275 92 
stack  98:    276 138 262 
stack  99:    286 170 29 
stack 100:    160 13 47 
stack 101:    261 152 176 
stack 102:    61 132 133 
stack 103:    113 180 3 
stack 104:    271 14 10 
stack 105:    40 290 198 
stack 106:    226 
stack 107:    58 241 252 
stack 108:    44 
stack 109:    62 131 195 
stack 110:    258 95 33 
stack 111:    157 90 100 
stack 112:    19 233 104 
stack 113:    101 93 216 
stack 114:    228 45 
stack 115:    246 222 147 
stack 116:    126 172 273 
stack 117:    51 256 197 
stack 118:    162 91 96 
stack 119:    161 178 156 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
