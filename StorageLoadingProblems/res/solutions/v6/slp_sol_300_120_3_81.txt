solved with: BinPacking Formulation
time to solve: 300.52 s (time limit exceeded)
objective value: 118.0 (not optimal)

stacks (top to bottom):
stack   0:    81 169 234 
stack   1:    1 121 
stack   2:    2 220 225 
stack   3:    129 226 39 
stack   4:    65 218 237 
stack   5:    291 264 126 
stack   6:    133 155 98 
stack   7:    20 21 297 
stack   8:    92 161 
stack   9:    212 24 124 
stack  10:    164 208 139 
stack  11:    270 80 295 
stack  12:    23 188 
stack  13:    38 158 200 
stack  14:    210 31 43 
stack  15:    9 61 244 
stack  16:    137 28 293 
stack  17:    254 259 142 
stack  18:    130 183 240 
stack  19:    235 157 122 
stack  20:    3 
stack  21:    144 40 69 
stack  22:    277 
stack  23:    194 93 185 
stack  24:    75 206 215 
stack  25:    89 125 132 
stack  26:    52 97 
stack  27:    34 86 201 
stack  28:    8 63 187 
stack  29:    138 
stack  30:    192 14 87 
stack  31:    45 79 111 
stack  32:    250 7 103 
stack  33:    107 95 131 
stack  34:    84 118 
stack  35:    178 78 
stack  36:    91 11 64 
stack  37:    287 27 
stack  38:    100 271 285 
stack  39:    72 109 289 
stack  40:    57 76 113 
stack  41:    96 
stack  42:    99 104 261 
stack  43:    278 94 
stack  44:    88 117 0 
stack  45:    251 275 207 
stack  46:    49 73 268 
stack  47:    148 197 299 
stack  48:    115 281 205 
stack  49:    219 136 252 
stack  50:    116 
stack  51:    66 
stack  52:    54 119 288 
stack  53:    120 
stack  54:    199 272 19 
stack  55:    149 191 203 
stack  56:    127 
stack  57:    102 
stack  58:    279 134 
stack  59:    276 166 238 
stack  60:    106 298 156 
stack  61:    170 16 190 
stack  62:    269 168 216 
stack  63:    153 204 182 
stack  64:    256 
stack  65:    152 176 
stack  66:    25 198 214 
stack  67:    181 154 
stack  68:    232 296 257 
stack  69:    163 
stack  70:    224 
stack  71:    290 173 229 
stack  72:    151 
stack  73:    123 246 
stack  74:    172 37 165 
stack  75:    160 223 292 
stack  76:    228 85 74 
stack  77:    267 283 286 
stack  78:    82 193 41 
stack  79:    68 
stack  80:    222 13 70 
stack  81:    171 
stack  82:    147 114 242 
stack  83:    48 213 67 
stack  84:    51 141 159 
stack  85:    22 
stack  86:    6 
stack  87:    209 239 217 
stack  88:    18 
stack  89:    46 231 260 
stack  90:    184 32 62 
stack  91:    35 258 265 
stack  92:    145 249 236 
stack  93:    230 15 
stack  94:    42 180 29 
stack  95:    10 55 266 
stack  96:    150 263 112 
stack  97:    245 58 243 
stack  98:    108 
stack  99:    273 179 255 
stack 100:    77 196 186 
stack 101:    167 
stack 102:    253 5 280 
stack 103:    177 227 59 
stack 104:    262 175 4 
stack 105:    140 110 284 
stack 106:    135 294 143 
stack 107:    33 
stack 108:    26 162 274 
stack 109:    30 241 202 
stack 110:    47 248 56 
stack 111:    101 105 71 
stack 112:    60 282 
stack 113:    83 221 189 
stack 114:    146 174 233 
stack 115:    90 128 195 
stack 116:    247 
stack 117:    36 12 44 
stack 118:    211 50 53 
stack 119:    17 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.55 s (time limit exceeded)
objective value: 628.0 (not optimal)

stacks (top to bottom):
stack   0:    118 131 29 
stack   1:    208 286 143 
stack   2:    230 
stack   3:    135 1 121 
stack   4:    184 57 205 
stack   5:    272 294 126 
stack   6:    150 24 204 
stack   7:    11 255 225 
stack   8:    283 117 103 
stack   9:    267 206 190 
stack  10:    172 37 
stack  11:    194 226 297 
stack  12:    42 50 41 
stack  13:    222 158 218 
stack  14:    210 30 71 
stack  15:    89 101 185 
stack  16:    49 288 142 
stack  17:    284 95 132 
stack  18:    147 146 0 
stack  19:    133 173 122 
stack  20:    199 63 43 
stack  21:    109 179 166 
stack  22:    21 44 
stack  23:    33 
stack  24:    108 
stack  25:    119 196 207 
stack  26:    170 5 98 
stack  27:    80 87 240 
stack  28:    279 134 112 
stack  29:    88 55 157 
stack  30:    280 114 229 
stack  31:    270 104 59 
stack  32:    46 227 159 
stack  33:    107 174 19 
stack  34:    130 84 67 
stack  35:    235 169 249 
stack  36:    34 285 64 
stack  37:    253 138 
stack  38:    211 244 4 
stack  39:    68 
stack  40:    6 
stack  41:    18 
stack  42:    61 193 149 
stack  43:    137 28 176 
stack  44:    277 78 
stack  45:    269 58 156 
stack  46:    36 209 113 
stack  47:    66 
stack  48:    163 
stack  49:    291 45 141 
stack  50:    144 40 69 
stack  51:    177 73 115 
stack  52:    224 
stack  53:    20 100 189 
stack  54:    127 
stack  55:    153 191 188 
stack  56:    278 94 
stack  57:    77 220 56 
stack  58:    123 248 197 
stack  59:    164 275 293 
stack  60:    231 125 233 
stack  61:    91 140 62 
stack  62:    65 251 12 
stack  63:    38 32 243 
stack  64:    181 154 
stack  65:    290 79 111 
stack  66:    250 175 
stack  67:    53 136 129 
stack  68:    151 
stack  69:    26 160 203 
stack  70:    96 
stack  71:    120 
stack  72:    287 168 299 
stack  73:    102 
stack  74:    260 7 183 
stack  75:    31 241 216 
stack  76:    82 39 
stack  77:    2 223 238 
stack  78:    148 14 242 
stack  79:    262 221 165 
stack  80:    215 13 70 
stack  81:    47 258 195 
stack  82:    72 239 265 
stack  83:    247 
stack  84:    83 93 252 
stack  85:    9 266 35 
stack  86:    51 25 264 
stack  87:    90 86 217 
stack  88:    219 202 
stack  89:    145 54 274 
stack  90:    273 3 
stack  91:    92 
stack  92:    16 201 261 
stack  93:    256 
stack  94:    298 289 139 
stack  95:    171 
stack  96:    192 296 263 
stack  97:    106 214 268 
stack  98:    85 281 161 
stack  99:    180 81 187 
stack 100:    23 15 
stack 101:    22 
stack 102:    152 
stack 103:    178 246 186 
stack 104:    99 124 
stack 105:    75 110 295 
stack 106:    48 259 237 
stack 107:    245 254 257 
stack 108:    213 162 105 
stack 109:    17 
stack 110:    116 74 
stack 111:    167 
stack 112:    52 97 
stack 113:    27 182 292 
stack 114:    276 76 271 
stack 115:    212 128 155 
stack 116:    228 198 200 
stack 117:    232 236 
stack 118:    60 282 
stack 119:    10 8 234 

#####################################################

solved with: Constructive Heuristic
Problem not solved.
