solved with: BinPacking Formulation
time to solve: 300.45 s (time limit exceeded)
objective value: 197.0 (not optimal)

stacks (top to bottom):
stack   0:    183 266 39 
stack   1:    221 291 137 
stack   2:    42 184 128 
stack   3:    91 89 123 
stack   4:    189 220 163 
stack   5:    56 276 236 
stack   6:    233 154 57 
stack   7:    82 68 54 
stack   8:    100 38 167 
stack   9:    263 117 252 
stack  10:    224 104 
stack  11:    254 255 12 
stack  12:    6 272 297 
stack  13:    152 165 
stack  14:    140 
stack  15:    147 235 
stack  16:    102 275 79 
stack  17:    238 299 124 
stack  18:    279 95 58 
stack  19:    115 295 45 
stack  20:    144 156 214 
stack  21:    122 142 180 
stack  22:    87 242 277 
stack  23:    138 280 257 
stack  24:    148 
stack  25:    94 125 194 
stack  26:    170 
stack  27:    218 173 211 
stack  28:    261 
stack  29:    212 
stack  30:    166 185 27 
stack  31:    273 18 234 
stack  32:    0 176 8 
stack  33:    50 20 86 
stack  34:    30 177 74 
stack  35:    65 129 193 
stack  36:    199 281 240 
stack  37:    270 145 162 
stack  38:    60 251 5 
stack  39:    72 
stack  40:    114 267 15 
stack  41:    239 230 13 
stack  42:    83 288 29 
stack  43:    121 
stack  44:    31 110 249 
stack  45:    105 10 
stack  46:    9 
stack  47:    290 28 131 
stack  48:    113 298 21 
stack  49:    36 169 174 
stack  50:    52 134 55 
stack  51:    34 109 171 
stack  52:    216 161 204 
stack  53:    141 
stack  54:    226 53 
stack  55:    264 151 198 
stack  56:    76 209 24 
stack  57:    219 187 195 
stack  58:    245 93 181 
stack  59:    23 172 207 
stack  60:    256 32 
stack  61:    289 284 
stack  62:    136 80 
stack  63:    197 116 164 
stack  64:    17 97 159 
stack  65:    201 
stack  66:    160 265 92 
stack  67:    90 81 250 
stack  68:    135 
stack  69:    130 225 120 
stack  70:    206 157 192 
stack  71:    25 259 196 
stack  72:    33 231 3 
stack  73:    282 190 243 
stack  74:    237 16 108 
stack  75:    153 51 296 
stack  76:    85 186 269 
stack  77:    215 73 127 
stack  78:    69 202 
stack  79:    99 
stack  80:    107 88 286 
stack  81:    149 
stack  82:    208 139 168 
stack  83:    203 77 246 
stack  84:    41 260 
stack  85:    111 258 200 
stack  86:    106 228 188 
stack  87:    244 67 155 
stack  88:    61 
stack  89:    112 132 294 
stack  90:    210 63 
stack  91:    223 
stack  92:    248 278 7 
stack  93:    84 
stack  94:    40 37 101 
stack  95:    292 98 66 
stack  96:    75 143 43 
stack  97:    222 26 
stack  98:    48 283 
stack  99:    47 178 175 
stack 100:    253 71 133 
stack 101:    274 
stack 102:    103 232 35 
stack 103:    14 182 191 
stack 104:    62 
stack 105:    146 
stack 106:    96 229 46 
stack 107:    1 217 213 
stack 108:    49 268 227 
stack 109:    59 
stack 110:    44 2 70 
stack 111:    205 271 293 
stack 112:    285 179 118 
stack 113:    247 150 78 
stack 114:    241 
stack 115:    4 
stack 116:    119 287 
stack 117:    22 
stack 118:    11 126 262 
stack 119:    64 19 158 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.30 s (time limit exceeded)
objective value: 586.0 (not optimal)

stacks (top to bottom):
stack   0:    38 132 227 
stack   1:    259 183 137 
stack   2:    25 175 207 
stack   3:    72 
stack   4:    263 2 294 
stack   5:    9 
stack   6:    282 85 21 
stack   7:    197 63 
stack   8:    278 74 7 
stack   9:    117 102 234 
stack  10:    148 
stack  11:    82 172 189 
stack  12:    100 220 286 
stack  13:    279 209 78 
stack  14:    116 156 127 
stack  15:    283 
stack  16:    33 186 79 
stack  17:    198 298 12 
stack  18:    232 139 214 
stack  19:    170 
stack  20:    267 297 58 
stack  21:    223 
stack  22:    261 
stack  23:    52 268 257 
stack  24:    135 
stack  25:    215 157 262 
stack  26:    233 145 108 
stack  27:    14 17 276 
stack  28:    201 
stack  29:    208 240 
stack  30:    237 18 296 
stack  31:    136 80 24 
stack  32:    274 
stack  33:    165 192 
stack  34:    75 37 133 
stack  35:    241 
stack  36:    147 235 
stack  37:    219 182 162 
stack  38:    152 229 
stack  39:    178 254 295 
stack  40:    273 228 35 
stack  41:    149 200 
stack  42:    122 288 174 
stack  43:    222 26 
stack  44:    110 299 8 
stack  45:    20 281 277 
stack  46:    6 184 128 
stack  47:    62 287 
stack  48:    292 98 66 
stack  49:    143 125 164 
stack  50:    134 155 258 
stack  51:    96 109 5 
stack  52:    94 150 211 
stack  53:    88 177 159 
stack  54:    90 169 167 
stack  55:    264 216 151 
stack  56:    154 252 97 
stack  57:    111 194 180 
stack  58:    44 70 236 
stack  59:    141 
stack  60:    91 89 123 
stack  61:    30 193 204 
stack  62:    146 
stack  63:    245 280 27 
stack  64:    203 86 3 
stack  65:    187 126 163 
stack  66:    34 71 124 
stack  67:    50 225 
stack  68:    23 51 195 
stack  69:    119 121 
stack  70:    206 95 43 
stack  71:    226 196 45 
stack  72:    64 118 
stack  73:    265 272 269 
stack  74:    28 129 158 
stack  75:    41 260 
stack  76:    153 255 57 
stack  77:    4 
stack  78:    42 68 251 
stack  79:    140 
stack  80:    107 130 249 
stack  81:    289 284 
stack  82:    290 105 10 
stack  83:    112 275 19 
stack  84:    115 92 
stack  85:    238 0 73 
stack  86:    291 205 188 
stack  87:    190 161 46 
stack  88:    22 
stack  89:    256 32 
stack  90:    87 114 53 
stack  91:    56 113 103 
stack  92:    285 144 250 
stack  93:    166 244 217 
stack  94:    65 15 120 
stack  95:    48 36 173 
stack  96:    101 49 221 
stack  97:    218 11 77 
stack  98:    69 202 
stack  99:    248 76 179 
stack 100:    47 55 
stack 101:    212 
stack 102:    253 83 185 
stack 103:    231 242 213 
stack 104:    84 
stack 105:    176 266 243 
stack 106:    224 104 
stack 107:    40 93 181 
stack 108:    1 67 29 
stack 109:    59 
stack 110:    270 60 191 
stack 111:    199 271 293 
stack 112:    239 230 13 
stack 113:    160 106 39 
stack 114:    99 
stack 115:    246 171 168 
stack 116:    210 31 142 
stack 117:    16 81 131 
stack 118:    247 138 54 
stack 119:    61 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
