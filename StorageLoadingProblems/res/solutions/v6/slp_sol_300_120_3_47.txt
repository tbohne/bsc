solved with: BinPacking Formulation
time to solve: 300.51 s (time limit exceeded)
objective value: 161.0 (not optimal)

stacks (top to bottom):
stack   0:    227 20 201 
stack   1:    27 177 51 
stack   2:    21 203 290 
stack   3:    278 1 264 
stack   4:    28 11 
stack   5:    10 171 176 
stack   6:    276 13 88 
stack   7:    145 136 289 
stack   8:    240 
stack   9:    116 43 200 
stack  10:    168 293 259 
stack  11:    156 29 8 
stack  12:    60 83 49 
stack  13:    71 76 23 
stack  14:    94 161 42 
stack  15:    236 55 181 
stack  16:    47 96 170 
stack  17:    15 131 199 
stack  18:    100 53 
stack  19:    162 260 213 
stack  20:    127 
stack  21:    91 180 270 
stack  22:    241 192 2 
stack  23:    19 75 153 
stack  24:    84 72 99 
stack  25:    133 
stack  26:    173 81 272 
stack  27:    74 85 90 
stack  28:    37 78 258 
stack  29:    186 204 217 
stack  30:    190 
stack  31:    98 112 169 
stack  32:    249 18 138 
stack  33:    5 
stack  34:    130 9 
stack  35:    142 97 7 
stack  36:    101 
stack  37:    172 0 221 
stack  38:    31 125 
stack  39:    86 
stack  40:    121 120 124 
stack  41:    253 149 107 
stack  42:    252 50 271 
stack  43:    123 24 114 
stack  44:    148 69 235 
stack  45:    296 
stack  46:    79 95 
stack  47:    183 
stack  48:    167 52 193 
stack  49:    275 92 126 
stack  50:    150 251 291 
stack  51:    233 117 237 
stack  52:    129 174 286 
stack  53:    216 198 212 
stack  54:    102 103 12 
stack  55:    144 238 158 
stack  56:    17 45 64 
stack  57:    207 67 115 
stack  58:    48 164 
stack  59:    194 257 202 
stack  60:    105 
stack  61:    214 
stack  62:    211 242 56 
stack  63:    283 
stack  64:    265 184 179 
stack  65:    294 295 229 
stack  66:    284 
stack  67:    187 159 266 
stack  68:    188 
stack  69:    228 
stack  70:    277 
stack  71:    292 196 255 
stack  72:    14 230 139 
stack  73:    119 108 263 
stack  74:    89 231 34 
stack  75:    152 243 93 
stack  76:    281 208 248 
stack  77:    77 82 298 
stack  78:    160 132 68 
stack  79:    215 175 30 
stack  80:    226 206 62 
stack  81:    218 
stack  82:    219 246 
stack  83:    222 110 135 
stack  84:    63 57 
stack  85:    87 165 137 
stack  86:    80 25 111 
stack  87:    151 147 195 
stack  88:    44 178 35 
stack  89:    256 220 232 
stack  90:    61 
stack  91:    234 
stack  92:    155 3 
stack  93:    244 104 38 
stack  94:    297 224 225 
stack  95:    247 189 
stack  96:    4 279 33 
stack  97:    26 65 32 
stack  98:    210 254 143 
stack  99:    134 
stack 100:    223 250 36 
stack 101:    41 140 268 
stack 102:    73 
stack 103:    282 205 285 
stack 104:    269 109 261 
stack 105:    274 58 22 
stack 106:    262 59 141 
stack 107:    16 
stack 108:    66 113 128 
stack 109:    106 239 166 
stack 110:    70 280 
stack 111:    157 154 209 
stack 112:    122 
stack 113:    163 287 
stack 114:    197 39 40 
stack 115:    54 245 273 
stack 116:    6 
stack 117:    299 185 288 
stack 118:    182 267 191 
stack 119:    146 46 118 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.62 s (time limit exceeded)
objective value: 725.0 (not optimal)

stacks (top to bottom):
stack   0:    17 67 217 
stack   1:    21 154 62 
stack   2:    81 108 290 
stack   3:    262 200 270 
stack   4:    282 286 23 
stack   5:    252 87 273 
stack   6:    162 261 112 
stack   7:    157 293 264 
stack   8:    218 
stack   9:    255 71 205 
stack  10:    41 209 272 
stack  11:    297 263 24 
stack  12:    85 220 49 
stack  13:    219 99 
stack  14:    28 11 
stack  15:    239 211 107 
stack  16:    48 164 
stack  17:    226 131 199 
stack  18:    45 242 179 
stack  19:    241 161 126 
stack  20:    216 98 202 
stack  21:    275 257 
stack  22:    253 2 250 
stack  23:    265 170 118 
stack  24:    188 
stack  25:    144 43 76 
stack  26:    173 148 138 
stack  27:    163 66 8 
stack  28:    279 120 288 
stack  29:    146 174 90 
stack  30:    197 267 258 
stack  31:    245 20 295 
stack  32:    80 18 193 
stack  33:    190 
stack  34:    207 123 114 
stack  35:    127 
stack  36:    147 14 32 
stack  37:    210 254 143 
stack  38:    155 3 
stack  39:    134 
stack  40:    160 96 139 
stack  41:    249 149 55 
stack  42:    65 50 135 
stack  43:    260 195 213 
stack  44:    94 136 39 
stack  45:    100 268 7 
stack  46:    19 92 235 
stack  47:    171 251 225 
stack  48:    97 52 248 
stack  49:    240 259 
stack  50:    151 231 69 
stack  51:    169 117 224 
stack  52:    208 0 74 
stack  53:    84 59 34 
stack  54:    122 
stack  55:    183 
stack  56:    299 104 38 
stack  57:    214 
stack  58:    156 206 181 
stack  59:    27 125 
stack  60:    222 110 
stack  61:    75 115 64 
stack  62:    53 289 
stack  63:    103 185 166 
stack  64:    234 
stack  65:    276 165 13 
stack  66:    60 102 33 
stack  67:    152 10 298 
stack  68:    5 
stack  69:    172 140 141 
stack  70:    198 54 68 
stack  71:    223 15 9 
stack  72:    44 46 212 
stack  73:    274 58 22 
stack  74:    89 196 82 
stack  75:    105 
stack  76:    215 175 30 
stack  77:    121 177 291 
stack  78:    277 124 51 
stack  79:    116 12 
stack  80:    119 238 111 
stack  81:    133 
stack  82:    194 153 132 
stack  83:    244 
stack  84:    130 
stack  85:    281 113 229 
stack  86:    283 
stack  87:    73 
stack  88:    269 29 93 
stack  89:    91 278 158 
stack  90:    70 284 280 
stack  91:    294 78 56 
stack  92:    72 1 221 
stack  93:    247 
stack  94:    186 184 271 
stack  95:    6 
stack  96:    236 237 40 
stack  97:    4 243 137 
stack  98:    150 230 246 
stack  99:    109 129 35 
stack 100:    228 
stack 101:    256 178 189 
stack 102:    142 37 42 
stack 103:    31 180 47 
stack 104:    176 26 128 
stack 105:    296 
stack 106:    233 25 204 
stack 107:    63 57 
stack 108:    287 
stack 109:    77 227 36 
stack 110:    182 232 203 
stack 111:    168 83 201 
stack 112:    86 
stack 113:    101 
stack 114:    16 
stack 115:    79 95 88 
stack 116:    187 159 266 
stack 117:    167 106 285 
stack 118:    292 192 191 
stack 119:    145 61 

#####################################################

solved with: Constructive Heuristic
Problem not solved.
