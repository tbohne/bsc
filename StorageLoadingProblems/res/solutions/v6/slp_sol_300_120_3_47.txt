solved with: BinPacking Formulation
time to solve: 300.24 s (time limit exceeded)
objective value: 125.0 (not optimal)

stacks (top to bottom):
stack   0:    227 20 201 
stack   1:    27 177 51 
stack   2:    21 203 290 
stack   3:    278 154 264 
stack   4:    28 11 
stack   5:    10 171 176 
stack   6:    276 13 88 
stack   7:    85 136 289 
stack   8:    216 71 263 
stack   9:    218 
stack  10:    168 206 259 
stack  11:    156 67 8 
stack  12:    277 124 
stack  13:    83 76 23 
stack  14:    94 161 42 
stack  15:    236 55 181 
stack  16:    47 50 170 
stack  17:    15 131 199 
stack  18:    100 53 
stack  19:    162 52 213 
stack  20:    127 
stack  21:    180 286 270 
stack  22:    183 
stack  23:    150 19 153 
stack  24:    84 72 99 
stack  25:    133 
stack  26:    173 81 272 
stack  27:    163 74 267 
stack  28:    37 78 258 
stack  29:    186 129 184 
stack  30:    190 
stack  31:    98 112 169 
stack  32:    103 260 138 
stack  33:    69 198 49 
stack  34:    130 9 
stack  35:    142 97 7 
stack  36:    101 
stack  37:    172 0 221 
stack  38:    187 159 266 
stack  39:    86 
stack  40:    121 205 237 
stack  41:    91 149 107 
stack  42:    252 293 271 
stack  43:    123 24 114 
stack  44:    48 164 
stack  45:    41 82 239 
stack  46:    79 95 
stack  47:    240 
stack  48:    167 144 193 
stack  49:    275 92 126 
stack  50:    241 251 291 
stack  51:    233 29 117 
stack  52:    31 174 220 
stack  53:    122 
stack  54:    80 102 12 
stack  55:    60 25 238 
stack  56:    17 140 235 
stack  57:    228 
stack  58:    207 43 34 
stack  59:    194 257 202 
stack  60:    105 
stack  61:    214 
stack  62:    211 242 56 
stack  63:    283 
stack  64:    77 116 179 
stack  65:    294 295 229 
stack  66:    284 
stack  67:    45 225 64 
stack  68:    188 
stack  69:    249 178 32 
stack  70:    146 1 217 
stack  71:    292 196 230 
stack  72:    14 106 208 
stack  73:    119 108 212 
stack  74:    89 231 115 
stack  75:    152 243 93 
stack  76:    281 204 248 
stack  77:    296 
stack  78:    160 132 68 
stack  79:    215 175 30 
stack  80:    226 192 62 
stack  81:    265 120 255 
stack  82:    219 246 
stack  83:    222 110 135 
stack  84:    63 57 
stack  85:    87 165 137 
stack  86:    145 125 
stack  87:    151 147 195 
stack  88:    44 261 35 
stack  89:    256 18 232 
stack  90:    61 
stack  91:    148 75 111 
stack  92:    155 3 
stack  93:    244 104 38 
stack  94:    297 224 273 
stack  95:    247 189 
stack  96:    4 279 33 
stack  97:    26 65 298 
stack  98:    210 254 143 
stack  99:    134 
stack 100:    223 250 36 
stack 101:    5 
stack 102:    73 
stack 103:    282 268 285 
stack 104:    96 109 139 
stack 105:    274 58 22 
stack 106:    262 59 141 
stack 107:    16 
stack 108:    66 113 128 
stack 109:    253 90 166 
stack 110:    70 280 
stack 111:    157 209 2 
stack 112:    234 
stack 113:    287 
stack 114:    197 39 40 
stack 115:    54 245 158 
stack 116:    6 
stack 117:    299 185 288 
stack 118:    182 200 191 
stack 119:    269 46 118 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.86 s (time limit exceeded)
objective value: 422.0 (not optimal)

stacks (top to bottom):
stack   0:    231 242 217 
stack   1:    21 279 158 
stack   2:    75 81 290 
stack   3:    173 200 270 
stack   4:    151 45 23 
stack   5:    252 87 273 
stack   6:    4 90 112 
stack   7:    160 13 68 
stack   8:    218 
stack   9:    167 47 39 
stack  10:    109 220 137 
stack  11:    240 263 24 
stack  12:    276 83 49 
stack  13:    144 74 291 
stack  14:    28 11 
stack  15:    211 203 212 
stack  16:    48 164 
stack  17:    15 199 
stack  18:    84 154 32 
stack  19:    241 260 248 
stack  20:    239 161 189 
stack  21:    233 14 115 
stack  22:    253 69 237 
stack  23:    282 153 118 
stack  24:    150 29 201 
stack  25:    156 43 12 
stack  26:    152 26 272 
stack  27:    163 66 8 
stack  28:    41 80 258 
stack  29:    5 
stack  30:    197 85 181 
stack  31:    243 20 295 
stack  32:    91 18 193 
stack  33:    190 
stack  34:    123 114 
stack  35:    127 
stack  36:    53 
stack  37:    210 254 143 
stack  38:    3 
stack  39:    256 59 191 
stack  40:    265 96 35 
stack  41:    249 97 107 
stack  42:    168 46 126 
stack  43:    86 
stack  44:    148 136 132 
stack  45:    100 268 95 
stack  46:    185 257 235 
stack  47:    116 108 225 
stack  48:    162 52 62 
stack  49:    122 
stack  50:    236 117 251 
stack  51:    130 9 
stack  52:    105 
stack  53:    44 245 111 
stack  54:    6 
stack  55:    183 
stack  56:    299 267 195 
stack  57:    216 55 135 
stack  58:    207 208 99 
stack  59:    27 125 
stack  60:    222 110 
stack  61:    147 92 128 
stack  62:    244 104 38 
stack  63:    94 261 166 
stack  64:    274 58 
stack  65:    17 255 264 
stack  66:    60 102 33 
stack  67:    176 169 298 
stack  68:    206 19 22 
stack  69:    172 106 7 
stack  70:    146 54 141 
stack  71:    214 
stack  72:    262 230 139 
stack  73:    287 
stack  74:    292 71 82 
stack  75:    134 
stack  76:    215 175 30 
stack  77:    182 177 42 
stack  78:    277 124 51 
stack  79:    247 
stack  80:    119 238 2 
stack  81:    204 120 202 
stack  82:    223 65 229 
stack  83:    31 89 76 
stack  84:    275 198 40 
stack  85:    297 113 179 
stack  86:    283 
stack  87:    73 
stack  88:    269 196 93 
stack  89:    286 232 213 
stack  90:    70 284 280 
stack  91:    194 78 56 
stack  92:    72 1 88 
stack  93:    133 
stack  94:    278 184 271 
stack  95:    296 
stack  96:    186 25 138 
stack  97:    219 
stack  98:    50 224 246 
stack  99:    281 129 192 
stack 100:    37 174 178 
stack 101:    121 140 288 
stack 102:    142 180 34 
stack 103:    226 79 131 
stack 104:    188 
stack 105:    171 149 64 
stack 106:    16 
stack 107:    63 57 
stack 108:    157 103 250 
stack 109:    77 227 36 
stack 110:    155 293 259 
stack 111:    98 209 221 
stack 112:    228 
stack 113:    101 
stack 114:    10 205 289 
stack 115:    234 
stack 116:    187 159 266 
stack 117:    165 0 285 
stack 118:    294 67 170 
stack 119:    145 61 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
