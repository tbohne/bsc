solved with: BinPacking Formulation
time to solve: 300.35 s (time limit exceeded)
objective value: 5.0 (not optimal)

stacks (top to bottom):
stack   0:    19 
stack   1:    12 219 279 
stack   2:    108 138 233 
stack   3:    261 186 101 
stack   4:    287 
stack   5:    245 171 162 
stack   6:    140 141 232 
stack   7:    160 244 289 
stack   8:    85 
stack   9:    56 270 79 
stack  10:    0 72 21 
stack  11:    68 67 292 
stack  12:    137 177 190 
stack  13:    293 
stack  14:    212 122 188 
stack  15:    1 
stack  16:    35 222 203 
stack  17:    213 63 107 
stack  18:    98 39 273 
stack  19:    206 180 275 
stack  20:    248 
stack  21:    164 87 155 
stack  22:    120 88 149 
stack  23:    93 11 23 
stack  24:    30 45 193 
stack  25:    143 
stack  26:    200 199 3 
stack  27:    82 247 298 
stack  28:    176 18 119 
stack  29:    126 
stack  30:    281 27 271 
stack  31:    189 
stack  32:    131 117 
stack  33:    158 211 
stack  34:    215 125 139 
stack  35:    182 259 251 
stack  36:    65 294 100 
stack  37:    75 167 262 
stack  38:    208 53 96 
stack  39:    299 
stack  40:    90 
stack  41:    226 
stack  42:    102 
stack  43:    165 44 240 
stack  44:    15 34 47 
stack  45:    217 
stack  46:    239 174 204 
stack  47:    2 48 123 
stack  48:    209 284 52 
stack  49:    290 59 207 
stack  50:    55 229 194 
stack  51:    243 285 192 
stack  52:    95 132 179 
stack  53:    33 51 234 
stack  54:    84 113 76 
stack  55:    83 258 157 
stack  56:    272 
stack  57:    128 241 105 
stack  58:    178 231 
stack  59:    146 103 41 
stack  60:    91 24 250 
stack  61:    99 202 129 
stack  62:    29 191 133 
stack  63:    16 
stack  64:    154 6 255 
stack  65:    106 195 205 
stack  66:    28 
stack  67:    278 148 89 
stack  68:    296 276 252 
stack  69:    69 145 
stack  70:    37 111 152 
stack  71:    142 114 26 
stack  72:    66 156 197 
stack  73:    134 260 43 
stack  74:    46 80 249 
stack  75:    246 288 5 
stack  76:    235 
stack  77:    225 10 50 
stack  78:    159 14 286 
stack  79:    7 224 161 
stack  80:    216 173 256 
stack  81:    110 104 
stack  82:    196 
stack  83:    109 
stack  84:    269 254 144 
stack  85:    62 
stack  86:    36 20 230 
stack  87:    40 228 297 
stack  88:    220 274 282 
stack  89:    170 214 291 
stack  90:    127 
stack  91:    187 221 116 
stack  92:    150 147 38 
stack  93:    13 295 135 
stack  94:    121 86 264 
stack  95:    17 9 265 
stack  96:    25 198 163 
stack  97:    97 74 168 
stack  98:    112 268 283 
stack  99:    210 71 238 
stack 100:    78 166 218 
stack 101:    237 
stack 102:    153 
stack 103:    61 81 175 
stack 104:    54 183 263 
stack 105:    184 223 4 
stack 106:    169 280 94 
stack 107:    49 257 277 
stack 108:    8 115 266 
stack 109:    181 
stack 110:    31 151 118 
stack 111:    227 42 77 
stack 112:    201 57 73 
stack 113:    32 
stack 114:    172 70 124 
stack 115:    185 267 242 
stack 116:    92 236 136 
stack 117:    60 253 
stack 118:    22 
stack 119:    130 64 58 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.45 s (time limit exceeded)
objective value: 450.0 (not optimal)

stacks (top to bottom):
stack   0:    185 270 168 
stack   1:    62 
stack   2:    85 
stack   3:    222 197 118 
stack   4:    208 141 124 
stack   5:    97 232 211 
stack   6:    18 33 202 
stack   7:    19 
stack   8:    59 183 262 
stack   9:    269 282 207 
stack  10:    137 60 253 
stack  11:    287 
stack  12:    217 
stack  13:    55 173 20 
stack  14:    150 297 117 
stack  15:    165 63 116 
stack  16:    28 
stack  17:    98 21 
stack  18:    37 39 286 
stack  19:    248 
stack  20:    216 285 89 
stack  21:    182 195 
stack  22:    114 265 129 
stack  23:    201 11 136 
stack  24:    257 276 139 
stack  25:    8 14 171 
stack  26:    102 0 
stack  27:    184 292 250 
stack  28:    213 29 43 
stack  29:    148 218 163 
stack  30:    281 272 
stack  31:    90 
stack  32:    131 
stack  33:    164 223 50 
stack  34:    36 73 175 
stack  35:    120 156 107 
stack  36:    215 294 242 
stack  37:    158 172 70 
stack  38:    181 
stack  39:    121 277 149 
stack  40:    226 
stack  41:    299 
stack  42:    2 288 263 
stack  43:    44 240 26 
stack  44:    138 88 255 
stack  45:    64 151 77 
stack  46:    93 284 105 
stack  47:    291 123 162 
stack  48:    212 57 273 
stack  49:    259 224 194 
stack  50:    110 104 
stack  51:    115 67 252 
stack  52:    66 35 283 
stack  53:    159 254 52 
stack  54:    140 9 38 
stack  55:    106 166 157 
stack  56:    127 
stack  57:    235 
stack  58:    170 87 30 
stack  59:    45 48 230 
stack  60:    69 
stack  61:    91 81 144 
stack  62:    22 
stack  63:    61 71 275 
stack  64:    227 256 76 
stack  65:    83 236 190 
stack  66:    25 188 122 
stack  67:    1 
stack  68:    108 125 7 
stack  69:    46 132 233 
stack  70:    56 10 111 
stack  71:    12 40 133 
stack  72:    130 146 279 
stack  73:    200 249 101 
stack  74:    96 152 41 
stack  75:    178 231 
stack  76:    258 155 161 
stack  77:    78 193 244 
stack  78:    15 298 3 
stack  79:    54 99 135 
stack  80:    261 241 47 
stack  81:    134 128 260 
stack  82:    196 
stack  83:    245 296 79 
stack  84:    210 179 167 
stack  85:    198 23 191 
stack  86:    147 214 72 
stack  87:    278 228 199 
stack  88:    95 267 274 
stack  89:    109 
stack  90:    68 295 238 
stack  91:    65 82 74 
stack  92:    176 145 
stack  93:    13 27 58 
stack  94:    225 247 86 
stack  95:    16 
stack  96:    169 234 192 
stack  97:    189 
stack  98:    268 92 100 
stack  99:    239 266 264 
stack 100:    154 174 204 
stack 101:    237 
stack 102:    153 
stack 103:    84 94 203 
stack 104:    49 219 186 
stack 105:    126 
stack 106:    160 75 112 
stack 107:    143 
stack 108:    243 289 
stack 109:    220 103 5 
stack 110:    80 31 251 
stack 111:    142 280 42 
stack 112:    6 119 34 
stack 113:    177 221 4 
stack 114:    246 113 53 
stack 115:    290 206 32 
stack 116:    17 24 229 
stack 117:    271 51 205 
stack 118:    209 180 187 
stack 119:    293 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
