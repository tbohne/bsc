solved with: BinPacking Formulation
time to solve: 300.09 s (time limit exceeded)
objective value: 77.0 (not optimal)

stacks (top to bottom):
stack   0:    138 
stack   1:    286 33 92 
stack   2:    222 254 253 
stack   3:    247 20 266 
stack   4:    58 
stack   5:    218 18 185 
stack   6:    202 279 280 
stack   7:    201 214 299 
stack   8:    35 203 261 
stack   9:    294 
stack  10:    68 221 108 
stack  11:    206 251 288 
stack  12:    21 146 49 
stack  13:    103 183 241 
stack  14:    220 235 248 
stack  15:    95 226 143 
stack  16:    24 85 148 
stack  17:    184 189 171 
stack  18:    9 78 46 
stack  19:    127 268 99 
stack  20:    145 157 156 
stack  21:    158 269 122 
stack  22:    167 
stack  23:    61 169 
stack  24:    1 60 100 
stack  25:    79 53 4 
stack  26:    6 295 67 
stack  27:    3 113 191 
stack  28:    62 
stack  29:    180 147 70 
stack  30:    72 111 105 
stack  31:    84 25 
stack  32:    119 81 121 
stack  33:    298 179 232 
stack  34:    237 195 
stack  35:    16 193 50 
stack  36:    144 97 
stack  37:    129 116 142 
stack  38:    265 102 27 
stack  39:    172 
stack  40:    106 124 94 
stack  41:    199 2 
stack  42:    150 86 164 
stack  43:    42 114 174 
stack  44:    117 
stack  45:    8 47 19 
stack  46:    75 48 
stack  47:    110 22 
stack  48:    210 11 140 
stack  49:    130 87 
stack  50:    101 
stack  51:    134 194 149 
stack  52:    65 71 168 
stack  53:    36 123 
stack  54:    28 
stack  55:    7 90 240 
stack  56:    30 200 128 
stack  57:    77 133 260 
stack  58:    216 175 
stack  59:    159 284 69 
stack  60:    153 15 
stack  61:    115 166 
stack  62:    38 
stack  63:    257 187 213 
stack  64:    228 
stack  65:    263 
stack  66:    12 273 34 
stack  67:    223 76 82 
stack  68:    5 
stack  69:    136 219 
stack  70:    0 59 208 
stack  71:    165 56 45 
stack  72:    297 66 227 
stack  73:    31 
stack  74:    181 234 283 
stack  75:    271 39 250 
stack  76:    205 231 190 
stack  77:    109 
stack  78:    275 176 177 
stack  79:    163 54 215 
stack  80:    262 57 186 
stack  81:    278 242 14 
stack  82:    160 204 10 
stack  83:    162 139 
stack  84:    32 296 238 
stack  85:    196 
stack  86:    91 225 
stack  87:    155 125 173 
stack  88:    120 236 
stack  89:    246 80 161 
stack  90:    26 
stack  91:    182 198 233 
stack  92:    170 
stack  93:    229 192 152 
stack  94:    73 258 249 
stack  95:    118 188 245 
stack  96:    104 
stack  97:    96 83 41 
stack  98:    135 293 88 
stack  99:    281 51 141 
stack 100:    74 252 259 
stack 101:    98 17 264 
stack 102:    93 126 64 
stack 103:    270 44 285 
stack 104:    209 282 132 
stack 105:    244 40 
stack 106:    277 217 
stack 107:    55 178 207 
stack 108:    272 52 43 
stack 109:    13 
stack 110:    224 37 151 
stack 111:    137 
stack 112:    154 292 287 
stack 113:    230 274 289 
stack 114:    107 63 239 
stack 115:    211 212 243 
stack 116:    131 197 256 
stack 117:    23 29 291 
stack 118:    276 290 267 
stack 119:    112 89 255 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.81 s (time limit exceeded)
objective value: 663.0 (not optimal)

stacks (top to bottom):
stack   0:    147 70 
stack   1:    80 222 289 
stack   2:    83 3 94 
stack   3:    125 55 256 
stack   4:    178 212 242 
stack   5:    98 59 25 
stack   6:    202 187 291 
stack   7:    205 230 280 
stack   8:    296 203 245 
stack   9:    56 250 128 
stack  10:    294 
stack  11:    206 235 299 
stack  12:    9 188 208 
stack  13:    79 168 285 
stack  14:    150 39 227 
stack  15:    234 60 253 
stack  16:    159 97 
stack  17:    298 221 225 
stack  18:    278 
stack  19:    281 12 
stack  20:    244 
stack  21:    155 139 43 
stack  22:    131 146 99 
stack  23:    107 36 123 
stack  24:    153 
stack  25:    0 24 240 
stack  26:    252 217 100 
stack  27:    262 293 34 
stack  28:    58 5 
stack  29:    269 29 41 
stack  30:    7 8 249 
stack  31:    231 157 290 
stack  32:    23 176 287 
stack  33:    220 226 88 
stack  34:    259 
stack  35:    68 189 207 
stack  36:    130 87 
stack  37:    197 81 191 
stack  38:    86 32 241 
stack  39:    2 
stack  40:    96 27 260 
stack  41:    118 47 140 
stack  42:    271 167 
stack  43:    116 183 10 
stack  44:    286 51 122 
stack  45:    106 45 
stack  46:    112 76 171 
stack  47:    193 89 156 
stack  48:    30 11 198 
stack  49:    145 251 46 
stack  50:    57 186 148 
stack  51:    101 
stack  52:    184 126 4 
stack  53:    224 164 
stack  54:    223 194 82 
stack  55:    77 90 121 
stack  56:    1 16 243 
stack  57:    120 136 236 
stack  58:    277 142 
stack  59:    209 54 288 
stack  60:    42 114 161 
stack  61:    284 69 
stack  62:    297 200 255 
stack  63:    210 102 19 
stack  64:    182 141 
stack  65:    276 204 238 
stack  66:    275 37 213 
stack  67:    124 35 50 
stack  68:    218 282 132 
stack  69:    66 215 266 
stack  70:    72 71 143 
stack  71:    61 190 169 
stack  72:    247 113 292 
stack  73:    160 274 258 
stack  74:    91 
stack  75:    180 75 233 
stack  76:    95 20 232 
stack  77:    117 
stack  78:    163 279 264 
stack  79:    172 152 
stack  80:    103 151 15 
stack  81:    138 
stack  82:    44 268 33 
stack  83:    263 
stack  84:    154 211 49 
stack  85:    53 158 219 
stack  86:    257 92 185 
stack  87:    265 229 48 
stack  88:    28 
stack  89:    201 179 214 
stack  90:    109 
stack  91:    115 166 
stack  92:    270 85 149 
stack  93:    73 165 108 
stack  94:    26 
stack  95:    162 261 105 
stack  96:    93 17 40 
stack  97:    228 
stack  98:    13 
stack  99:    84 
stack 100:    74 129 22 
stack 101:    216 175 
stack 102:    137 
stack 103:    237 195 173 
stack 104:    246 135 239 
stack 105:    181 170 
stack 106:    196 
stack 107:    63 273 283 
stack 108:    272 52 177 
stack 109:    144 192 254 
stack 110:    110 31 
stack 111:    62 
stack 112:    119 18 174 
stack 113:    134 21 14 
stack 114:    199 133 64 
stack 115:    104 
stack 116:    38 
stack 117:    127 111 248 
stack 118:    65 78 267 
stack 119:    6 295 67 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
