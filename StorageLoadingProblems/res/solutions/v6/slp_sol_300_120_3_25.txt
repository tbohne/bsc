solved with: BinPacking Formulation
time to solve: 300.33 s (time limit exceeded)
objective value: 77.0 (not optimal)

stacks (top to bottom):
stack   0:    138 
stack   1:    286 33 92 
stack   2:    222 254 253 
stack   3:    247 20 266 
stack   4:    58 
stack   5:    218 18 185 
stack   6:    202 279 280 
stack   7:    201 214 299 
stack   8:    35 203 261 
stack   9:    294 
stack  10:    68 221 108 
stack  11:    206 251 288 
stack  12:    21 146 49 
stack  13:    103 183 241 
stack  14:    220 235 248 
stack  15:    95 226 143 
stack  16:    24 85 148 
stack  17:    184 189 171 
stack  18:    9 78 46 
stack  19:    127 268 99 
stack  20:    145 157 156 
stack  21:    158 269 122 
stack  22:    167 
stack  23:    61 169 
stack  24:    1 60 100 
stack  25:    79 53 4 
stack  26:    6 295 67 
stack  27:    3 113 191 
stack  28:    62 
stack  29:    180 147 70 
stack  30:    72 111 105 
stack  31:    84 25 
stack  32:    119 81 121 
stack  33:    298 179 232 
stack  34:    237 195 
stack  35:    16 193 50 
stack  36:    144 97 
stack  37:    129 116 142 
stack  38:    265 102 27 
stack  39:    172 
stack  40:    106 124 94 
stack  41:    199 2 
stack  42:    150 86 164 
stack  43:    42 114 174 
stack  44:    117 
stack  45:    8 47 19 
stack  46:    75 48 
stack  47:    110 22 
stack  48:    210 11 140 
stack  49:    130 87 
stack  50:    101 
stack  51:    134 194 149 
stack  52:    65 71 168 
stack  53:    36 123 
stack  54:    28 
stack  55:    7 90 240 
stack  56:    30 200 128 
stack  57:    77 133 260 
stack  58:    216 175 
stack  59:    159 284 69 
stack  60:    153 15 
stack  61:    115 166 
stack  62:    38 
stack  63:    257 187 213 
stack  64:    228 
stack  65:    263 
stack  66:    12 273 34 
stack  67:    223 76 82 
stack  68:    5 
stack  69:    136 219 
stack  70:    0 59 208 
stack  71:    165 56 45 
stack  72:    297 66 227 
stack  73:    31 
stack  74:    181 234 283 
stack  75:    271 39 250 
stack  76:    205 231 190 
stack  77:    109 
stack  78:    275 176 177 
stack  79:    163 54 215 
stack  80:    262 57 186 
stack  81:    278 242 14 
stack  82:    160 204 10 
stack  83:    162 139 
stack  84:    32 296 238 
stack  85:    196 
stack  86:    91 225 
stack  87:    155 125 173 
stack  88:    120 236 
stack  89:    246 80 161 
stack  90:    26 
stack  91:    182 198 233 
stack  92:    170 
stack  93:    229 192 152 
stack  94:    73 258 249 
stack  95:    118 188 245 
stack  96:    104 
stack  97:    96 83 41 
stack  98:    135 293 88 
stack  99:    281 51 141 
stack 100:    74 252 259 
stack 101:    98 17 264 
stack 102:    93 126 64 
stack 103:    270 44 285 
stack 104:    209 282 132 
stack 105:    244 40 
stack 106:    277 217 
stack 107:    55 178 207 
stack 108:    272 52 43 
stack 109:    13 
stack 110:    224 37 151 
stack 111:    137 
stack 112:    154 292 287 
stack 113:    230 274 289 
stack 114:    107 63 239 
stack 115:    211 212 243 
stack 116:    131 197 256 
stack 117:    23 29 291 
stack 118:    276 290 267 
stack 119:    112 89 255 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 301.05 s (time limit exceeded)
objective value: 568.0 (not optimal)

stacks (top to bottom):
stack   0:    147 70 
stack   1:    230 102 292 
stack   2:    224 3 94 
stack   3:    247 80 256 
stack   4:    8 212 4 
stack   5:    218 65 255 
stack   6:    202 187 260 
stack   7:    210 46 280 
stack   8:    199 33 261 
stack   9:    56 250 128 
stack  10:    294 
stack  11:    93 235 299 
stack  12:    9 188 208 
stack  13:    79 168 285 
stack  14:    39 211 227 
stack  15:    95 60 253 
stack  16:    159 97 
stack  17:    298 221 291 
stack  18:    183 52 222 
stack  19:    281 12 
stack  20:    23 83 140 
stack  21:    162 139 43 
stack  22:    278 99 
stack  23:    107 36 123 
stack  24:    216 175 
stack  25:    0 17 232 
stack  26:    252 171 
stack  27:    78 231 34 
stack  28:    58 5 
stack  29:    272 203 41 
stack  30:    153 25 
stack  31:    282 254 290 
stack  32:    257 20 266 
stack  33:    270 226 30 
stack  34:    119 259 
stack  35:    193 16 207 
stack  36:    130 87 
stack  37:    197 81 191 
stack  38:    86 32 241 
stack  39:    2 
stack  40:    157 27 273 
stack  41:    117 
stack  42:    271 167 
stack  43:    111 178 10 
stack  44:    286 51 249 
stack  45:    200 72 45 
stack  46:    125 76 217 
stack  47:    103 156 
stack  48:    229 194 198 
stack  49:    145 251 225 
stack  50:    57 186 148 
stack  51:    1 180 48 
stack  52:    96 44 219 
stack  53:    220 268 164 
stack  54:    73 11 213 
stack  55:    77 90 240 
stack  56:    155 243 
stack  57:    120 136 236 
stack  58:    277 142 
stack  59:    201 54 289 
stack  60:    42 114 161 
stack  61:    284 69 
stack  62:    127 234 50 
stack  63:    297 269 19 
stack  64:    206 71 141 
stack  65:    106 204 238 
stack  66:    110 37 108 
stack  67:    172 
stack  68:    13 
stack  69:    118 88 82 
stack  70:    7 98 143 
stack  71:    61 190 169 
stack  72:    265 113 174 
stack  73:    160 274 258 
stack  74:    91 
stack  75:    75 233 
stack  76:    146 126 245 
stack  77:    154 55 122 
stack  78:    176 279 264 
stack  79:    205 152 
stack  80:    134 151 15 
stack  81:    68 47 158 
stack  82:    138 288 
stack  83:    263 
stack  84:    137 
stack  85:    196 
stack  86:    150 35 185 
stack  87:    189 29 242 
stack  88:    28 
stack  89:    209 179 214 
stack  90:    244 
stack  91:    115 166 
stack  92:    276 85 149 
stack  93:    116 124 177 
stack  94:    26 
stack  95:    246 182 105 
stack  96:    165 112 49 
stack  97:    228 
stack  98:    38 
stack  99:    84 
stack 100:    74 129 22 
stack 101:    109 
stack 102:    66 92 121 
stack 103:    237 195 173 
stack 104:    262 135 239 
stack 105:    181 170 
stack 106:    18 296 132 
stack 107:    24 63 283 
stack 108:    101 
stack 109:    144 192 287 
stack 110:    31 
stack 111:    62 
stack 112:    184 215 14 
stack 113:    163 21 100 
stack 114:    223 133 64 
stack 115:    104 
stack 116:    131 89 40 
stack 117:    275 293 248 
stack 118:    53 59 267 
stack 119:    6 295 67 

#####################################################

solved with: Constructive Heuristic
Problem not solved.
