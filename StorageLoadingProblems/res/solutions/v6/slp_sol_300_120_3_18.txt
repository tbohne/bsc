solved with: BinPacking Formulation
time to solve: 71.38 s
objective value: 0.0

stacks (top to bottom):
stack   0:    148 66 198 
stack   1:    129 239 228 
stack   2:    230 221 245 
stack   3:    86 33 77 
stack   4:    81 196 189 
stack   5:    82 277 30 
stack   6:    218 
stack   7:    130 65 135 
stack   8:    49 246 255 
stack   9:    108 143 149 
stack  10:    20 190 39 
stack  11:    235 94 83 
stack  12:    10 88 160 
stack  13:    180 284 7 
stack  14:    28 215 136 
stack  15:    13 89 287 
stack  16:    153 223 29 
stack  17:    265 36 
stack  18:    79 
stack  19:    102 217 64 
stack  20:    271 115 263 
stack  21:    211 139 191 
stack  22:    68 55 257 
stack  23:    24 70 171 
stack  24:    127 197 107 
stack  25:    253 134 200 
stack  26:    163 168 45 
stack  27:    295 133 214 
stack  28:    71 111 105 
stack  29:    37 264 99 
stack  30:    14 222 62 
stack  31:    31 75 142 
stack  32:    259 5 262 
stack  33:    166 296 282 
stack  34:    116 
stack  35:    87 204 199 
stack  36:    248 44 278 
stack  37:    181 173 104 
stack  38:    151 
stack  39:    128 158 84 
stack  40:    2 237 254 
stack  41:    26 23 74 
stack  42:    6 19 56 
stack  43:    176 80 299 
stack  44:    117 177 
stack  45:    232 
stack  46:    150 40 21 
stack  47:    274 236 275 
stack  48:    67 34 273 
stack  49:    51 165 225 
stack  50:    18 
stack  51:    17 63 93 
stack  52:    91 202 208 
stack  53:    286 
stack  54:    140 270 174 
stack  55:    167 
stack  56:    54 276 216 
stack  57:    267 
stack  58:    161 288 147 
stack  59:    46 
stack  60:    59 0 212 
stack  61:    298 289 234 
stack  62:    205 
stack  63:    53 
stack  64:    69 280 50 
stack  65:    179 73 121 
stack  66:    260 297 152 
stack  67:    103 
stack  68:    90 144 227 
stack  69:    95 
stack  70:    123 233 
stack  71:    292 
stack  72:    38 12 85 
stack  73:    186 118 
stack  74:    207 8 266 
stack  75:    164 183 195 
stack  76:    213 
stack  77:    154 193 206 
stack  78:    138 
stack  79:    92 184 256 
stack  80:    162 279 269 
stack  81:    141 155 243 
stack  82:    231 283 272 
stack  83:    27 187 32 
stack  84:    15 188 146 
stack  85:    52 
stack  86:    201 
stack  87:    178 238 137 
stack  88:    250 156 119 
stack  89:    210 145 112 
stack  90:    293 258 4 
stack  91:    58 249 220 
stack  92:    294 252 247 
stack  93:    240 97 
stack  94:    185 170 35 
stack  95:    101 
stack  96:    242 
stack  97:    192 251 
stack  98:    1 261 159 
stack  99:    290 42 291 
stack 100:    98 48 9 
stack 101:    241 
stack 102:    60 182 226 
stack 103:    203 
stack 104:    229 281 244 
stack 105:    16 
stack 106:    169 114 172 
stack 107:    96 
stack 108:    109 43 209 
stack 109:    100 157 194 
stack 110:    175 122 126 
stack 111:    120 125 131 
stack 112:    78 76 219 
stack 113:    41 57 132 
stack 114:    72 
stack 115:    106 124 268 
stack 116:    25 3 113 
stack 117:    61 
stack 118:    11 47 110 
stack 119:    224 285 22 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 301.07 s (time limit exceeded)
objective value: 209.0 (not optimal)

stacks (top to bottom):
stack   0:    78 297 42 
stack   1:    201 
stack   2:    79 
stack   3:    188 3 77 
stack   4:    72 189 
stack   5:    277 66 251 
stack   6:    148 8 131 
stack   7:    169 113 
stack   8:    116 269 
stack   9:    240 288 299 
stack  10:    86 239 12 
stack  11:    43 111 39 
stack  12:    186 88 172 
stack  13:    250 34 22 
stack  14:    18 
stack  15:    276 261 147 
stack  16:    176 287 7 
stack  17:    253 282 
stack  18:    242 36 
stack  19:    223 139 64 
stack  20:    52 
stack  21:    24 203 
stack  22:    167 
stack  23:    58 204 171 
stack  24:    185 279 247 
stack  25:    236 134 291 
stack  26:    74 168 200 
stack  27:    37 0 214 
stack  28:    231 212 
stack  29:    57 182 99 
stack  30:    197 281 128 
stack  31:    241 
stack  32:    165 257 
stack  33:    6 249 9 
stack  34:    222 71 255 
stack  35:    265 127 273 
stack  36:    205 
stack  37:    25 258 173 
stack  38:    259 177 208 
stack  39:    280 217 84 
stack  40:    5 237 56 
stack  41:    141 23 87 
stack  42:    230 63 228 
stack  43:    166 60 227 
stack  44:    293 149 4 
stack  45:    229 160 262 
stack  46:    68 243 
stack  47:    41 146 
stack  48:    98 10 
stack  49:    54 51 198 
stack  50:    38 162 92 
stack  51:    117 114 129 
stack  52:    150 202 256 
stack  53:    286 
stack  54:    81 260 244 
stack  55:    180 138 
stack  56:    17 40 174 
stack  57:    164 157 93 
stack  58:    80 221 161 
stack  59:    46 
stack  60:    292 
stack  61:    69 289 215 
stack  62:    49 238 136 
stack  63:    53 
stack  64:    271 47 263 
stack  65:    179 33 268 
stack  66:    298 191 121 
stack  67:    295 55 29 
stack  68:    90 158 30 
stack  69:    211 266 85 
stack  70:    100 233 216 
stack  71:    2 140 83 
stack  72:    59 178 103 
stack  73:    163 35 
stack  74:    89 219 14 
stack  75:    26 20 285 
stack  76:    283 190 105 
stack  77:    120 206 
stack  78:    181 115 15 
stack  79:    130 124 184 
stack  80:    218 
stack  81:    207 155 194 
stack  82:    67 264 272 
stack  83:    82 187 270 
stack  84:    278 145 45 
stack  85:    232 
stack  86:    252 284 275 
stack  87:    210 137 
stack  88:    274 101 
stack  89:    91 73 112 
stack  90:    192 156 225 
stack  91:    19 125 135 
stack  92:    94 65 234 
stack  93:    27 97 
stack  94:    16 
stack  95:    153 196 104 
stack  96:    154 296 195 
stack  97:    108 183 32 
stack  98:    106 245 159 
stack  99:    143 28 110 
stack 100:    213 
stack 101:    209 76 62 
stack 102:    151 
stack 103:    248 44 119 
stack 104:    96 
stack 105:    175 50 
stack 106:    75 246 152 
stack 107:    294 122 107 
stack 108:    290 142 226 
stack 109:    95 
stack 110:    235 48 126 
stack 111:    102 70 13 
stack 112:    144 118 11 
stack 113:    123 1 132 
stack 114:    170 
stack 115:    193 31 220 
stack 116:    267 
stack 117:    61 
stack 118:    109 254 21 
stack 119:    224 133 199 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
time to solve: 7.95 s
objective value: 1359.0

stacks (top to bottom):
stack   0:    79 9 
stack   1:    72 189 
stack   2:    16 97 
stack   3:    53 36 
stack   4:    278 233 234 
stack   5:    279 5 4 
stack   6:    280 6 7 
stack   7:    281 8 29 
stack   8:    284 33 32 
stack   9:    285 34 35 
stack  10:    287 63 64 
stack  11:    288 114 112 
stack  12:    41 127 126 
stack  13:    42 133 132 
stack  14:    48 134 135 
stack  15:    49 139 136 
stack  16:    58 140 137 
stack  17:    60 145 146 
stack  18:    68 149 152 
stack  19:    70 160 159 
stack  20:    69 196 195 
stack  21:    71 200 199 
stack  22:    80 209 208 
stack  23:    81 224 225 
stack  24:    90 245 244 
stack  25:    92 254 255 
stack  26:    94 257 256 
stack  27:    98 264 262 
stack  28:    116 270 269 
stack  29:    118 276 273 
stack  30:    153 283 282 
stack  31:    155 23 22 
stack  32:    154 40 77 
stack  33:    156 57 56 
stack  34:    86 84 
stack  35:    175 174 
stack  36:    163 197 198 
stack  37:    207 206 
stack  38:    165 215 216 
stack  39:    176 246 247 
stack  40:    177 277 275 
stack  41:    25 232 
stack  42:    26 30 
stack  43:    67 46 
stack  44:    191 87 85 
stack  45:    253 95 
stack  46:    274 101 
stack  47:    102 103 
stack  48:    192 173 172 
stack  49:    230 226 
stack  50:    240 243 
stack  51:    258 252 251 
stack  52:    100 99 
stack  53:    24 106 104 
stack  54:    130 131 
stack  55:    180 150 138 
stack  56:    148 147 
stack  57:    259 193 194 
stack  58:    290 229 203 
stack  59:    211 214 
stack  60:    235 228 
stack  61:    271 272 
stack  62:    38 213 
stack  63:    59 62 
stack  64:    91 93 
stack  65:    109 107 
stack  66:    293 291 
stack  67:    294 51 50 
stack  68:    2 82 83 
stack  69:    120 121 
stack  70:    166 265 263 
stack  71:    78 201 
stack  72:    108 105 
stack  73:    296 115 113 
stack  74:    186 231 227 
stack  75:    210 212 
stack  76:    295 221 220 
stack  77:    248 242 
stack  78:    297 266 268 
stack  79:    298 47 45 
stack  80:    117 119 
stack  81:    185 184 
stack  82:    96 
stack  83:    241 
stack  84:    18 
stack  85:    52 
stack  86:    292 
stack  87:    151 
stack  88:    167 
stack  89:    218 
stack  90:    267 
stack  91:    61 
stack  92:    205 
stack  93:    286 
stack  94:    299 20 21 
stack  95:    27 37 39 
stack  96:    3 1 0 
stack  97:    31 11 10 
stack  98:    141 13 12 
stack  99:    142 15 14 
stack 100:    164 19 17 
stack 101:    168 44 43 
stack 102:    169 55 54 
stack 103:    171 66 65 
stack 104:    178 74 73 
stack 105:    179 76 75 
stack 106:    249 89 88 
stack 107:    250 111 110 
stack 108:    122 125 124 
stack 109:    123 129 128 
stack 110:    181 144 143 
stack 111:    183 158 157 
stack 112:    28 162 161 
stack 113:    170 190 188 
stack 114:    289 204 202 
stack 115:    182 219 217 
stack 116:    187 223 222 
stack 117:    237 236 
stack 118:    239 238 
stack 119:    261 260 

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
time to solve: 0.22 s
objective value: 1356.0

stacks (top to bottom):
stack   0:    27 31 4 
stack   1:    41 42 5 
stack   2:    49 48 6 
stack   3:    68 70 7 
stack   4:    81 80 22 
stack   5:    98 94 23 
stack   6:    116 118 40 
stack   7:    153 155 50 
stack   8:    154 156 51 
stack   9:    163 165 63 
stack  10:    164 168 64 
stack  11:    179 178 77 
stack  12:    180 182 112 
stack  13:    181 183 114 
stack  14:    186 187 126 
stack  15:    250 249 127 
stack  16:    290 289 134 
stack  17:    294 296 135 
stack  18:    298 299 145 
stack  19:    2 3 146 
stack  20:    24 28 149 
stack  21:    58 60 152 
stack  22:    90 92 197 
stack  23:    123 122 198 
stack  24:    141 142 199 
stack  25:    169 171 200 
stack  26:    192 191 208 
stack  27:    120 121 256 
stack  28:    176 177 209 
stack  29:    259 258 215 
stack  30:    295 297 216 
stack  31:    37 39 234 
stack  32:    69 71 224 
stack  33:    166 170 225 
stack  34:    59 62 247 
stack  35:    0 1 233 
stack  36:    10 11 246 
stack  37:    12 13 257 
stack  38:    14 15 266 
stack  39:    17 19 268 
stack  40:    43 44 269 
stack  41:    54 55 270 
stack  42:    65 66 273 
stack  43:    73 74 275 
stack  44:    75 76 276 
stack  45:    88 89 277 
stack  46:    110 111 282 
stack  47:    124 125 283 
stack  48:    108 229 203 
stack  49:    148 147 206 
stack  50:    235 228 104 
stack  51:    230 26 30 
stack  52:    211 214 212 
stack  53:    16 97 9 
stack  54:    130 129 8 
stack  55:    185 188 20 
stack  56:    207 204 21 
stack  57:    117 113 99 
stack  58:    210 217 29 
stack  59:    231 286 242 
stack  60:    240 239 33 
stack  61:    271 278 34 
stack  62:    91 87 45 
stack  63:    175 184 291 
stack  64:    82 83 105 
stack  65:    293 288 32 
stack  66:    109 115 35 
stack  67:    38 56 227 
stack  68:    25 47 57 
stack  69:    202 133 195 
stack  70:    102 162 172 
stack  71:    143 260 137 
stack  72:    67 46 
stack  73:    128 261 119 
stack  74:    265 140 136 
stack  75:    72 189 
stack  76:    78 196 194 
stack  77:    106 107 
stack  78:    86 85 
stack  79:    150 138 
stack  80:    274 101 
stack  81:    173 190 174 
stack  82:    223 193 226 
stack  83:    100 93 
stack  84:    160 161 131 
stack  85:    158 264 159 
stack  86:    144 157 103 
stack  87:    279 280 255 
stack  88:    248 251 
stack  89:    253 95 
stack  90:    139 285 132 
stack  91:    245 287 244 
stack  92:    236 237 262 
stack  93:    53 36 
stack  94:    252 254 272 
stack  95:    219 220 263 
stack  96:    221 222 84 
stack  97:    238 243 
stack  98:    281 284 
stack  99:    18 
stack 100:    52 
stack 101:    61 
stack 102:    79 
stack 103:    96 
stack 104:    151 
stack 105:    167 
stack 106:    201 
stack 107:    205 
stack 108:    213 
stack 109:    218 
stack 110:    232 
stack 111:    241 
stack 112:    267 
stack 113:    292 
stack 114:    
stack 115:    
stack 116:    
stack 117:    
stack 118:    
stack 119:    
