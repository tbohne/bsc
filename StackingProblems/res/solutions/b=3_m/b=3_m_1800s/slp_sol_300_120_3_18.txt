solved with: SP.mip_formulations.BinPackingFormulation
time limit: 1800 s
time to solve: 883,89 s
objective value: 26120.0

stacks (top to bottom):
stack   0:    1
stack   1:    0
stack   2:    2
stack   3:    3
stack   4:
stack   5:    5 4 6
stack   6:
stack   7:    7
stack   8:    8
stack   9:    9
stack  10:
stack  11:    10 11
stack  12:    12
stack  13:
stack  14:    14
stack  15:    16 15
stack  16:    13
stack  17:    17
stack  18:
stack  19:    20 19
stack  20:    18
stack  21:    23
stack  22:    21
stack  23:    22
stack  24:    25 24
stack  25:    26
stack  26:    28
stack  27:    27
stack  28:
stack  29:    29
stack  30:    263 30 31
stack  31:    250 32 299
stack  32:    154 36 204
stack  33:    33 287 259
stack  34:    235 244 34
stack  35:    35 39 236
stack  36:    37 193 82
stack  37:    179 273 266
stack  38:    271 201 38
stack  39:    40 226 207
stack  40:    110 255 168
stack  41:    238 220 41
stack  42:    42 262 111
stack  43:    43 171 155
stack  44:    44 146 76
stack  45:    100 45 166
stack  46:    55 137 46
stack  47:    194 47 240
stack  48:    149 49 48
stack  49:    50 78 289
stack  50:    297 172 191
stack  51:    73 51 206
stack  52:    288 256 52
stack  53:    150 53 123
stack  54:    279 54 135
stack  55:    62 152 195
stack  56:    202 56 58
stack  57:    188 66 57
stack  58:    128 218 222
stack  59:    59 153 215
stack  60:    60 158 156
stack  61:    61 199 165
stack  62:    63 212 141
stack  63:    157 187 129
stack  64:    277 64 242
stack  65:    115 293 65
stack  66:    67 257 275
stack  67:    182 74 177
stack  68:    68 104 134
stack  69:    209 180 69
stack  70:    291 70 230
stack  71:    120 71 138
stack  72:    72 284 253
stack  73:    228 126 139
stack  74:    198 173 87
stack  75:    258 75 170
stack  76:    80 131 246
stack  77:    280 77 283
stack  78:    136 243 223
stack  79:    79 161 145
stack  80:    151 133 81
stack  81:    186 294 132
stack  82:    162 224 176
stack  83:    286 83 285
stack  84:    121 190 84
stack  85:    175 211 85
stack  86:    86 119 216
stack  87:    217 270 160
stack  88:    88 122 278
stack  89:    203 89 265
stack  90:    231 90 213
stack  91:    184 91 239
stack  92:    127 92 208
stack  93:    254 189 93
stack  94:    247 227 94
stack  95:    95 267 185
stack  96:    144 96 248
stack  97:    290 97 124
stack  98:    98 192 113
stack  99:    234 99 205
stack 100:    101 140 197
stack 101:    229 249 102
stack 102:    225 245 281
stack 103:    103 241 167
stack 104:    296 210 276
stack 105:    163 105 196
stack 106:    106 118 252
stack 107:    295 264 107
stack 108:    108 272 298
stack 109:    221 219 109
stack 110:    260 181 268
stack 111:    251 117 130
stack 112:    114 125 112
stack 113:    143 269 174
stack 114:    261 183 282
stack 115:    237 178 116
stack 116:    233 274 142
stack 117:    169 232 147
stack 118:    164 148 214
stack 119:    292 200 159

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 1800 s
time to solve: 0,31 s
objective value: 26193.0

stacks (top to bottom):
stack   0:
stack   1:    0 2
stack   2:
stack   3:    1 4
stack   4:
stack   5:    5 3
stack   6:
stack   7:    10 7
stack   8:    8 6
stack   9:
stack  10:
stack  11:
stack  12:    11 12
stack  13:
stack  14:
stack  15:    14 15
stack  16:    19 13
stack  17:    16 17
stack  18:
stack  19:
stack  20:
stack  21:
stack  22:    20 18
stack  23:    21 24
stack  24:
stack  25:    26 221 22
stack  26:    28 25
stack  27:    32 23
stack  28:    36 37
stack  29:    42 27
stack  30:    214 9 38
stack  31:    33 31
stack  32:    30 29
stack  33:    40 220 41
stack  34:    44 34
stack  35:    35 217 39
stack  36:    47 226 48
stack  37:    255 128 132
stack  38:    74 249 82
stack  39:    219 45 46
stack  40:    250 112 113
stack  41:    143 268 139
stack  42:    50 51 216
stack  43:    231 43 65
stack  44:    114 117 253
stack  45:    188 180 299
stack  46:    238 88 81
stack  47:    286 167 170
stack  48:    73 72 230
stack  49:    56 49 223
stack  50:    55 53 218
stack  51:    235 68 69
stack  52:    59 292 52
stack  53:    106 248 111
stack  54:    62 54 224
stack  55:    98 243 92
stack  56:    228 57 58
stack  57:    67 225 66
stack  58:    63 227 60
stack  59:    80 78 236
stack  60:    151 152 281
stack  61:    61 64 222
stack  62:    182 181 197
stack  63:    163 287 162
stack  64:    164 148 262
stack  65:    254 105 107
stack  66:    178 172 282
stack  67:    136 272 126
stack  68:    71 70 242
stack  69:    288 166 165
stack  70:    127 266 129
stack  71:    233 79 75
stack  72:    296 179 177
stack  73:    95 89 246
stack  74:    232 85 76
stack  75:    245 96 102
stack  76:    77 256 84
stack  77:    280 154 156
stack  78:    193 192 270
stack  79:    274 146 145
stack  80:    110 247 103
stack  81:    86 234 83
stack  82:    97 258 94
stack  83:    100 91 240
stack  84:    251 104 99
stack  85:    291 160 159
stack  86:    190 187 196
stack  87:    90 241 87
stack  88:    260 122 123
stack  89:    244 101 93
stack  90:    198 199 293
stack  91:    271 189 191
stack  92:    133 135 259
stack  93:    277 144 138
stack  94:    273 210 213
stack  95:    276 140 141
stack  96:    175 289 176
stack  97:    150 149 278
stack  98:    297 229 200
stack  99:    153 283 155
stack 100:    157 158 285
stack 101:    263 137 134
stack 102:    121 267 119
stack 103:    284 168 171
stack 104:    120 261 116
stack 105:    264 131 130
stack 106:    290 173 174
stack 107:    184 183 298
stack 108:    108 257 109
stack 109:    125 265 124
stack 110:    207 205 239
stack 111:    279 161 169
stack 112:    237 212 215
stack 113:    295 201 204
stack 114:    194 206 208
stack 115:    115 118 252
stack 116:    269 142 147
stack 117:    209 211 275
stack 118:    186 294 185
stack 119:    203 202 195
