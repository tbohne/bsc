solved with: SP.mip_formulations.BinPackingFormulation
time limit: 1800 s
time to solve: 904,79 s
objective value: 26120.0

stacks (top to bottom):
stack   0:    1
stack   1:    3
stack   2:    2
stack   3:    0
stack   4:    5 4
stack   5:
stack   6:    7 6
stack   7:
stack   8:    8
stack   9:    9
stack  10:    11 10
stack  11:
stack  12:    12
stack  13:    13
stack  14:    18 14
stack  15:
stack  16:    16 15
stack  17:    17
stack  18:
stack  19:
stack  20:    20
stack  21:    19 21
stack  22:    22
stack  23:    24
stack  24:    23
stack  25:    26 25
stack  26:    27
stack  27:
stack  28:    28
stack  29:    29
stack  30:    31 30 283
stack  31:    33 97 110
stack  32:    281 35 32
stack  33:    183 81 34
stack  34:    109 148 239
stack  35:    235 205 170
stack  36:    117 261 36
stack  37:    37 138 135
stack  38:    268 38 225
stack  39:    290 39 57
stack  40:    248 40 200
stack  41:    274 41 246
stack  42:    123 42 186
stack  43:    245 43 67
stack  44:    230 179 44
stack  45:    45 184 73
stack  46:    95 46 276
stack  47:    228 128 47
stack  48:    193 269 48
stack  49:    260 297 49
stack  50:    50 279 182
stack  51:    282 51 232
stack  52:    125 100 52
stack  53:    53 54 278
stack  54:    251 149 291
stack  55:    56 55 263
stack  56:    175 144 190
stack  57:    204 167 284
stack  58:    58 166 155
stack  59:    61 59 203
stack  60:    224 194 60
stack  61:    286 236 247
stack  62:    62 295 176
stack  63:    191 169 63
stack  64:    136 64 160
stack  65:    256 118 65
stack  66:    145 150 66
stack  67:    126 249 139
stack  68:    77 68 137
stack  69:    88 161 69
stack  70:    70 79 237
stack  71:    141 124 71
stack  72:    223 72 120
stack  73:    74 272 195
stack  74:    259 211 158
stack  75:    174 121 75
stack  76:    76 293 198
stack  77:    134 241 78
stack  78:    177 294 116
stack  79:    289 196 197
stack  80:    131 80 163
stack  81:    115 218 189
stack  82:    83 250 82
stack  83:    275 243 188
stack  84:    84 214 254
stack  85:    85 140 86
stack  86:    217 227 280
stack  87:    244 87 226
stack  88:    185 215 208
stack  89:    89 156 201
stack  90:    91 234 90
stack  91:    178 98 299
stack  92:    119 233 92
stack  93:    202 96 93
stack  94:    292 180 94
stack  95:    273 265 127
stack  96:    172 129 258
stack  97:    187 229 242
stack  98:    146 142 143
stack  99:    99 210 253
stack 100:    219 153 154
stack 101:    101 102 220
stack 102:    105 147 262
stack 103:    103 252 264
stack 104:    133 168 104
stack 105:    152 106 181
stack 106:    171 231 192
stack 107:    271 132 107
stack 108:    209 222 108
stack 109:    164 270 199
stack 110:    287 157 165
stack 111:    111 159 130
stack 112:    112 298 277
stack 113:    122 206 113
stack 114:    267 114 212
stack 115:    266 238 216
stack 116:    257 213 255
stack 117:    207 288 221
stack 118:    151 240 162
stack 119:    296 173 285

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 1800 s
time to solve: 0,21 s
objective value: 26248.0

stacks (top to bottom):
stack   0:    1 3
stack   1:
stack   2:
stack   3:    0 4
stack   4:    7 5
stack   5:
stack   6:
stack   7:
stack   8:
stack   9:    8 10
stack  10:
stack  11:    13 221 9
stack  12:
stack  13:    12 15
stack  14:    11 14
stack  15:
stack  16:    16 17
stack  17:
stack  18:    2 293
stack  19:    294 6
stack  20:    18 21
stack  21:
stack  22:    22 24
stack  23:    26 19
stack  24:
stack  25:
stack  26:    27 32
stack  27:
stack  28:    25 30
stack  29:    28 20
stack  30:    29 23 213
stack  31:    33 36
stack  32:    111 112 277
stack  33:    31 34
stack  34:    37 35
stack  35:    68 218 65
stack  36:    40 214 44
stack  37:    231 50 59
stack  38:    217 39 38
stack  39:    219 46 41
stack  40:    235 77 78
stack  41:    61 43 216
stack  42:    42 236 48
stack  43:    230 196 197
stack  44:    45 52 220
stack  45:    233 51 47
stack  46:    200 264 203
stack  47:    122 266 120
stack  48:    227 49 54
stack  49:    56 55 222
stack  50:    174 295 176
stack  51:    224 53 60
stack  52:    123 257 121
stack  53:    85 87 246
stack  54:    70 273 66
stack  55:    128 129 258
stack  56:    58 57 226
stack  57:    259 125 127
stack  58:    156 287 157
stack  59:    95 251 94
stack  60:    62 229 63
stack  61:    153 154 283
stack  62:    238 64 67
stack  63:    205 201 232
stack  64:    234 81 82
stack  65:    84 79 265
stack  66:    281 161 165
stack  67:    223 191 190
stack  68:    72 239 73
stack  69:    228 71 69
stack  70:    76 80 237
stack  71:    74 240 75
stack  72:    96 97 247
stack  73:    119 117 255
stack  74:    83 243 86
stack  75:    249 92 93
stack  76:    146 147 278
stack  77:    159 180 182
stack  78:    252 107 108
stack  79:    164 163 299
stack  80:    267 193 194
stack  81:    248 101 100
stack  82:    211 215 291
stack  83:    185 298 184
stack  84:    256 106 104
stack  85:    202 189 208
stack  86:    245 114 98
stack  87:    89 88 241
stack  88:    209 286 212
stack  89:    91 244 90
stack  90:    168 279 166
stack  91:    103 99 269
stack  92:    288 169 170
stack  93:    151 297 155
stack  94:    136 285 139
stack  95:    118 116 253
stack  96:    152 289 150
stack  97:    115 242 113
stack  98:    105 102 250
stack  99:    134 272 135
stack 100:    204 198 262
stack 101:    133 261 130
stack 102:    171 173 270
stack 103:    274 144 143
stack 104:    282 138 137
stack 105:    145 260 140
stack 106:    109 254 110
stack 107:    126 271 124
stack 108:    290 195 199
stack 109:    187 188 158
stack 110:    149 148 280
stack 111:    175 177 268
stack 112:    275 141 142
stack 113:    183 210 181
stack 114:    178 179 225
stack 115:    172 167 284
stack 116:    296 192 186
stack 117:    292 162 160
stack 118:    131 132 276
stack 119:    207 206 263
