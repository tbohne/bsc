solved with: SLP.mip_formulations.BinPackingFormulation
time limit: 600 s
time to solve: 608,48 s (time limit exceeded)
objective value: 26523.0 (not optimal)

stacks (top to bottom):
stack   0:    0 
stack   1:    1 
stack   2:    2 
stack   3:    3 
stack   4:    4 
stack   5:    5 
stack   6:    6 
stack   7:    131 7 
stack   8:    8 
stack   9:    9 11 
stack  10:    
stack  11:    10 
stack  12:    12 
stack  13:    231 155 13 
stack  14:    145 16 
stack  15:    15 197 
stack  16:    14 
stack  17:    17 21 
stack  18:    18 
stack  19:    19 
stack  20:    274 20 
stack  21:    250 
stack  22:    22 24 
stack  23:    23 
stack  24:    25 
stack  25:    251 156 180 
stack  26:    26 
stack  27:    27 142 
stack  28:    152 195 28 
stack  29:    252 127 29 
stack  30:    30 32 31 
stack  31:    73 230 
stack  32:    211 255 
stack  33:    33 249 35 
stack  34:    34 
stack  35:    177 297 288 
stack  36:    36 37 175 
stack  37:    38 
stack  38:    43 
stack  39:    39 258 
stack  40:    40 267 264 
stack  41:    158 174 41 
stack  42:    42 
stack  43:    100 140 
stack  44:    44 204 61 
stack  45:    236 191 45 
stack  46:    282 46 
stack  47:    47 173 207 
stack  48:    48 292 187 
stack  49:    247 153 49 
stack  50:    216 157 50 
stack  51:    164 52 51 
stack  52:    136 198 206 
stack  53:    53 235 56 
stack  54:    90 201 54 
stack  55:    123 57 55 
stack  56:    263 126 149 
stack  57:    161 291 
stack  58:    283 245 58 
stack  59:    59 253 227 
stack  60:    63 60 
stack  61:    171 260 62 
stack  62:    212 213 266 
stack  63:    229 224 64 
stack  64:    246 144 179 
stack  65:    214 65 223 
stack  66:    220 66 208 
stack  67:    196 186 67 
stack  68:    68 167 118 
stack  69:    294 69 203 
stack  70:    185 215 70 
stack  71:    154 71 225 
stack  72:    254 244 72 
stack  73:    239 163 74 
stack  74:    243 209 210 
stack  75:    273 281 75 
stack  76:    78 192 166 
stack  77:    77 87 202 
stack  78:    172 79 226 
stack  79:    193 221 277 
stack  80:    125 132 80 
stack  81:    200 86 81 
stack  82:    82 284 298 
stack  83:    83 248 146 
stack  84:    232 84 272 
stack  85:    238 85 299 
stack  86:    176 109 122 
stack  87:    290 279 181 
stack  88:    135 150 257 
stack  89:    89 141 178 
stack  90:    199 271 270 
stack  91:    205 278 296 
stack  92:    92 188 162 
stack  93:    286 93 190 
stack  94:    120 262 94 
stack  95:    95 160 168 
stack  96:    96 228 256 
stack  97:    280 182 97 
stack  98:    98 276 76 
stack  99:    138 99 88 
stack 100:    134 159 233 
stack 101:    101 237 133 
stack 102:    137 218 265 
stack 103:    147 289 103 
stack 104:    121 295 104 
stack 105:    105 242 106 
stack 106:    189 269 91 
stack 107:    107 165 148 
stack 108:    194 108 275 
stack 109:    102 130 170 
stack 110:    261 110 111 
stack 111:    183 139 169 
stack 112:    112 222 143 
stack 113:    117 151 113 
stack 114:    293 129 219 
stack 115:    241 115 259 
stack 116:    116 124 128 
stack 117:    240 234 268 
stack 118:    114 285 184 
stack 119:    217 287 119 

#####################################################

solved with: SLP.mip_formulations.ThreeIndexFormulation
Problem not solved.

#####################################################

solved with: SLP.constructive_heuristics.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SLP.constructive_heuristics.ThreeCapRecursiveMCMHeuristic
time limit: 600 s
time to solve: 0,26 s
objective value: 35150.0

stacks (top to bottom):
stack   0:    121 9 0 
stack   1:    98 114 115 
stack   2:    2 240 244 
stack   3:    280 282 1 
stack   4:    120 58 60 
stack   5:    283 285 99 
stack   6:    245 241 100 
stack   7:    199 198 93 
stack   8:    102 135 137 
stack   9:    95 212 208 
stack  10:    229 30 27 
stack  11:    68 78 77 
stack  12:    228 281 279 
stack  13:    14 10 186 
stack  14:    150 151 64 
stack  15:    193 286 287 
stack  16:    96 97 91 
stack  17:    147 172 170 
stack  18:    34 107 25 
stack  19:    90 123 122 
stack  20:    196 192 145 
stack  21:    112 201 165 
stack  22:    154 59 61 
stack  23:    246 243 180 
stack  24:    36 37 237 
stack  25:    271 273 155 
stack  26:    183 11 13 
stack  27:    134 131 215 
stack  28:    15 19 254 
stack  29:    231 290 298 
stack  30:    261 224 225 
stack  31:    252 262 259 
stack  32:    43 39 169 
stack  33:    221 214 211 
stack  34:    139 141 253 
stack  35:    138 132 222 
stack  36:    125 127 16 
stack  37:    238 89 88 
stack  38:    126 129 4 
stack  39:    17 18 255 
stack  40:    12 130 133 
stack  41:    171 276 275 
stack  42:    164 116 118 
stack  43:    82 85 166 
stack  44:    83 86 242 
stack  45:    239 53 55 
stack  46:    247 248 258 
stack  47:    152 153 204 
stack  48:    205 218 219 
stack  49:    3 136 140 
stack  50:    263 189 187 
stack  51:    159 185 184 
stack  52:    63 73 71 
stack  53:    236 235 162 
stack  54:    217 46 54 
stack  55:    6 270 269 
stack  56:    176 197 203 
stack  57:    295 289 81 
stack  58:    44 41 233 
stack  59:    157 161 175 
stack  60:    220 223 62 
stack  61:    76 124 128 
stack  62:    216 213 5 
stack  63:    232 110 113 
stack  64:    65 277 284 
stack  65:    40 38 111 
stack  66:    117 158 156 
stack  67:    101 293 292 
stack  68:    109 257 265 
stack  69:    33 35 119 
stack  70:    144 146 70 
stack  71:    177 179 103 
stack  72:    47 21 28 
stack  73:    188 195 49 
stack  74:    84 87 94 
stack  75:    92 178 181 
stack  76:    182 42 45 
stack  77:    79 57 56 
stack  78:    194 191 80 
stack  79:    32 31 190 
stack  80:    22 160 163 
stack  81:    174 149 148 
stack  82:    230 260 268 
stack  83:    278 272 20 
stack  84:    105 200 202 
stack  85:    26 24 234 
stack  86:    274 267 173 
stack  87:    108 75 74 
stack  88:    48 167 168 
stack  89:    297 67 66 
stack  90:    288 291 
stack  91:    23 29 299 
stack  92:    69 142 143 
stack  93:    226 209 210 
stack  94:    251 256 51 
stack  95:    264 8 7 
stack  96:    206 207 
stack  97:    249 250 266 
stack  98:    294 296 72 
stack  99:    50 52 227 
stack 100:    104 106 
stack 101:    
stack 102:    
stack 103:    
stack 104:    
stack 105:    
stack 106:    
stack 107:    
stack 108:    
stack 109:    
stack 110:    
stack 111:    
stack 112:    
stack 113:    
stack 114:    
stack 115:    
stack 116:    
stack 117:    
stack 118:    
stack 119:    

#####################################################

solved with: SLP.constructive_heuristics.ThreeCapHeuristic
time limit: 600 s
time to solve: 0,43 s
objective value: 26347.0

stacks (top to bottom):
stack   0:    
stack   1:    
stack   2:    
stack   3:    9 3 4 
stack   4:    
stack   5:    
stack   6:    
stack   7:    2 8 7 
stack   8:    
stack   9:    
stack  10:    
stack  11:    14 10 1 
stack  12:    
stack  13:    
stack  14:    15 19 16 
stack  15:    
stack  16:    
stack  17:    17 18 5 
stack  18:    
stack  19:    
stack  20:    0 21 28 
stack  21:    12 22 20 
stack  22:    
stack  23:    11 23 29 
stack  24:    
stack  25:    
stack  26:    30 27 24 
stack  27:    6 47 49 
stack  28:    25 46 54 
stack  29:    36 37 31 
stack  30:    26 42 45 
stack  31:    44 41 35 
stack  32:    43 39 13 
stack  33:    33 48 51 
stack  34:    290 298 
stack  35:    240 244 
stack  36:    78 77 38 
stack  37:    32 50 52 
stack  38:    34 201 165 
stack  39:    294 296 
stack  40:    40 57 56 
stack  41:    295 289 
stack  42:    278 272 
stack  43:    297 299 
stack  44:    135 137 110 
stack  45:    276 277 284 
stack  46:    235 257 265 
stack  47:    224 232 233 
stack  48:    105 108 91 
stack  49:    238 239 242 
stack  50:    63 62 55 
stack  51:    53 67 66 
stack  52:    150 151 129 
stack  53:    236 251 256 
stack  54:    116 124 128 
stack  55:    68 64 61 
stack  56:    194 191 180 
stack  57:    58 69 72 
stack  58:    73 71 60 
stack  59:    59 65 70 
stack  60:    212 214 211 
stack  61:    90 101 103 
stack  62:    252 262 259 
stack  63:    82 85 75 
stack  64:    218 219 208 
stack  65:    117 142 143 
stack  66:    160 206 207 
stack  67:    147 152 153 
stack  68:    205 216 213 
stack  69:    114 115 113 
stack  70:    286 287 291 
stack  71:    79 80 74 
stack  72:    261 260 268 
stack  73:    220 249 250 
stack  74:    221 230 234 
stack  75:    76 92 94 
stack  76:    95 93 87 
stack  77:    271 273 215 
stack  78:    245 241 179 
stack  79:    293 292 288 
stack  80:    229 228 155 
stack  81:    83 86 81 
stack  82:    98 112 107 
stack  83:    96 97 88 
stack  84:    102 100 84 
stack  85:    193 186 175 
stack  86:    176 182 190 
stack  87:    134 131 118 
stack  88:    121 120 119 
stack  89:    89 104 106 
stack  90:    172 170 140 
stack  91:    200 202 203 
stack  92:    109 111 99 
stack  93:    280 282 254 
stack  94:    270 269 275 
stack  95:    231 253 223 
stack  96:    130 149 148 
stack  97:    199 198 187 
stack  98:    217 222 225 
stack  99:    183 185 184 
stack 100:    246 243 169 
stack 101:    126 144 146 
stack 102:    171 178 181 
stack 103:    197 226 227 
stack 104:    281 279 255 
stack 105:    154 158 156 
stack 106:    177 209 210 
stack 107:    247 248 204 
stack 108:    138 132 122 
stack 109:    139 141 133 
stack 110:    196 192 145 
stack 111:    283 285 258 
stack 112:    159 167 168 
stack 113:    136 157 161 
stack 114:    123 125 127 
stack 115:    263 264 266 
stack 116:    189 188 195 
stack 117:    274 267 237 
stack 118:    174 173 163 
stack 119:    164 166 162 
