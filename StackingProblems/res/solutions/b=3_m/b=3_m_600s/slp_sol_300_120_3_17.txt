solved with: SP.mip_formulations.BinPackingFormulation
time limit: 600 s
time to solve: 600,28 s (time limit exceeded)
objective value: 26120.0 (not optimal)

stacks (top to bottom):
stack   0:    1 
stack   1:    3 
stack   2:    2 
stack   3:    0 
stack   4:    5 4 
stack   5:    
stack   6:    7 6 
stack   7:    
stack   8:    8 
stack   9:    9 
stack  10:    11 10 
stack  11:    
stack  12:    12 
stack  13:    13 
stack  14:    18 14 
stack  15:    
stack  16:    16 15 
stack  17:    17 
stack  18:    
stack  19:    
stack  20:    20 
stack  21:    19 21 
stack  22:    22 
stack  23:    24 
stack  24:    23 
stack  25:    26 25 
stack  26:    27 
stack  27:    
stack  28:    28 
stack  29:    29 
stack  30:    31 30 283 
stack  31:    33 97 110 
stack  32:    281 35 32 
stack  33:    183 81 34 
stack  34:    109 148 239 
stack  35:    235 205 170 
stack  36:    117 261 36 
stack  37:    37 138 135 
stack  38:    268 38 225 
stack  39:    290 39 57 
stack  40:    248 40 200 
stack  41:    274 41 246 
stack  42:    123 42 186 
stack  43:    245 43 67 
stack  44:    230 179 44 
stack  45:    45 184 73 
stack  46:    95 46 276 
stack  47:    228 128 47 
stack  48:    193 269 48 
stack  49:    260 297 49 
stack  50:    50 279 182 
stack  51:    282 51 232 
stack  52:    125 100 52 
stack  53:    53 54 278 
stack  54:    251 149 291 
stack  55:    56 55 263 
stack  56:    175 144 190 
stack  57:    204 167 284 
stack  58:    58 166 155 
stack  59:    61 59 203 
stack  60:    224 194 60 
stack  61:    286 236 247 
stack  62:    62 295 176 
stack  63:    191 169 63 
stack  64:    136 64 160 
stack  65:    256 118 65 
stack  66:    145 150 66 
stack  67:    126 249 139 
stack  68:    77 68 137 
stack  69:    88 161 69 
stack  70:    70 79 237 
stack  71:    141 124 71 
stack  72:    223 72 120 
stack  73:    74 272 195 
stack  74:    259 211 158 
stack  75:    174 121 75 
stack  76:    76 293 198 
stack  77:    134 241 78 
stack  78:    177 294 116 
stack  79:    289 196 197 
stack  80:    131 80 163 
stack  81:    115 218 189 
stack  82:    83 250 82 
stack  83:    275 243 188 
stack  84:    84 214 254 
stack  85:    85 140 86 
stack  86:    217 227 280 
stack  87:    244 87 226 
stack  88:    185 215 208 
stack  89:    89 156 201 
stack  90:    91 234 90 
stack  91:    178 98 299 
stack  92:    119 233 92 
stack  93:    202 96 93 
stack  94:    292 180 94 
stack  95:    273 265 127 
stack  96:    172 129 258 
stack  97:    187 229 242 
stack  98:    146 142 143 
stack  99:    99 210 253 
stack 100:    219 153 154 
stack 101:    101 102 220 
stack 102:    105 147 262 
stack 103:    103 252 264 
stack 104:    133 168 104 
stack 105:    152 106 181 
stack 106:    171 231 192 
stack 107:    271 132 107 
stack 108:    209 222 108 
stack 109:    164 270 199 
stack 110:    287 157 165 
stack 111:    111 159 130 
stack 112:    112 298 277 
stack 113:    122 206 113 
stack 114:    267 114 212 
stack 115:    266 238 216 
stack 116:    257 213 255 
stack 117:    207 288 221 
stack 118:    151 240 162 
stack 119:    296 173 285 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapRecursiveMCMHeuristic
time limit: 600 s
time to solve: 0,06 s
objective value: 35551.0

stacks (top to bottom):
stack   0:    111 112 240 
stack   1:    235 219 214 
stack   2:    28 207 206 
stack   3:    85 126 124 
stack   4:    228 229 20 
stack   5:    101 100 87 
stack   6:    281 259 258 
stack   7:    245 248 249 
stack   8:    16 275 272 
stack   9:    29 23 17 
stack  10:    123 121 262 
stack  11:    89 88 277 
stack  12:    233 168 166 
stack  13:    175 177 113 
stack  14:    173 192 186 
stack  15:    217 95 94 
stack  16:    115 172 167 
stack  17:    133 282 279 
stack  18:    171 231 236 
stack  19:    145 140 130 
stack  20:    141 142 57 
stack  21:    267 134 135 
stack  22:    1 3 250 
stack  23:    256 230 232 
stack  24:    296 61 43 
stack  25:    58 211 215 
stack  26:    76 80 213 
stack  27:    224 216 299 
stack  28:    37 35 179 
stack  29:    128 129 86 
stack  30:    178 271 269 
stack  31:    136 64 67 
stack  32:    103 99 66 
stack  33:    70 286 285 
stack  34:    83 223 225 
stack  35:    273 276 139 
stack  36:    105 102 189 
stack  37:    122 138 137 
stack  38:    266 265 127 
stack  39:    2 293 120 
stack  40:    125 77 78 
stack  41:    74 164 163 
stack  42:    84 79 59 
stack  43:    56 55 75 
stack  44:    260 288 289 
stack  45:    50 209 212 
stack  46:    193 194 14 
stack  47:    202 13 9 
stack  48:    152 150 261 
stack  49:    62 63 158 
stack  50:    132 42 48 
stack  51:    119 117 90 
stack  52:    11 238 237 
stack  53:    7 151 155 
stack  54:    153 154 176 
stack  55:    159 26 19 
stack  56:    174 68 65 
stack  57:    290 257 255 
stack  58:    204 198 291 
stack  59:    187 295 298 
stack  60:    22 33 36 
stack  61:    31 205 201 
stack  62:    91 96 97 
stack  63:    45 52 34 
stack  64:    227 0 4 
stack  65:    131 53 60 
stack  66:    5 71 69 
stack  67:    297 292 24 
stack  68:    234 156 157 
stack  69:    12 15 143 
stack  70:    242 243 188 
stack  71:    144 191 190 
stack  72:    220 161 165 
stack  73:    274 118 116 
stack  74:    46 41 239 
stack  75:    218 241 247 
stack  76:    146 147 278 
stack  77:    221 8 10 
stack  78:    251 253 30 
stack  79:    185 184 226 
stack  80:    18 21 222 
stack  81:    183 294 6 
stack  82:    252 106 104 
stack  83:    244 246 110 
stack  84:    114 98 32 
stack  85:    51 47 254 
stack  86:    25 39 38 
stack  87:    196 197 181 
stack  88:    81 49 54 
stack  89:    287 284 82 
stack  90:    169 210 208 
stack  91:    109 72 73 
stack  92:    149 148 170 
stack  93:    200 203 
stack  94:    268 107 108 
stack  95:    27 40 44 
stack  96:    92 93 160 
stack  97:    
stack  98:    180 182 
stack  99:    
stack 100:    
stack 101:    280 283 
stack 102:    270 263 264 
stack 103:    
stack 104:    
stack 105:    
stack 106:    
stack 107:    
stack 108:    162 195 199 
stack 109:    
stack 110:    
stack 111:    
stack 112:    
stack 113:    
stack 114:    
stack 115:    
stack 116:    
stack 117:    
stack 118:    
stack 119:    

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 600 s
time to solve: 0,18 s
objective value: 26336.0

stacks (top to bottom):
stack   0:    
stack   1:    
stack   2:    
stack   3:    
stack   4:    7 5 4 
stack   5:    2 293 3 
stack   6:    
stack   7:    
stack   8:    1 8 10 
stack   9:    
stack  10:    
stack  11:    
stack  12:    
stack  13:    12 15 6 
stack  14:    16 17 14 
stack  15:    
stack  16:    
stack  17:    28 20 9 
stack  18:    
stack  19:    
stack  20:    13 18 21 
stack  21:    
stack  22:    
stack  23:    
stack  24:    
stack  25:    22 27 32 
stack  26:    29 23 24 
stack  27:    0 49 54 
stack  28:    26 25 30 
stack  29:    19 71 69 
stack  30:    296 299 
stack  31:    11 42 48 
stack  32:    266 265 
stack  33:    273 276 
stack  34:    33 40 44 
stack  35:    31 39 38 
stack  36:    282 279 
stack  37:    37 35 34 
stack  38:    295 298 
stack  39:    46 41 36 
stack  40:    290 291 
stack  41:    43 64 67 
stack  42:    228 229 198 
stack  43:    251 253 232 
stack  44:    101 100 45 
stack  45:    96 97 94 
stack  46:    248 249 213 
stack  47:    76 80 47 
stack  48:    51 92 93 
stack  49:    187 188 158 
stack  50:    50 107 108 
stack  51:    83 91 90 
stack  52:    89 88 52 
stack  53:    53 162 160 
stack  54:    61 70 66 
stack  55:    56 55 60 
stack  56:    105 102 57 
stack  57:    58 68 65 
stack  58:    202 189 176 
stack  59:    84 79 59 
stack  60:    111 112 62 
stack  61:    85 87 63 
stack  62:    128 129 121 
stack  63:    153 154 78 
stack  64:    171 173 165 
stack  65:    256 252 254 
stack  66:    260 274 278 
stack  67:    74 75 73 
stack  68:    193 194 179 
stack  69:    175 177 142 
stack  70:    294 81 82 
stack  71:    231 268 270 
stack  72:    103 99 72 
stack  73:    77 146 147 
stack  74:    192 263 264 
stack  75:    223 241 247 
stack  76:    267 271 269 
stack  77:    131 132 98 
stack  78:    245 240 225 
stack  79:    134 135 120 
stack  80:    118 116 86 
stack  81:    204 218 220 
stack  82:    95 106 104 
stack  83:    230 244 246 
stack  84:    141 164 163 
stack  85:    114 168 166 
stack  86:    217 227 226 
stack  87:    281 277 250 
stack  88:    191 210 208 
stack  89:    174 185 184 
stack  90:    115 113 110 
stack  91:    275 272 262 
stack  92:    207 206 195 
stack  93:    286 285 216 
stack  94:    122 138 137 
stack  95:    152 150 127 
stack  96:    123 144 143 
stack  97:    119 151 155 
stack  98:    205 242 243 
stack  99:    257 255 258 
stack 100:    125 156 157 
stack 101:    224 238 237 
stack 102:    126 109 124 
stack 103:    234 239 201 
stack 104:    178 180 182 
stack 105:    219 214 190 
stack 106:    159 169 170 
stack 107:    183 200 203 
stack 108:    215 280 283 
stack 109:    235 233 186 
stack 110:    172 167 161 
stack 111:    133 136 139 
stack 112:    211 221 222 
stack 113:    145 140 130 
stack 114:    209 212 199 
stack 115:    288 289 261 
stack 116:    117 149 148 
stack 117:    297 292 236 
stack 118:    196 197 181 
stack 119:    259 287 284 
