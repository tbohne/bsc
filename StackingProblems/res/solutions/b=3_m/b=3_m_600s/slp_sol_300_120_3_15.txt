solved with: SP.mip_formulations.BinPackingFormulation
time limit: 600 s
time to solve: 600,28 s (time limit exceeded)
objective value: 26115.0 (not optimal)

stacks (top to bottom):
stack   0:    2
stack   1:    1 0
stack   2:    4
stack   3:    3
stack   4:    5
stack   5:
stack   6:    7
stack   7:    6
stack   8:    8
stack   9:    9
stack  10:    10
stack  11:    11
stack  12:    12
stack  13:    13
stack  14:    14
stack  15:    15
stack  16:    16
stack  17:    17
stack  18:    18
stack  19:    19
stack  20:    20
stack  21:    22 21
stack  22:
stack  23:    23
stack  24:    26
stack  25:    24
stack  26:    25
stack  27:    28 27
stack  28:    29
stack  29:
stack  30:    221 30 210
stack  31:    168 31 161
stack  32:    290 32 144
stack  33:    194 214 33
stack  34:    34 169 40
stack  35:    80 35 232
stack  36:    36 228 160
stack  37:    37 130 216
stack  38:    38 287 142
stack  39:    43 99 39
stack  40:    280 189 131
stack  41:    118 41 196
stack  42:    208 42 211
stack  43:    97 175 239
stack  44:    202 288 44
stack  45:    225 45 224
stack  46:    227 46 89
stack  47:    167 193 47
stack  48:    49 150 48
stack  49:    121 163 245
stack  50:    200 146 50
stack  51:    248 164 51
stack  52:    282 231 52
stack  53:    53 54 166
stack  54:    272 127 55
stack  55:    205 188 100
stack  56:    297 192 56
stack  57:    249 262 57
stack  58:    82 185 58
stack  59:    59 140 171
stack  60:    124 133 60
stack  61:    62 153 61
stack  62:    242 246 293
stack  63:    63 230 65
stack  64:    172 181 64
stack  65:    120 292 66
stack  66:    69 267 275
stack  67:    158 67 258
stack  68:    68 209 261
stack  69:    238 70 110
stack  70:    72 151 87
stack  71:    195 254 71
stack  72:    234 197 174
stack  73:    263 73 283
stack  74:    179 229 74
stack  75:    75 294 147
stack  76:    76 253 84
stack  77:    77 273 296
stack  78:    78 119 203
stack  79:    276 201 79
stack  80:    115 198 260
stack  81:    81 186 274
stack  82:    256 265 204
stack  83:    83 233 165
stack  84:    183 176 135
stack  85:    111 291 85
stack  86:    251 148 86
stack  87:    284 156 218
stack  88:    88 270 271
stack  89:    298 285 187
stack  90:    237 223 90
stack  91:    91 212 250
stack  92:    92 257 178
stack  93:    107 139 93
stack  94:    94 95 191
stack  95:    117 182 281
stack  96:    220 96 299
stack  97:    277 247 286
stack  98:    125 116 98
stack  99:    222 145 136
stack 100:    106 101 206
stack 101:    289 207 235
stack 102:    129 240 102
stack 103:    215 241 103
stack 104:    213 269 104
stack 105:    105 123 268
stack 106:    137 219 132
stack 107:    264 252 114
stack 108:    108 236 143
stack 109:    278 243 109
stack 110:    266 154 149
stack 111:    177 173 259
stack 112:    190 138 112
stack 113:    155 113 217
stack 114:    295 126 134
stack 115:    157 122 226
stack 116:    199 162 279
stack 117:    141 184 170
stack 118:    128 180 244
stack 119:    159 255 152

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 600 s
time to solve: 444,07 s
objective value: 26115.0

stacks (top to bottom):
stack   0:    2
stack   1:    1 0
stack   2:    4
stack   3:    3
stack   4:    5
stack   5:
stack   6:
stack   7:    7
stack   8:    6 8
stack   9:    9
stack  10:    10
stack  11:    11
stack  12:    12
stack  13:    13
stack  14:    14
stack  15:    15
stack  16:    16
stack  17:    17
stack  18:    18
stack  19:    19
stack  20:    20
stack  21:    21
stack  22:
stack  23:    22 23
stack  24:    26
stack  25:    24
stack  26:    25
stack  27:    28 27
stack  28:    29
stack  29:
stack  30:    30 258 136
stack  31:    31 32 33
stack  32:    190 34 55
stack  33:    77 137 36
stack  34:    289 255 235
stack  35:    257 35 40
stack  36:    282 37 122
stack  37:    199 41 56
stack  38:    38 133 39
stack  39:    43 45 57
stack  40:    148 42 261
stack  41:    126 59 58
stack  42:    194 78 44
stack  43:    106 265 50
stack  44:    273 176 89
stack  45:    129 262 46
stack  46:    53 54 212
stack  47:    249 151 47
stack  48:    49 150 48
stack  49:    94 91 52
stack  50:    276 88 112
stack  51:    297 51 64
stack  52:    117 188 123
stack  53:    195 62 69
stack  54:    155 172 187
stack  55:    284 197 272
stack  56:    111 275 140
stack  57:    120 75 191
stack  58:    198 87 204
stack  59:    72 90 65
stack  60:    182 127 60
stack  61:    63 217 61
stack  62:    251 277 73
stack  63:    201 95 74
stack  64:    68 92 79
stack  65:    82 169 66
stack  66:    174 222 93
stack  67:    254 238 67
stack  68:    213 256 71
stack  69:    109 84 232
stack  70:    70 104 132
stack  71:    248 118 223
stack  72:    81 189 131
stack  73:    215 97 245
stack  74:    231 253 85
stack  75:    295 152 203
stack  76:    76 154 145
stack  77:    266 134 236
stack  78:    80 279 98
stack  79:    292 239 299
stack  80:    244 219 86
stack  81:    220 163 207
stack  82:    290 264 159
stack  83:    83 105 240
stack  84:    183 116 103
stack  85:    193 101 241
stack  86:    121 218 226
stack  87:    181 149 250
stack  88:    278 216 110
stack  89:    214 170 291
stack  90:    153 168 135
stack  91:    269 178 224
stack  92:    115 192 196
stack  93:    294 165 171
stack  94:    280 125 100
stack  95:    99 271 147
stack  96:    263 96 287
stack  97:    157 102 160
stack  98:    202 288 230
stack  99:    141 164 144
stack 100:    234 156 283
stack 101:    209 162 268
stack 102:    225 205 267
stack 103:    270 233 211
stack 104:    242 246 293
stack 105:    237 167 142
stack 106:    175 184 139
stack 107:    107 252 114
stack 108:    124 108 143
stack 109:    113 296 260
stack 110:    221 210 130
stack 111:    138 281 274
stack 112:    227 186 298
stack 113:    208 285 206
stack 114:    158 173 259
stack 115:    179 247 243
stack 116:    200 146 166
stack 117:    229 161 286
stack 118:    128 177 180
stack 119:    119 185 228

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapRecursiveMCMHeuristic
time limit: 600 s
time to solve: 0,08 s
objective value: 35365.0

stacks (top to bottom):
stack   0:    202 200 89
stack   1:    94 158 146
stack   2:    117 155 152
stack   3:    276 280 279
stack   4:    248 137 138
stack   5:    128 131 275
stack   6:    183 180 230
stack   7:    237 234 233
stack   8:    19 3 14
stack   9:    83 251 246
stack  10:    177 173 244
stack  11:    215 182 174
stack  12:    43 42 114
stack  13:    73 163 171
stack  14:    194 195 214
stack  15:    167 20 23
stack  16:    118 123 16
stack  17:    68 227 219
stack  18:    277 278 164
stack  19:    242 239 286
stack  20:    77 75 65
stack  21:    289 290 287
stack  22:    148 144 132
stack  23:    121 264 255
stack  24:    62 153 149
stack  25:    254 253 216
stack  26:    120 119 294
stack  27:    190 185 60
stack  28:    220 263 252
stack  29:    288 285 4
stack  30:    292 157 161
stack  31:    179 184 291
stack  32:    111 249 250
stack  33:    297 1 298
stack  34:    284 283 293
stack  35:    22 18 61
stack  36:    6 78 82
stack  37:    115 168 166
stack  38:    97 96 109
stack  39:    295 197 196
stack  40:    63 2 9
stack  41:    156 218 226
stack  42:    107 108 112
stack  43:    159 207 211
stack  44:    266 129 124
stack  45:    106 172 170
stack  46:    5 259 110
stack  47:    282 24 27
stack  48:    201 231 229
stack  49:    193 192 281
stack  50:    69 66 203
stack  51:    29 113 116
stack  52:    25 262 26
stack  53:    221 81 80
stack  54:    223 296 15
stack  55:    225 34 35
stack  56:    13 12 40
stack  57:    238 240 228
stack  58:    28 53 52
stack  59:    126 222 232
stack  60:    175 169 133
stack  61:    186 181 71
stack  62:    70 67 64
stack  63:    36 213 212
stack  64:    76 79 74
stack  65:    272 59 56
stack  66:    8 31 32
stack  67:    205 87 204
stack  68:    198 54 55
stack  69:    37 39 274
stack  70:    72 105 104
stack  71:    122 247 243
stack  72:    199 189 187
stack  73:    91 85 98
stack  74:    30 11 7
stack  75:    127 134 143
stack  76:    38 41 10
stack  77:    269 257 265
stack  78:    0 299 33
stack  79:    92 154 160
stack  80:    141 125 130
stack  81:    46 47 142
stack  82:    99 88 84
stack  83:    95 45 44
stack  84:    209 210 93
stack  85:    273 17 21
stack  86:    217 256 260
stack  87:    90 86
stack  88:    236 235
stack  89:    162 135 136
stack  90:    208 206 224
stack  91:    188 191 150
stack  92:    151 101 103
stack  93:    139 51 50
stack  94:    267 268 48
stack  95:    270 271 165
stack  96:    176 178
stack  97:    49 241 245
stack  98:    58 57
stack  99:    100 102
stack 100:
stack 101:    145 147
stack 102:
stack 103:
stack 104:
stack 105:    261 258 140
stack 106:
stack 107:
stack 108:
stack 109:
stack 110:
stack 111:
stack 112:
stack 113:
stack 114:
stack 115:
stack 116:
stack 117:
stack 118:
stack 119:

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 600 s
time to solve: 1.04 s
objective value: 26224.0

stacks (top to bottom):
stack   0:
stack   1:    1 0
stack   2:    6 4
stack   3:
stack   4:
stack   5:    2 9
stack   6:    3 14
stack   7:
stack   8:
stack   9:
stack  10:    8 10
stack  11:    11 7
stack  12:
stack  13:    13 12
stack  14:
stack  15:    298 15
stack  16:    19 16
stack  17:
stack  18:    18 21
stack  19:
stack  20:
stack  21:    20 23
stack  22:
stack  23:    22 27
stack  24:
stack  25:
stack  26:    24 31
stack  27:    28 29
stack  28:    17 296
stack  29:    25 26
stack  30:    30 33
stack  31:    299 32
stack  32:    251 34 35
stack  33:    36 213 40
stack  34:    5 259 244
stack  35:    38 41 210
stack  36:    201 294 203
stack  37:    37 239 39
stack  38:    43 42 209
stack  39:    167 278 164
stack  40:    215 49 48
stack  41:    70 223 71
stack  42:    263 45 44
stack  43:    46 47 224
stack  44:    125 253 130
stack  45:    194 195 293
stack  46:    54 212 55
stack  47:    280 186 181
stack  48:    297 53 52
stack  49:    182 289 174
stack  50:    220 51 50
stack  51:    230 90 86
stack  52:    284 126 133
stack  53:    107 108 241
stack  54:    222 59 56
stack  55:    246 58 57
stack  56:    83 73 218
stack  57:    77 75 232
stack  58:    62 214 60
stack  59:    67 216 64
stack  60:    155 207 152
stack  61:    63 217 61
stack  62:    69 66 211
stack  63:    78 231 82
stack  64:    68 227 65
stack  65:    266 141 142
stack  66:    94 229 89
stack  67:    262 151 150
stack  68:    288 176 178
stack  69:    295 197 196
stack  70:    221 72 74
stack  71:    139 268 140
stack  72:    225 76 79
stack  73:    117 252 114
stack  74:    111 257 110
stack  75:    121 255 132
stack  76:    249 113 116
stack  77:    81 80 228
stack  78:    158 146 256
stack  79:    88 236 84
stack  80:    137 261 138
stack  81:    234 92 87
stack  82:    264 134 143
stack  83:    148 267 144
stack  84:    95 233 93
stack  85:    237 91 85
stack  86:    277 175 169
stack  87:    97 96 235
stack  88:    172 170 275
stack  89:    199 198 285
stack  90:    242 100 102
stack  91:    122 127 226
stack  92:    202 200 291
stack  93:    290 163 171
stack  94:    105 260 104
stack  95:    106 109 245
stack  96:    99 240 98
stack  97:    190 185 286
stack  98:    179 282 184
stack  99:    238 101 103
stack 100:    120 119 243
stack 101:    248 118 123
stack 102:    128 131 258
stack 103:    273 135 136
stack 104:    189 279 187
stack 105:    159 156 283
stack 106:    208 206 250
stack 107:    162 165 274
stack 108:    115 247 112
stack 109:    157 270 161
stack 110:    177 173 219
stack 111:    183 180 265
stack 112:    254 129 124
stack 113:    193 192 287
stack 114:    153 269 149
stack 115:    188 191 281
stack 116:    292 205 204
stack 117:    276 168 166
stack 118:    154 271 160
stack 119:    272 145 147
