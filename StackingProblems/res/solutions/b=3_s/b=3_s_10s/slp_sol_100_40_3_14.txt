solved with: SP.mip_formulations.BinPackingFormulation
time limit: 10 s
time to solve: 2.91 s
objective value: 3305.0

stacks (top to bottom):
stack  0:    0 
stack  1:    3 1 
stack  2:    2 
stack  3:    
stack  4:    4 
stack  5:    5 6 
stack  6:    
stack  7:    8 7 
stack  8:    
stack  9:    9 10 
stack 10:    11 21 
stack 11:    71 12 60 
stack 12:    64 90 96 
stack 13:    13 80 29 
stack 14:    15 31 14 
stack 15:    25 89 69 
stack 16:    16 87 47 
stack 17:    17 57 92 
stack 18:    18 32 59 
stack 19:    20 19 63 
stack 20:    26 98 75 
stack 21:    27 56 54 
stack 22:    24 39 22 
stack 23:    30 23 58 
stack 24:    95 35 44 
stack 25:    93 67 65 
stack 26:    28 86 52 
stack 27:    79 38 46 
stack 28:    76 45 62 
stack 29:    42 88 50 
stack 30:    70 91 33 
stack 31:    68 36 85 
stack 32:    73 43 78 
stack 33:    48 53 34 
stack 34:    84 82 72 
stack 35:    74 37 66 
stack 36:    51 41 40 
stack 37:    99 55 97 
stack 38:    49 61 94 
stack 39:    83 81 77 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 10 s
time to solve: 5.08 s
objective value: 3305.0

stacks (top to bottom):
stack  0:    0 
stack  1:    3 1 
stack  2:    2 
stack  3:    
stack  4:    4 
stack  5:    5 6 
stack  6:    
stack  7:    8 7 
stack  8:    
stack  9:    9 10 
stack 10:    11 21 
stack 11:    25 76 12 
stack 12:    68 36 85 
stack 13:    15 31 13 
stack 14:    24 14 63 
stack 15:    20 23 16 
stack 16:    19 55 66 
stack 17:    30 17 43 
stack 18:    18 50 29 
stack 19:    90 22 69 
stack 20:    64 27 40 
stack 21:    74 75 59 
stack 22:    26 73 46 
stack 23:    28 93 94 
stack 24:    87 96 92 
stack 25:    65 62 34 
stack 26:    58 47 77 
stack 27:    67 86 52 
stack 28:    70 81 60 
stack 29:    45 35 72 
stack 30:    98 32 57 
stack 31:    56 39 38 
stack 32:    91 33 37 
stack 33:    88 80 97 
stack 34:    99 79 82 
stack 35:    42 48 89 
stack 36:    51 83 41 
stack 37:    71 84 95 
stack 38:    53 54 44 
stack 39:    49 61 78 

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapRecursiveMCMHeuristic
time limit: 10 s
time to solve: 0.01 s
objective value: 4221.0

stacks (top to bottom):
stack  0:    30 15 13 
stack  1:    9 42 39 
stack  2:    71 76 21 
stack  3:    17 75 78 
stack  4:    28 25 95 
stack  5:    68 36 60 
stack  6:    22 63 66 
stack  7:    51 50 69 
stack  8:    11 14 82 
stack  9:    24 31 23 
stack 10:    20 19 1 
stack 11:    26 18 16 
stack 12:    8 74 73 
stack 13:    0 48 46 
stack 14:    5 3 97 
stack 15:    56 55 80 
stack 16:    10 12 86 
stack 17:    93 41 40 
stack 18:    84 49 52 
stack 19:    98 32 33 
stack 20:    83 53 54 
stack 21:    61 35 34 
stack 22:    90 87 96 
stack 23:    45 44 29 
stack 24:    88 70 72 
stack 25:    27 64 59 
stack 26:    81 6 7 
stack 27:    58 57 77 
stack 28:    47 43 
stack 29:    67 65 62 
stack 30:    79 38 37 
stack 31:    4 2 
stack 32:    91 92 
stack 33:    
stack 34:    99 89 
stack 35:    85 94 
stack 36:    
stack 37:    
stack 38:    
stack 39:    

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 10 s
time to solve: 0.01 s
objective value: 3394.0

stacks (top to bottom):
stack  0:    0 4 2 
stack  1:    5 3 1 
stack  2:    
stack  3:    
stack  4:    
stack  5:    8 97 6 
stack  6:    10 12 7 
stack  7:    
stack  8:    15 18 16 
stack  9:    9 11 14 
stack 10:    61 62 
stack 11:    99 89 
stack 12:    88 81 
stack 13:    84 82 
stack 14:    13 32 33 
stack 15:    17 47 43 
stack 16:    93 86 
stack 17:    30 20 19 
stack 18:    42 39 21 
stack 19:    83 80 
stack 20:    79 77 
stack 21:    41 40 29 
stack 22:    51 22 50 
stack 23:    24 31 23 
stack 24:    28 25 95 
stack 25:    68 69 
stack 26:    27 56 55 
stack 27:    26 38 37 
stack 28:    45 44 60 
stack 29:    67 65 72 
stack 30:    90 87 96 
stack 31:    48 53 54 
stack 32:    74 73 59 
stack 33:    49 52 34 
stack 34:    36 85 94 
stack 35:    64 63 66 
stack 36:    70 91 92 
stack 37:    98 75 78 
stack 38:    71 76 35 
stack 39:    58 57 46 
