solved with: SP.mip_formulations.BinPackingFormulation
time limit: 50 s
time to solve: 3.68 s
objective value: 3303.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    4 
stack  5:    5 
stack  6:    7 
stack  7:    6 
stack  8:    
stack  9:    9 8 
stack 10:    33 83 10 
stack 11:    48 11 71 
stack 12:    80 57 12 
stack 13:    13 43 49 
stack 14:    68 14 79 
stack 15:    15 70 16 
stack 16:    95 17 82 
stack 17:    91 45 22 
stack 18:    18 55 50 
stack 19:    19 89 78 
stack 20:    21 26 20 
stack 21:    60 42 81 
stack 22:    94 63 90 
stack 23:    23 24 75 
stack 24:    35 67 28 
stack 25:    64 25 34 
stack 26:    66 74 29 
stack 27:    40 27 37 
stack 28:    73 69 65 
stack 29:    93 39 31 
stack 30:    62 30 52 
stack 31:    98 77 92 
stack 32:    32 54 38 
stack 33:    51 59 46 
stack 34:    47 86 58 
stack 35:    61 72 53 
stack 36:    36 84 41 
stack 37:    76 99 88 
stack 38:    96 97 87 
stack 39:    85 44 56 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 50 s
time to solve: 3.33 s
objective value: 3303.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    4 
stack  5:    5 
stack  6:    7 
stack  7:    6 
stack  8:    
stack  9:    9 8 
stack 10:    15 13 10 
stack 11:    11 17 71 
stack 12:    85 23 12 
stack 13:    57 53 14 
stack 14:    30 46 16 
stack 15:    54 39 20 
stack 16:    36 42 34 
stack 17:    83 38 37 
stack 18:    18 32 59 
stack 19:    19 82 22 
stack 20:    21 99 68 
stack 21:    51 67 31 
stack 22:    33 27 25 
stack 23:    62 24 26 
stack 24:    61 76 52 
stack 25:    35 65 79 
stack 26:    66 28 88 
stack 27:    64 47 58 
stack 28:    73 74 29 
stack 29:    93 70 44 
stack 30:    95 97 49 
stack 31:    69 72 43 
stack 32:    48 55 56 
stack 33:    94 89 78 
stack 34:    77 63 92 
stack 35:    60 41 81 
stack 36:    91 40 90 
stack 37:    80 84 87 
stack 38:    96 75 50 
stack 39:    98 45 86 

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapRecursiveMCMHeuristic
time limit: 50 s
time to solve: 0.00 s
objective value: 4226.0

stacks (top to bottom):
stack  0:    0 51 52 
stack  1:    21 85 83 
stack  2:    1 35 31 
stack  3:    73 43 72 
stack  4:    95 94 17 
stack  5:    80 57 45 
stack  6:    48 64 63 
stack  7:    5 76 79 
stack  8:    91 86 22 
stack  9:    36 84 77 
stack 10:    7 18 16 
stack 11:    60 19 20 
stack 12:    11 3 71 
stack 13:    23 61 59 
stack 14:    62 65 49 
stack 15:    13 15 14 
stack 16:    98 2 89 
stack 17:    69 70 55 
stack 18:    40 38 37 
stack 19:    47 42 41 
stack 20:    54 39 46 
stack 21:    92 90 58 
stack 22:    93 32 29 
stack 23:    66 9 8 
stack 24:    33 6 10 
stack 25:    74 99 4 
stack 26:    34 82 81 
stack 27:    27 25 75 
stack 28:    96 97 12 
stack 29:    44 53 56 
stack 30:    30 28 50 
stack 31:    24 26 68 
stack 32:    87 88 
stack 33:    67 78 
stack 34:    
stack 35:    
stack 36:    
stack 37:    
stack 38:    
stack 39:    

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 50 s
time to solve: 0.01 s
objective value: 3424.0

stacks (top to bottom):
stack  0:    
stack  1:    
stack  2:    0 99 4 
stack  3:    
stack  4:    1 7 5 
stack  5:    98 11 3 
stack  6:    
stack  7:    
stack  8:    27 25 2 
stack  9:    32 29 8 
stack 10:    9 24 26 
stack 11:    13 30 28 
stack 12:    15 14 10 
stack 13:    12 82 81 
stack 14:    17 92 90 
stack 15:    62 65 6 
stack 16:    39 46 16 
stack 17:    69 70 
stack 18:    18 53 56 
stack 19:    74 75 
stack 20:    21 19 20 
stack 21:    33 34 22 
stack 22:    84 77 
stack 23:    23 44 50 
stack 24:    91 86 
stack 25:    76 79 
stack 26:    47 87 88 
stack 27:    48 57 45 
stack 28:    35 31 52 
stack 29:    60 66 68 
stack 30:    64 63 58 
stack 31:    36 42 41 
stack 32:    40 38 37 
stack 33:    73 43 72 
stack 34:    80 61 59 
stack 35:    96 97 89 
stack 36:    51 67 78 
stack 37:    95 94 71 
stack 38:    93 54 55 
stack 39:    85 83 49 
