solved with: SP.mip_formulations.BinPackingFormulation
time limit: 10 s
time to solve: 2.83 s
objective value: 3301.0

stacks (top to bottom):
stack  0:    0
stack  1:    1
stack  2:    2
stack  3:    3
stack  4:    4
stack  5:    5
stack  6:    6
stack  7:
stack  8:    7 8
stack  9:    9
stack 10:    94 74 10
stack 11:    11 56 76
stack 12:    12 30 92
stack 13:    13 69 46
stack 14:    14 33 23
stack 15:    42 15 37
stack 16:    82 31 16
stack 17:    27 17 34
stack 18:    91 78 18
stack 19:    35 95 19
stack 20:    20 48 63
stack 21:    21 99 85
stack 22:    81 38 22
stack 23:    24 88 40
stack 24:    62 36 64
stack 25:    25 96 80
stack 26:    75 26 98
stack 27:    47 45 53
stack 28:    28 57 87
stack 29:    59 49 29
stack 30:    97 39 60
stack 31:    32 84 55
stack 32:    44 66 65
stack 33:    50 73 54
stack 34:    58 77 90
stack 35:    72 71 43
stack 36:    51 93 89
stack 37:    41 83 79
stack 38:    68 70 67
stack 39:    86 52 61

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 10 s
time to solve: 10.01 s (time limit exceeded)
objective value: 3464.0 (not optimal)

stacks (top to bottom):
stack  0:    0
stack  1:    1
stack  2:    79
stack  3:    4
stack  4:    2 8
stack  5:    93 9
stack  6:    6 5 10
stack  7:    54
stack  8:    7 84
stack  9:    94 46
stack 10:    13 57
stack 11:    11 16 17
stack 12:    12 70
stack 13:    14 19 40
stack 14:    47 95 53
stack 15:    82 15 22
stack 16:    20 18 34
stack 17:    75 27 43
stack 18:    21 76 92
stack 19:    91 63
stack 20:    68 49
stack 21:    35 72 73
stack 22:    58 96 67
stack 23:    62 23 80
stack 24:    51 32 99
stack 25:    25 30 52
stack 26:    97 26 98
stack 27:    24 28 60
stack 28:    59 85 29
stack 29:    86 48 3
stack 30:    81 31 38
stack 31:    39 90 89
stack 32:    44 74 65
stack 33:    33 83 78
stack 34:    41 77 55
stack 35:    66 36 88
stack 36:    69 37 61
stack 37:    45 87
stack 38:    56 42
stack 39:    50 71 64

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapRecursiveMCMHeuristic
time limit: 10 s
time to solve: 0.00 s
objective value: 4289.0

stacks (top to bottom):
stack  0:    14 12 15
stack  1:    45 16 17
stack  2:    41 24 21
stack  3:    13 50 53
stack  4:    33 32 9
stack  5:    44 52 84
stack  6:    86 66 64
stack  7:    83 79 49
stack  8:    75 62 63
stack  9:    47 72 71
stack 10:    35 31 46
stack 11:    11 69 67
stack 12:    51 28 99
stack 13:    2 3 34
stack 14:    94 96 70
stack 15:    82 7 6
stack 16:    25 58 61
stack 17:    95 38 43
stack 18:    81 19 22
stack 19:    57 59 26
stack 20:    56 60 87
stack 21:    73 23 29
stack 22:    97 98
stack 23:    27 30 0
stack 24:    42 48 80
stack 25:    1 68 65
stack 26:    91 78 76
stack 27:    4 5 18
stack 28:    88 8 10
stack 29:    36 37 92
stack 30:    77 74 90
stack 31:
stack 32:    39 40
stack 33:
stack 34:    93 85 89
stack 35:
stack 36:    20 54 55
stack 37:
stack 38:
stack 39:

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 10 s
time to solve: 0.07 s
objective value: 3322.0

stacks (top to bottom):
stack  0:    1 0
stack  1:
stack  2:    2 3
stack  3:
stack  4:    7 6
stack  5:    4 5
stack  6:
stack  7:    11 78 9
stack  8:    8 10
stack  9:
stack 10:    13 15
stack 11:    20 18
stack 12:    14 12 79
stack 13:    16 17
stack 14:    58 96 61
stack 15:    75 27 30
stack 16:    36 74 37
stack 17:    28 99 76
stack 18:    83 19 22
stack 19:    25 77 26
stack 20:    42 48 80
stack 21:    24 21 70
stack 22:    47 45 87
stack 23:    72 23 29
stack 24:    35 73 31
stack 25:    81 38 43
stack 26:    82 39 40
stack 27:    51 91 49
stack 28:    56 86 60
stack 29:    62 63 92
stack 30:    57 59 93
stack 31:    33 32 85
stack 32:    69 97 67
stack 33:    54 90 55
stack 34:    95 71 34
stack 35:    94 66 64
stack 36:    68 98 65
stack 37:    50 53 89
stack 38:    41 88 46
stack 39:    44 52 84
