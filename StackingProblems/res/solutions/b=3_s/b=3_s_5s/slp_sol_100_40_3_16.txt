solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 2.16 s
objective value: 3302.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 3 
stack  3:    
stack  4:    4 
stack  5:    5 
stack  6:    
stack  7:    6 7 
stack  8:    8 
stack  9:    9 
stack 10:    10 70 49 
stack 11:    11 66 53 
stack 12:    39 12 31 
stack 13:    24 82 13 
stack 14:    75 14 15 
stack 15:    86 55 85 
stack 16:    52 51 16 
stack 17:    17 77 42 
stack 18:    18 69 64 
stack 19:    19 59 43 
stack 20:    44 61 20 
stack 21:    21 96 84 
stack 22:    95 22 47 
stack 23:    79 23 58 
stack 24:    89 92 97 
stack 25:    30 90 25 
stack 26:    26 28 54 
stack 27:    78 35 27 
stack 28:    36 38 74 
stack 29:    71 83 29 
stack 30:    76 32 45 
stack 31:    33 65 62 
stack 32:    87 72 60 
stack 33:    40 80 34 
stack 34:    91 57 73 
stack 35:    63 81 67 
stack 36:    68 99 94 
stack 37:    37 48 46 
stack 38:    93 88 56 
stack 39:    98 50 41 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 3.79 s
objective value: 3302.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 3 
stack  3:    
stack  4:    4 
stack  5:    5 
stack  6:    
stack  7:    6 7 
stack  8:    8 
stack  9:    9 
stack 10:    10 90 84 
stack 11:    91 57 11 
stack 12:    14 38 12 
stack 13:    24 27 13 
stack 14:    21 85 15 
stack 15:    17 35 16 
stack 16:    22 20 31 
stack 17:    18 54 97 
stack 18:    26 92 46 
stack 19:    19 65 62 
stack 20:    55 48 25 
stack 21:    32 50 43 
stack 22:    36 34 49 
stack 23:    23 72 29 
stack 24:    76 47 67 
stack 25:    78 41 58 
stack 26:    93 89 88 
stack 27:    37 28 99 
stack 28:    39 98 94 
stack 29:    59 66 64 
stack 30:    30 63 61 
stack 31:    33 80 60 
stack 32:    71 87 42 
stack 33:    79 82 56 
stack 34:    75 83 81 
stack 35:    86 52 73 
stack 36:    44 95 53 
stack 37:    51 69 74 
stack 38:    70 40 45 
stack 39:    68 77 96 

#####################################################

solved with: SP.constructive_heuristics.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.ThreeCapRecursiveMCMHeuristic
time limit: 5 s
time to solve: 0.00 s
objective value: 4211.0

stacks (top to bottom):
stack  0:    33 36 65 
stack  1:    10 26 25 
stack  2:    68 4 99 
stack  3:    87 95 0 
stack  4:    17 16 73 
stack  5:    86 88 92 
stack  6:    93 98 94 
stack  7:    79 78 12 
stack  8:    71 44 45 
stack  9:    75 21 20 
stack 10:    11 52 50 
stack 11:    2 57 56 
stack 12:    91 89 74 
stack 13:    8 9 60 
stack 14:    14 15 13 
stack 15:    70 30 34 
stack 16:    22 64 62 
stack 17:    81 61 67 
stack 18:    83 47 53 
stack 19:    18 19 72 
stack 20:    76 77 29 
stack 21:    66 69 
stack 22:    37 28 54 
stack 23:    55 6 3 
stack 24:    63 80 84 
stack 25:    40 59 58 
stack 26:    39 32 35 
stack 27:    23 24 41 
stack 28:    5 51 49 
stack 29:    
stack 30:    38 43 42 
stack 31:    27 48 46 
stack 32:    85 82 7 
stack 33:    1 96 31 
stack 34:    
stack 35:    90 97 
stack 36:    
stack 37:    
stack 38:    
stack 39:    

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 5 s
time to solve: 0.01 s
objective value: 3375.0

stacks (top to bottom):
stack  0:    
stack  1:    2 1 96 
stack  2:    6 3 0 
stack  3:    
stack  4:    4 5 7 
stack  5:    
stack  6:    
stack  7:    14 15 9 
stack  8:    
stack  9:    
stack 10:    23 24 13 
stack 11:    11 43 42 
stack 12:    90 97 
stack 13:    8 27 31 
stack 14:    85 82 
stack 15:    17 22 29 
stack 16:    33 36 12 
stack 17:    32 35 16 
stack 18:    10 18 19 
stack 19:    75 73 74 
stack 20:    21 40 38 
stack 21:    26 48 46 
stack 22:    30 34 20 
stack 23:    63 61 67 
stack 24:    70 80 84 
stack 25:    68 65 60 
stack 26:    39 41 25 
stack 27:    37 28 99 
stack 28:    86 88 54 
stack 29:    55 59 58 
stack 30:    44 47 53 
stack 31:    66 69 56 
stack 32:    91 89 92 
stack 33:    87 95 72 
stack 34:    79 78 50 
stack 35:    45 64 62 
stack 36:    71 83 81 
stack 37:    52 51 49 
stack 38:    93 98 94 
stack 39:    57 76 77 
