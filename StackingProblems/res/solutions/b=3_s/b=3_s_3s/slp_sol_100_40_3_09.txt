solved with: SP.mip_formulations.BinPackingFormulation
time limit: 3 s
time to solve: 2.47 s
objective value: 3304.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    3 2 
stack  3:    
stack  4:    4 
stack  5:    5 
stack  6:    6 
stack  7:    7 
stack  8:    11 
stack  9:    9 8 
stack 10:    10 61 
stack 11:    76 13 85 
stack 12:    63 12 92 
stack 13:    15 14 81 
stack 14:    70 68 56 
stack 15:    16 59 64 
stack 16:    36 27 84 
stack 17:    17 39 86 
stack 18:    34 79 18 
stack 19:    65 23 19 
stack 20:    21 20 25 
stack 21:    77 90 75 
stack 22:    22 83 48 
stack 23:    26 24 66 
stack 24:    80 51 47 
stack 25:    58 49 72 
stack 26:    40 71 69 
stack 27:    96 95 89 
stack 28:    28 42 46 
stack 29:    29 87 37 
stack 30:    60 30 94 
stack 31:    31 67 45 
stack 32:    32 88 99 
stack 33:    55 35 33 
stack 34:    57 93 44 
stack 35:    91 82 73 
stack 36:    41 97 54 
stack 37:    98 38 78 
stack 38:    62 50 53 
stack 39:    43 52 74 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 3 s
time to solve: 3.02 s (time limit exceeded)
objective value: 3591.0 (not optimal)

stacks (top to bottom):
stack  0:    0 87 66 
stack  1:    
stack  2:    3 27 
stack  3:    8 
stack  4:    47 4 
stack  5:    5 13 6 
stack  6:    32 38 78 
stack  7:    85 9 92 
stack  8:    14 
stack  9:    95 39 
stack 10:    11 
stack 11:    12 
stack 12:    10 31 30 
stack 13:    19 
stack 14:    77 33 
stack 15:    82 25 
stack 16:    15 41 97 
stack 17:    16 22 91 
stack 18:    17 96 42 
stack 19:    43 44 
stack 20:    20 46 7 
stack 21:    49 18 
stack 22:    24 52 48 
stack 23:    21 88 99 
stack 24:    68 72 53 
stack 25:    50 56 2 
stack 26:    23 71 60 
stack 27:    40 74 61 
stack 28:    80 51 54 
stack 29:    59 93 67 
stack 30:    57 90 69 
stack 31:    76 55 1 
stack 32:    29 89 81 
stack 33:    58 83 37 
stack 34:    34 98 94 
stack 35:    36 28 75 
stack 36:    70 65 84 
stack 37:    63 26 35 
stack 38:    64 73 45 
stack 39:    62 79 86 

#####################################################

solved with: SP.constructive_heuristics.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.ThreeCapRecursiveMCMHeuristic
time limit: 3 s
time to solve: 0.00 s
objective value: 4225.0

stacks (top to bottom):
stack  0:    20 55 56 
stack  1:    5 3 73 
stack  2:    21 15 14 
stack  3:    16 22 23 
stack  4:    12 82 81 
stack  5:    32 38 47 
stack  6:    43 13 19 
stack  7:    63 64 37 
stack  8:    57 52 74 
stack  9:    62 79 84 
stack 10:    34 58 61 
stack 11:    76 70 71 
stack 12:    26 27 66 
stack 13:    36 17 18 
stack 14:    80 28 30 
stack 15:    40 10 9 
stack 16:    29 24 25 
stack 17:    31 8 6 
stack 18:    68 41 39 
stack 19:    59 60 69 
stack 20:    1 35 33 
stack 21:    49 50 2 
stack 22:    77 11 7 
stack 23:    95 98 99 
stack 24:    65 67 94 
stack 25:    72 88 89 
stack 26:    85 93 92 
stack 27:    51 53 78 
stack 28:    96 97 87 
stack 29:    0 4 
stack 30:    91 90 75 
stack 31:    42 46 54 
stack 32:    44 48 45 
stack 33:    
stack 34:    83 86 
stack 35:    
stack 36:    
stack 37:    
stack 38:    
stack 39:    

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 3 s
time to solve: 0.01 s
objective value: 3357.0

stacks (top to bottom):
stack  0:    
stack  1:    
stack  2:    5 3 2 
stack  3:    
stack  4:    15 0 4 
stack  5:    
stack  6:    1 11 7 
stack  7:    16 12 8 
stack  8:    
stack  9:    79 84 
stack 10:    10 9 6 
stack 11:    96 97 
stack 12:    14 38 47 
stack 13:    93 92 
stack 14:    13 42 45 
stack 15:    17 35 33 
stack 16:    91 90 
stack 17:    98 99 
stack 18:    34 32 18 
stack 19:    21 20 19 
stack 20:    80 74 94 
stack 21:    23 44 48 
stack 22:    22 24 25 
stack 23:    63 64 27 
stack 24:    85 82 81 
stack 25:    59 60 61 
stack 26:    26 29 31 
stack 27:    28 41 39 
stack 28:    57 65 67 
stack 29:    49 50 37 
stack 30:    43 40 30 
stack 31:    36 46 54 
stack 32:    95 88 89 
stack 33:    58 62 66 
stack 34:    51 53 56 
stack 35:    77 78 87 
stack 36:    55 83 86 
stack 37:    76 73 69 
stack 38:    70 71 52 
stack 39:    68 72 75 
