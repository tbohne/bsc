solved with: BinPacking Formulation
time to solve: 300.22 s (time limit exceeded)
objective value: 452.0 (not optimal)

stacks (top to bottom):
stack   0:    85 22 101 
stack   1:    287 43 61 
stack   2:    228 149 
stack   3:    60 164 63 
stack   4:    150 281 
stack   5:    187 51 122 
stack   6:    13 268 104 
stack   7:    15 
stack   8:    126 11 50 
stack   9:    27 9 259 
stack  10:    202 129 296 
stack  11:    19 39 
stack  12:    88 123 145 
stack  13:    81 177 18 
stack  14:    25 
stack  15:    160 152 105 
stack  16:    42 146 20 
stack  17:    179 255 277 
stack  18:    293 135 111 
stack  19:    12 
stack  20:    72 36 
stack  21:    176 37 
stack  22:    40 76 
stack  23:    91 33 264 
stack  24:    106 261 
stack  25:    30 270 280 
stack  26:    289 78 113 
stack  27:    56 236 68 
stack  28:    291 21 254 
stack  29:    165 53 
stack  30:    55 65 84 
stack  31:    31 189 248 
stack  32:    57 
stack  33:    59 159 
stack  34:    52 292 
stack  35:    215 74 69 
stack  36:    79 231 
stack  37:    128 
stack  38:    185 28 82 
stack  39:    155 93 67 
stack  40:    86 133 201 
stack  41:    87 
stack  42:    167 89 
stack  43:    227 90 
stack  44:    64 120 125 
stack  45:    58 115 98 
stack  46:    251 95 118 
stack  47:    4 96 163 
stack  48:    75 
stack  49:    103 258 295 
stack  50:    144 299 288 
stack  51:    23 197 127 
stack  52:    108 41 
stack  53:    207 121 170 
stack  54:    194 114 161 
stack  55:    119 
stack  56:    153 
stack  57:    198 34 140 
stack  58:    156 213 141 
stack  59:    97 32 71 
stack  60:    139 148 131 
stack  61:    92 286 94 
stack  62:    35 
stack  63:    137 5 285 
stack  64:    142 169 157 
stack  65:    151 45 100 
stack  66:    256 147 200 
stack  67:    49 77 190 
stack  68:    46 186 181 
stack  69:    8 188 192 
stack  70:    47 134 235 
stack  71:    26 171 
stack  72:    263 216 276 
stack  73:    193 172 180 
stack  74:    168 206 132 
stack  75:    178 203 184 
stack  76:    191 214 210 
stack  77:    182 196 219 
stack  78:    136 221 183 
stack  79:    48 173 224 
stack  80:    212 62 218 
stack  81:    195 
stack  82:    253 211 220 
stack  83:    217 226 66 
stack  84:    99 199 112 
stack  85:    1 154 234 
stack  86:    208 117 229 
stack  87:    209 
stack  88:    44 265 290 
stack  89:    262 222 
stack  90:    225 260 223 
stack  91:    237 247 242 
stack  92:    230 
stack  93:    240 110 232 
stack  94:    233 
stack  95:    243 116 252 
stack  96:    158 246 274 
stack  97:    271 294 54 
stack  98:    143 272 239 
stack  99:    241 
stack 100:    175 138 
stack 101:    244 
stack 102:    245 
stack 103:    284 273 249 
stack 104:    250 
stack 105:    278 162 16 
stack 106:    257 
stack 107:    298 279 269 
stack 108:    266 
stack 109:    283 70 267 
stack 110:    282 297 7 
stack 111:    10 3 275 
stack 112:    102 166 24 
stack 113:    80 109 205 
stack 114:    83 17 
stack 115:    73 204 6 
stack 116:    107 
stack 117:    130 2 38 
stack 118:    14 29 0 
stack 119:    174 124 238 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.42 s (time limit exceeded)
objective value: 1147.0 (not optimal)

stacks (top to bottom):
stack   0:    44 257 
stack   1:    3 196 11 
stack   2:    201 50 
stack   3:    144 9 235 
stack   4:    198 80 18 
stack   5:    262 164 190 
stack   6:    15 
stack   7:    165 53 
stack   8:    51 213 267 
stack   9:    86 133 
stack  10:    283 260 62 
stack  11:    202 117 280 
stack  12:    179 265 111 
stack  13:    294 101 170 
stack  14:    73 131 
stack  15:    203 5 248 
stack  16:    296 226 63 
stack  17:    81 71 61 
stack  18:    174 29 288 
stack  19:    25 
stack  20:    228 59 
stack  21:    291 21 74 
stack  22:    286 70 141 
stack  23:    284 215 105 
stack  24:    233 
stack  25:    282 129 239 
stack  26:    143 57 
stack  27:    23 43 218 
stack  28:    137 162 205 
stack  29:    178 2 270 
stack  30:    108 
stack  31:    208 285 211 
stack  32:    185 79 231 
stack  33:    72 36 
stack  34:    31 289 222 
stack  35:    92 155 145 
stack  36:    99 69 
stack  37:    136 199 
stack  38:    47 206 234 
stack  39:    230 
stack  40:    49 278 295 
stack  41:    12 75 
stack  42:    156 279 180 
stack  43:    251 95 118 
stack  44:    197 112 
stack  45:    187 116 232 
stack  46:    154 255 264 
stack  47:    42 146 20 
stack  48:    140 135 100 
stack  49:    64 166 125 
stack  50:    160 259 177 
stack  51:    119 
stack  52:    298 45 157 
stack  53:    240 297 181 
stack  54:    176 96 163 
stack  55:    266 82 
stack  56:    142 249 
stack  57:    151 139 120 
stack  58:    250 
stack  59:    35 
stack  60:    287 173 66 
stack  61:    26 159 171 
stack  62:    13 268 104 
stack  63:    30 277 274 
stack  64:    10 152 41 
stack  65:    263 78 148 
stack  66:    193 4 37 
stack  67:    40 76 
stack  68:    153 
stack  69:    115 204 68 
stack  70:    168 252 223 
stack  71:    87 
stack  72:    216 65 94 
stack  73:    83 17 
stack  74:    225 109 242 
stack  75:    19 39 
stack  76:    194 121 38 
stack  77:    102 114 0 
stack  78:    271 123 113 
stack  79:    56 186 273 
stack  80:    90 
stack  81:    241 98 
stack  82:    293 189 290 
stack  83:    237 122 54 
stack  84:    14 214 220 
stack  85:    107 
stack  86:    60 55 219 
stack  87:    85 93 161 
stack  88:    138 
stack  89:    195 
stack  90:    245 183 
stack  91:    212 247 269 
stack  92:    110 124 84 
stack  93:    48 272 210 
stack  94:    91 134 238 
stack  95:    1 276 
stack  96:    299 224 7 
stack  97:    88 77 258 
stack  98:    158 246 33 
stack  99:    253 172 22 
stack 100:    217 97 182 
stack 101:    8 6 
stack 102:    175 32 192 
stack 103:    128 
stack 104:    149 
stack 105:    221 34 132 
stack 106:    150 281 
stack 107:    46 191 184 
stack 108:    243 58 275 
stack 109:    130 188 236 
stack 110:    27 24 
stack 111:    256 147 200 
stack 112:    106 261 
stack 113:    103 167 89 
stack 114:    52 254 292 
stack 115:    207 28 229 
stack 116:    126 127 67 
stack 117:    244 
stack 118:    227 169 16 
stack 119:    209 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
