solved with: BinPacking Formulation
time to solve: 300.42 s (time limit exceeded)
objective value: 209.0 (not optimal)

stacks (top to bottom):
stack   0:    253 265 
stack   1:    272 75 291 
stack   2:    4 146 
stack   3:    70 255 129 
stack   4:    239 225 62 
stack   5:    23 
stack   6:    53 
stack   7:    271 31 113 
stack   8:    16 56 19 
stack   9:    3 139 28 
stack  10:    115 18 98 
stack  11:    83 100 215 
stack  12:    266 180 200 
stack  13:    43 68 51 
stack  14:    26 34 
stack  15:    5 24 27 
stack  16:    252 178 
stack  17:    263 198 116 
stack  18:    97 
stack  19:    206 17 278 
stack  20:    224 226 194 
stack  21:    150 298 44 
stack  22:    107 229 61 
stack  23:    104 231 77 
stack  24:    161 90 249 
stack  25:    103 152 157 
stack  26:    41 132 1 
stack  27:    40 164 166 
stack  28:    93 94 54 
stack  29:    154 55 242 
stack  30:    12 89 142 
stack  31:    184 
stack  32:    270 95 167 
stack  33:    160 
stack  34:    118 209 102 
stack  35:    71 130 119 
stack  36:    72 267 
stack  37:    276 
stack  38:    183 88 74 
stack  39:    2 106 76 
stack  40:    251 222 73 
stack  41:    50 199 147 
stack  42:    38 220 149 
stack  43:    13 
stack  44:    96 245 101 
stack  45:    174 237 87 
stack  46:    144 65 277 
stack  47:    211 185 8 
stack  48:    57 67 125 
stack  49:    108 30 246 
stack  50:    140 117 46 
stack  51:    137 145 141 
stack  52:    35 122 48 
stack  53:    128 10 9 
stack  54:    197 25 176 
stack  55:    126 
stack  56:    133 171 233 
stack  57:    203 235 202 
stack  58:    47 
stack  59:    14 
stack  60:    163 181 293 
stack  61:    29 121 131 
stack  62:    148 
stack  63:    175 256 195 
stack  64:    151 165 
stack  65:    111 
stack  66:    223 15 182 
stack  67:    219 281 159 
stack  68:    64 177 39 
stack  69:    120 187 250 
stack  70:    172 66 
stack  71:    91 296 
stack  72:    22 189 33 
stack  73:    112 169 257 
stack  74:    274 
stack  75:    37 
stack  76:    79 
stack  77:    186 
stack  78:    290 0 6 
stack  79:    193 297 
stack  80:    78 192 234 
stack  81:    208 
stack  82:    105 218 254 
stack  83:    213 204 205 
stack  84:    190 207 230 
stack  85:    45 
stack  86:    114 236 42 
stack  87:    212 217 49 
stack  88:    143 262 216 
stack  89:    170 214 
stack  90:    155 295 258 
stack  91:    123 173 
stack  92:    240 260 285 
stack  93:    227 241 
stack  94:    158 248 228 
stack  95:    36 
stack  96:    11 
stack  97:    21 156 269 
stack  98:    243 238 
stack  99:    80 247 63 
stack 100:    138 
stack 101:    124 232 52 
stack 102:    99 188 244 
stack 103:    289 261 136 
stack 104:    268 282 84 
stack 105:    110 279 86 
stack 106:    259 82 
stack 107:    264 287 191 
stack 108:    168 196 153 
stack 109:    135 60 69 
stack 110:    20 58 280 
stack 111:    210 273 221 
stack 112:    179 201 81 
stack 113:    7 275 
stack 114:    127 134 32 
stack 115:    109 286 162 
stack 116:    92 294 59 
stack 117:    283 292 288 
stack 118:    299 284 
stack 119:    85 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.34 s (time limit exceeded)
objective value: 537.0 (not optimal)

stacks (top to bottom):
stack   0:    268 277 265 
stack   1:    174 16 56 
stack   2:    211 95 61 
stack   3:    100 129 46 
stack   4:    169 10 195 
stack   5:    35 185 285 
stack   6:    43 244 
stack   7:    235 31 215 
stack   8:    53 23 
stack   9:    99 295 149 
stack  10:    275 
stack  11:    260 15 84 
stack  12:    193 157 
stack  13:    78 221 
stack  14:    103 236 178 
stack  15:    11 
stack  16:    255 232 113 
stack  17:    126 
stack  18:    213 181 44 
stack  19:    175 204 77 
stack  20:    252 
stack  21:    123 20 234 
stack  22:    94 188 293 
stack  23:    139 168 6 
stack  24:    3 245 136 
stack  25:    160 
stack  26:    41 90 142 
stack  27:    206 40 76 
stack  28:    209 225 28 
stack  29:    24 137 167 
stack  30:    85 
stack  31:    251 208 
stack  32:    64 222 49 
stack  33:    226 191 297 
stack  34:    200 106 9 
stack  35:    25 281 19 
stack  36:    128 266 66 
stack  37:    47 
stack  38:    96 67 125 
stack  39:    184 
stack  40:    135 150 291 
stack  41:    229 280 147 
stack  42:    161 212 
stack  43:    198 17 62 
stack  44:    283 118 119 
stack  45:    79 
stack  46:    239 282 30 
stack  47:    279 112 258 
stack  48:    57 50 39 
stack  49:    29 107 73 
stack  50:    197 108 269 
stack  51:    155 55 242 
stack  52:    201 190 159 
stack  53:    223 18 98 
stack  54:    105 132 194 
stack  55:    256 145 63 
stack  56:    180 247 74 
stack  57:    91 296 
stack  58:    192 131 176 
stack  59:    290 173 
stack  60:    163 179 134 
stack  61:    120 0 116 
stack  62:    111 
stack  63:    264 65 156 
stack  64:    210 287 33 
stack  65:    243 238 
stack  66:    172 92 81 
stack  67:    60 262 230 
stack  68:    21 177 166 
stack  69:    187 203 8 
stack  70:    13 
stack  71:    7 196 162 
stack  72:    104 22 59 
stack  73:    183 88 153 
stack  74:    289 152 122 
stack  75:    253 32 
stack  76:    276 
stack  77:    270 154 219 
stack  78:    4 146 
stack  79:    109 171 52 
stack  80:    273 205 
stack  81:    110 228 
stack  82:    151 
stack  83:    148 
stack  84:    89 218 75 
stack  85:    26 227 241 
stack  86:    189 58 83 
stack  87:    272 217 257 
stack  88:    158 248 48 
stack  89:    224 284 
stack  90:    14 
stack  91:    70 202 182 
stack  92:    220 5 250 
stack  93:    259 36 82 
stack  94:    114 199 102 
stack  95:    37 
stack  96:    2 127 278 
stack  97:    186 34 
stack  98:    263 143 69 
stack  99:    249 12 164 
stack 100:    45 
stack 101:    237 87 
stack 102:    68 292 101 
stack 103:    80 240 51 
stack 104:    299 294 254 
stack 105:    144 54 
stack 106:    274 
stack 107:    170 214 
stack 108:    115 261 27 
stack 109:    286 133 288 
stack 110:    124 86 216 
stack 111:    38 165 
stack 112:    231 117 42 
stack 113:    140 271 1 
stack 114:    138 
stack 115:    93 207 233 
stack 116:    97 
stack 117:    298 121 141 
stack 118:    72 267 
stack 119:    71 130 246 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
