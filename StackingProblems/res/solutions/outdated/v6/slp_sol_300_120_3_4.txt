solved with: BinPacking Formulation
time to solve: 300.49 s (time limit exceeded)
objective value: 72.0 (not optimal)

stacks (top to bottom):
stack   0:    261 273 71 
stack   1:    35 224 278 
stack   2:    106 27 149 
stack   3:    107 275 
stack   4:    90 289 70 
stack   5:    114 3 20 
stack   6:    157 194 151 
stack   7:    153 279 83 
stack   8:    293 163 24 
stack   9:    240 286 56 
stack  10:    290 17 74 
stack  11:    118 255 7 
stack  12:    265 270 267 
stack  13:    75 129 156 
stack  14:    108 292 47 
stack  15:    243 
stack  16:    63 210 2 
stack  17:    264 32 139 
stack  18:    185 272 184 
stack  19:    4 
stack  20:    154 250 234 
stack  21:    78 260 1 
stack  22:    200 60 180 
stack  23:    291 158 22 
stack  24:    253 58 
stack  25:    140 244 269 
stack  26:    223 172 211 
stack  27:    46 145 9 
stack  28:    0 13 125 
stack  29:    257 61 168 
stack  30:    130 232 268 
stack  31:    50 57 101 
stack  32:    82 
stack  33:    205 42 204 
stack  34:    119 193 36 
stack  35:    274 214 146 
stack  36:    162 259 202 
stack  37:    54 44 88 
stack  38:    137 66 81 
stack  39:    115 84 5 
stack  40:    239 282 176 
stack  41:    67 109 12 
stack  42:    277 297 160 
stack  43:    198 
stack  44:    65 
stack  45:    37 171 192 
stack  46:    281 91 182 
stack  47:    73 
stack  48:    69 287 165 
stack  49:    220 246 121 
stack  50:    235 177 
stack  51:    53 
stack  52:    10 96 76 
stack  53:    128 231 142 
stack  54:    207 183 38 
stack  55:    64 
stack  56:    238 
stack  57:    237 247 179 
stack  58:    68 28 25 
stack  59:    21 122 152 
stack  60:    216 
stack  61:    284 245 197 
stack  62:    15 111 117 
stack  63:    169 
stack  64:    174 208 221 
stack  65:    131 95 113 
stack  66:    228 
stack  67:    143 
stack  68:    110 
stack  69:    161 188 254 
stack  70:    252 
stack  71:    288 6 263 
stack  72:    79 170 72 
stack  73:    209 34 99 
stack  74:    23 
stack  75:    147 212 226 
stack  76:    45 248 92 
stack  77:    295 
stack  78:    93 103 127 
stack  79:    55 
stack  80:    30 135 120 
stack  81:    141 175 49 
stack  82:    11 227 181 
stack  83:    52 77 203 
stack  84:    222 
stack  85:    241 85 80 
stack  86:    155 148 271 
stack  87:    124 159 206 
stack  88:    298 16 242 
stack  89:    138 33 26 
stack  90:    186 
stack  91:    256 40 
stack  92:    217 249 123 
stack  93:    201 213 136 
stack  94:    266 189 18 
stack  95:    8 
stack  96:    144 178 51 
stack  97:    104 225 94 
stack  98:    229 215 233 
stack  99:    97 48 299 
stack 100:    31 126 191 
stack 101:    262 
stack 102:    258 100 
stack 103:    280 
stack 104:    230 173 294 
stack 105:    116 164 219 
stack 106:    112 167 43 
stack 107:    89 134 
stack 108:    283 41 98 
stack 109:    29 
stack 110:    196 
stack 111:    62 251 218 
stack 112:    195 
stack 113:    39 105 132 
stack 114:    86 187 199 
stack 115:    133 87 236 
stack 116:    190 
stack 117:    102 276 14 
stack 118:    19 285 59 
stack 119:    150 166 296 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.25 s (time limit exceeded)
objective value: 640.0 (not optimal)

stacks (top to bottom):
stack   0:    114 74 159 
stack   1:    275 
stack   2:    235 
stack   3:    155 158 142 
stack   4:    97 255 136 
stack   5:    140 41 103 
stack   6:    247 35 101 
stack   7:    66 63 2 
stack   8:    172 157 24 
stack   9:    208 37 9 
stack  10:    238 271 
stack  11:    68 161 146 
stack  12:    252 280 
stack  13:    241 8 
stack  14:    75 119 151 
stack  15:    31 148 76 
stack  16:    205 30 132 
stack  17:    287 83 92 
stack  18:    256 17 184 
stack  19:    55 
stack  20:    69 270 
stack  21:    228 
stack  22:    266 16 
stack  23:    282 260 191 
stack  24:    222 
stack  25:    53 
stack  26:    82 
stack  27:    229 221 294 
stack  28:    39 206 
stack  29:    62 251 168 
stack  30:    213 60 268 
stack  31:    174 145 14 
stack  32:    109 59 204 
stack  33:    78 42 18 
stack  34:    193 121 26 
stack  35:    46 250 51 
stack  36:    93 248 156 
stack  37:    45 96 152 
stack  38:    209 21 20 
stack  39:    166 245 3 
stack  40:    243 
stack  41:    124 79 49 
stack  42:    144 95 263 
stack  43:    290 171 242 
stack  44:    28 85 164 
stack  45:    207 111 81 
stack  46:    112 143 
stack  47:    295 
stack  48:    29 
stack  49:    281 212 246 
stack  50:    239 187 267 
stack  51:    6 194 202 
stack  52:    196 
stack  53:    128 197 177 
stack  54:    89 183 5 
stack  55:    283 108 244 
stack  56:    15 230 94 
stack  57:    141 237 192 
stack  58:    116 279 25 
stack  59:    19 22 36 
stack  60:    232 285 12 
stack  61:    13 154 219 
stack  62:    50 163 278 
stack  63:    284 150 211 
stack  64:    110 
stack  65:    277 135 125 
stack  66:    147 261 117 
stack  67:    216 
stack  68:    23 
stack  69:    73 
stack  70:    257 286 214 
stack  71:    169 
stack  72:    91 234 
stack  73:    240 27 224 
stack  74:    107 186 
stack  75:    253 58 
stack  76:    201 175 47 
stack  77:    220 173 127 
stack  78:    90 48 80 
stack  79:    210 98 139 
stack  80:    200 297 218 
stack  81:    185 7 
stack  82:    54 44 149 
stack  83:    223 178 72 
stack  84:    274 126 33 
stack  85:    86 265 189 
stack  86:    264 40 
stack  87:    190 
stack  88:    292 182 199 
stack  89:    195 71 
stack  90:    293 188 296 
stack  91:    11 227 181 
stack  92:    198 
stack  93:    258 100 
stack  94:    291 215 179 
stack  95:    10 99 
stack  96:    52 77 203 
stack  97:    288 298 226 
stack  98:    225 129 120 
stack  99:    134 
stack 100:    167 249 165 
stack 101:    137 84 272 
stack 102:    106 231 176 
stack 103:    115 34 236 
stack 104:    273 32 113 
stack 105:    4 
stack 106:    133 276 
stack 107:    64 
stack 108:    0 104 254 
stack 109:    138 217 299 
stack 110:    118 88 
stack 111:    67 57 123 
stack 112:    262 43 56 
stack 113:    170 233 269 
stack 114:    259 162 160 
stack 115:    153 61 38 
stack 116:    131 130 122 
stack 117:    102 180 1 
stack 118:    65 70 
stack 119:    289 105 87 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
