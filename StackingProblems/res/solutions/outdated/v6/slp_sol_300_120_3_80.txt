solved with: BinPacking Formulation
time to solve: 89.49 s
objective value: 0.0

stacks (top to bottom):
stack   0:    132 
stack   1:    298 
stack   2:    22 
stack   3:    221 84 204 
stack   4:    198 29 149 
stack   5:    80 268 88 
stack   6:    70 95 220 
stack   7:    297 
stack   8:    69 191 270 
stack   9:    160 170 213 
stack  10:    56 83 274 
stack  11:    4 261 226 
stack  12:    163 172 17 
stack  13:    118 90 94 
stack  14:    89 255 134 
stack  15:    211 
stack  16:    58 272 12 
stack  17:    21 280 
stack  18:    62 231 219 
stack  19:    161 33 174 
stack  20:    31 92 108 
stack  21:    158 178 193 
stack  22:    129 279 229 
stack  23:    246 293 103 
stack  24:    82 3 236 
stack  25:    215 53 168 
stack  26:    81 192 203 
stack  27:    6 269 208 
stack  28:    278 19 77 
stack  29:    136 1 123 
stack  30:    200 171 144 
stack  31:    97 122 14 
stack  32:    91 65 179 
stack  33:    2 23 66 
stack  34:    68 
stack  35:    234 16 289 
stack  36:    205 
stack  37:    135 275 98 
stack  38:    133 
stack  39:    146 
stack  40:    60 
stack  41:    259 148 290 
stack  42:    196 182 185 
stack  43:    218 233 102 
stack  44:    271 46 
stack  45:    38 113 54 
stack  46:    169 264 187 
stack  47:    199 291 263 
stack  48:    216 28 257 
stack  49:    141 165 159 
stack  50:    25 44 152 
stack  51:    254 105 265 
stack  52:    7 
stack  53:    242 250 71 
stack  54:    101 175 295 
stack  55:    283 
stack  56:    43 75 173 
stack  57:    124 228 24 
stack  58:    166 87 120 
stack  59:    210 212 156 
stack  60:    177 223 296 
stack  61:    214 86 145 
stack  62:    130 286 201 
stack  63:    10 240 243 
stack  64:    63 258 
stack  65:    241 
stack  66:    154 157 119 
stack  67:    287 
stack  68:    273 284 253 
stack  69:    73 188 50 
stack  70:    189 107 51 
stack  71:    181 139 153 
stack  72:    37 256 262 
stack  73:    150 235 209 
stack  74:    30 15 26 
stack  75:    32 
stack  76:    13 
stack  77:    131 
stack  78:    41 64 207 
stack  79:    47 
stack  80:    237 9 79 
stack  81:    222 117 125 
stack  82:    48 155 40 
stack  83:    78 151 184 
stack  84:    18 194 112 
stack  85:    230 115 162 
stack  86:    190 249 93 
stack  87:    164 277 288 
stack  88:    128 227 114 
stack  89:    96 76 285 
stack  90:    186 5 244 
stack  91:    126 35 11 
stack  92:    67 183 238 
stack  93:    138 195 247 
stack  94:    197 110 61 
stack  95:    27 72 142 
stack  96:    217 
stack  97:    109 202 294 
stack  98:    224 251 
stack  99:    180 
stack 100:    127 
stack 101:    225 266 55 
stack 102:    106 292 49 
stack 103:    121 
stack 104:    57 137 59 
stack 105:    260 276 299 
stack 106:    99 
stack 107:    167 0 20 
stack 108:    252 267 39 
stack 109:    42 232 245 
stack 110:    104 
stack 111:    45 176 248 
stack 112:    74 100 239 
stack 113:    34 281 85 
stack 114:    140 
stack 115:    111 
stack 116:    143 
stack 117:    116 52 36 
stack 118:    206 282 147 
stack 119:    8 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 301.56 s (time limit exceeded)
objective value: 801.0 (not optimal)

stacks (top to bottom):
stack   0:    163 184 134 
stack   1:    0 267 16 
stack   2:    23 42 103 
stack   3:    256 182 245 
stack   4:    240 84 44 
stack   5:    282 202 36 
stack   6:    186 70 108 
stack   7:    254 122 9 
stack   8:    137 191 229 
stack   9:    136 121 
stack  10:    73 115 12 
stack  11:    139 135 263 
stack  12:    89 127 
stack  13:    222 284 25 
stack  14:    234 35 248 
stack  15:    80 77 10 
stack  16:    58 43 
stack  17:    216 61 
stack  18:    237 90 62 
stack  19:    210 175 159 
stack  20:    196 1 294 
stack  21:    105 107 76 
stack  22:    124 279 144 
stack  23:    91 18 289 
stack  24:    38 48 193 
stack  25:    215 238 24 
stack  26:    148 208 207 
stack  27:    83 33 174 
stack  28:    278 235 290 
stack  29:    198 117 51 
stack  30:    30 15 26 
stack  31:    177 31 59 
stack  32:    243 171 50 
stack  33:    85 71 120 
stack  34:    78 54 
stack  35:    131 
stack  36:    87 109 255 
stack  37:    141 176 
stack  38:    75 266 291 
stack  39:    6 96 258 
stack  40:    164 29 14 
stack  41:    271 158 
stack  42:    95 
stack  43:    130 206 233 
stack  44:    190 299 
stack  45:    143 
stack  46:    150 151 253 
stack  47:    82 257 114 
stack  48:    281 28 142 
stack  49:    161 249 187 
stack  50:    40 92 285 
stack  51:    160 20 209 
stack  52:    63 56 295 
stack  53:    37 265 64 
stack  54:    293 212 296 
stack  55:    45 178 201 
stack  56:    167 157 173 
stack  57:    260 116 162 
stack  58:    166 113 102 
stack  59:    53 5 106 
stack  60:    22 
stack  61:    104 
stack  62:    99 
stack  63:    4 268 204 
stack  64:    252 231 
stack  65:    217 
stack  66:    74 183 119 
stack  67:    236 100 145 
stack  68:    251 
stack  69:    2 110 226 
stack  70:    242 298 
stack  71:    277 192 49 
stack  72:    189 66 39 
stack  73:    246 272 153 
stack  74:    200 292 11 
stack  75:    94 65 98 
stack  76:    179 273 112 
stack  77:    118 21 146 
stack  78:    232 264 227 
stack  79:    221 247 
stack  80:    126 228 219 
stack  81:    181 19 154 
stack  82:    13 
stack  83:    214 223 188 
stack  84:    224 
stack  85:    297 
stack  86:    244 239 185 
stack  87:    72 172 220 
stack  88:    211 147 
stack  89:    67 170 152 
stack  90:    129 194 17 
stack  91:    81 165 3 
stack  92:    133 205 
stack  93:    7 203 
stack  94:    199 275 79 
stack  95:    197 125 276 
stack  96:    259 52 
stack  97:    132 
stack  98:    180 
stack  99:    60 
stack 100:    283 
stack 101:    155 262 88 
stack 102:    97 286 
stack 103:    128 195 270 
stack 104:    57 69 149 
stack 105:    225 41 288 
stack 106:    230 241 
stack 107:    269 123 280 
stack 108:    101 261 55 
stack 109:    34 93 
stack 110:    218 138 156 
stack 111:    287 168 
stack 112:    68 
stack 113:    46 
stack 114:    8 140 
stack 115:    47 
stack 116:    169 250 274 
stack 117:    32 
stack 118:    86 213 27 
stack 119:    111 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
time to solve: 0.97 s
objective value: 1235.0

stacks (top to bottom):
stack   0:    22 294 
stack   1:    278 104 298 
stack   2:    143 119 
stack   3:    133 205 
stack   4:    211 147 
stack   5:    264 208 207 
stack   6:    167 7 50 
stack   7:    8 140 
stack   8:    21 102 
stack   9:    131 144 
stack  10:    265 0 88 
stack  11:    266 1 296 
stack  12:    267 10 11 
stack  13:    268 15 12 
stack  14:    269 16 14 
stack  15:    272 48 49 
stack  16:    273 52 51 
stack  17:    276 53 54 
stack  18:    277 62 59 
stack  19:    282 100 98 
stack  20:    284 107 108 
stack  21:    292 113 112 
stack  22:    293 122 120 
stack  23:    4 155 152 
stack  24:    5 157 153 
stack  25:    6 158 156 
stack  26:    9 172 173 
stack  27:    73 188 187 
stack  28:    74 206 204 
stack  29:    90 248 247 
stack  30:    91 262 263 
stack  31:    96 275 274 
stack  32:    97 288 289 
stack  33:    116 291 290 
stack  34:    117 299 295 
stack  35:    181 18 17 
stack  36:    182 151 79 
stack  37:    101 103 
stack  38:    189 115 114 
stack  39:    126 134 
stack  40:    191 148 142 
stack  41:    177 160 159 
stack  42:    190 194 193 
stack  43:    225 226 
stack  44:    252 253 
stack  45:    34 281 280 
stack  46:    37 36 
stack  47:    141 46 
stack  48:    197 60 
stack  49:    80 251 
stack  50:    89 127 
stack  51:    136 121 
stack  52:    130 132 
stack  53:    192 163 162 
stack  54:    78 186 185 
stack  55:    200 203 
stack  56:    230 229 
stack  57:    195 240 239 
stack  58:    196 286 285 
stack  59:    56 55 
stack  60:    81 68 
stack  61:    199 95 93 
stack  62:    166 168 
stack  63:    202 243 244 
stack  64:    63 241 
stack  65:    221 154 149 
stack  66:    198 201 
stack  67:    124 270 
stack  68:    82 222 146 
stack  69:    214 219 
stack  70:    223 23 24 
stack  71:    118 61 
stack  72:    210 209 
stack  73:    246 245 
stack  74:    259 258 
stack  75:    271 283 
stack  76:    233 94 92 
stack  77:    234 41 40 
stack  78:    45 44 
stack  79:    150 145 
stack  80:    218 220 
stack  81:    161 47 
stack  82:    29 72 71 
stack  83:    30 75 76 
stack  84:    38 39 
stack  85:    242 224 
stack  86:    237 238 
stack  87:    32 
stack  88:    99 
stack  89:    217 
stack  90:    297 
stack  91:    13 
stack  92:    111 
stack  93:    180 
stack  94:    287 
stack  95:    35 20 19 
stack  96:    254 26 25 
stack  97:    255 28 27 
stack  98:    260 33 31 
stack  99:    261 43 42 
stack 100:    57 65 64 
stack 101:    58 70 69 
stack 102:    66 85 84 
stack 103:    67 87 86 
stack 104:    176 106 105 
stack 105:    215 110 109 
stack 106:    216 125 123 
stack 107:    2 137 135 
stack 108:    3 139 138 
stack 109:    77 165 164 
stack 110:    83 171 170 
stack 111:    128 175 174 
stack 112:    129 179 178 
stack 113:    279 184 183 
stack 114:    169 213 212 
stack 115:    228 227 
stack 116:    232 231 
stack 117:    236 235 
stack 118:    250 249 
stack 119:    257 256 

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
time to solve: 0.10 s
objective value: 1427.0

stacks (top to bottom):
stack   0:    8 140 173 
stack   1:    128 129 1 
stack   2:    215 216 12 
stack   3:    58 57 14 
stack   4:    2 3 15 
stack   5:    30 29 16 
stack   6:    34 35 23 
stack   7:    67 66 24 
stack   8:    78 77 40 
stack   9:    82 83 41 
stack  10:    91 90 59 
stack  11:    97 96 62 
stack  12:    167 169 92 
stack  13:    181 182 94 
stack  14:    196 195 98 
stack  15:    199 202 100 
stack  16:    234 233 107 
stack  17:    177 176 108 
stack  18:    190 192 114 
stack  19:    221 223 115 
stack  20:    237 238 120 
stack  21:    246 245 152 
stack  22:    254 255 122 
stack  23:    260 261 153 
stack  24:    278 279 155 
stack  25:    4 5 156 
stack  26:    6 9 157 
stack  27:    116 117 158 
stack  28:    198 201 290 
stack  29:    38 39 285 
stack  30:    56 55 289 
stack  31:    74 73 162 
stack  32:    189 191 163 
stack  33:    150 145 296 
stack  34:    19 20 172 
stack  35:    25 26 193 
stack  36:    27 28 194 
stack  37:    31 33 207 
stack  38:    42 43 208 
stack  39:    64 65 239 
stack  40:    69 70 240 
stack  41:    84 85 247 
stack  42:    86 87 248 
stack  43:    105 106 262 
stack  44:    109 110 263 
stack  45:    123 125 274 
stack  46:    135 137 275 
stack  47:    138 139 286 
stack  48:    164 165 288 
stack  49:    170 171 291 
stack  50:    174 175 295 
stack  51:    178 179 299 
stack  52:    81 68 144 
stack  53:    222 146 102 
stack  54:    124 104 298 
stack  55:    200 188 0 
stack  56:    214 213 10 
stack  57:    252 250 11 
stack  58:    225 220 253 
stack  59:    118 21 280 
stack  60:    271 270 229 
stack  61:    37 36 61 
stack  62:    242 224 251 
stack  63:    80 76 209 
stack  64:    259 264 17 
stack  65:    63 71 294 
stack  66:    141 46 
stack  67:    273 276 249 
stack  68:    148 256 134 
stack  69:    160 149 
stack  70:    161 45 47 
stack  71:    130 52 51 
stack  72:    101 93 
stack  73:    89 127 
stack  74:    197 60 
stack  75:    292 293 226 
stack  76:    230 228 227 
stack  77:    133 205 
stack  78:    7 50 203 
stack  79:    18 113 44 
stack  80:    282 284 103 
stack  81:    257 154 258 
stack  82:    265 266 79 
stack  83:    126 212 204 
stack  84:    95 277 88 
stack  85:    281 53 54 
stack  86:    206 48 187 
stack  87:    287 168 
stack  88:    183 184 147 
stack  89:    166 151 142 
stack  90:    136 121 
stack  91:    267 268 159 
stack  92:    143 119 
stack  93:    235 236 112 
stack  94:    243 244 185 
stack  95:    218 219 
stack  96:    72 75 49 
stack  97:    186 269 272 
stack  98:    210 231 232 
stack  99:    13 
stack 100:    22 
stack 101:    32 
stack 102:    99 
stack 103:    111 
stack 104:    131 
stack 105:    180 
stack 106:    217 
stack 107:    283 
stack 108:    297 
stack 109:    132 
stack 110:    211 
stack 111:    241 
stack 112:    
stack 113:    
stack 114:    
stack 115:    
stack 116:    
stack 117:    
stack 118:    
stack 119:    
