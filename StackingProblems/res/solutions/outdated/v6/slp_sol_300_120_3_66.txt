solved with: BinPacking Formulation
time to solve: 71.72 s
objective value: 0.0

stacks (top to bottom):
stack   0:    277 26 284 
stack   1:    262 93 169 
stack   2:    11 148 188 
stack   3:    293 123 204 
stack   4:    103 141 244 
stack   5:    279 232 152 
stack   6:    294 228 133 
stack   7:    241 96 187 
stack   8:    249 206 58 
stack   9:    297 
stack  10:    7 92 275 
stack  11:    183 296 173 
stack  12:    234 125 257 
stack  13:    61 63 178 
stack  14:    238 90 230 
stack  15:    40 147 239 
stack  16:    50 212 189 
stack  17:    190 197 248 
stack  18:    72 167 237 
stack  19:    181 205 8 
stack  20:    274 
stack  21:    43 153 168 
stack  22:    4 164 227 
stack  23:    194 
stack  24:    115 
stack  25:    225 2 68 
stack  26:    119 52 157 
stack  27:    132 219 27 
stack  28:    154 269 130 
stack  29:    134 24 79 
stack  30:    31 124 195 
stack  31:    69 271 291 
stack  32:    171 
stack  33:    247 12 160 
stack  34:    210 231 278 
stack  35:    117 198 260 
stack  36:    245 99 203 
stack  37:    224 
stack  38:    102 285 74 
stack  39:    170 116 185 
stack  40:    268 270 98 
stack  41:    70 218 283 
stack  42:    113 
stack  43:    186 0 192 
stack  44:    44 47 229 
stack  45:    59 95 
stack  46:    30 14 25 
stack  47:    114 191 67 
stack  48:    177 220 233 
stack  49:    88 73 127 
stack  50:    85 202 65 
stack  51:    129 23 290 
stack  52:    136 29 39 
stack  53:    10 
stack  54:    254 273 155 
stack  55:    163 142 22 
stack  56:    57 
stack  57:    138 208 223 
stack  58:    122 
stack  59:    100 
stack  60:    86 222 6 
stack  61:    292 
stack  62:    217 140 289 
stack  63:    162 121 176 
stack  64:    1 
stack  65:    221 256 81 
stack  66:    36 149 255 
stack  67:    37 107 126 
stack  68:    41 264 131 
stack  69:    42 112 143 
stack  70:    5 265 263 
stack  71:    16 
stack  72:    33 
stack  73:    184 87 120 
stack  74:    77 298 213 
stack  75:    161 54 276 
stack  76:    28 
stack  77:    66 106 151 
stack  78:    75 267 3 
stack  79:    250 82 145 
stack  80:    211 18 13 
stack  81:    34 15 56 
stack  82:    207 158 252 
stack  83:    105 
stack  84:    243 45 137 
stack  85:    226 
stack  86:    91 199 209 
stack  87:    51 253 104 
stack  88:    17 128 20 
stack  89:    156 
stack  90:    299 174 
stack  91:    62 
stack  92:    261 109 201 
stack  93:    64 53 97 
stack  94:    216 84 21 
stack  95:    180 272 48 
stack  96:    240 
stack  97:    55 110 
stack  98:    214 282 295 
stack  99:    166 9 242 
stack 100:    83 78 
stack 101:    179 
stack 102:    76 
stack 103:    165 175 35 
stack 104:    159 19 49 
stack 105:    80 
stack 106:    259 
stack 107:    266 196 287 
stack 108:    144 94 281 
stack 109:    236 286 200 
stack 110:    288 135 172 
stack 111:    89 
stack 112:    60 111 246 
stack 113:    46 71 258 
stack 114:    118 
stack 115:    215 139 193 
stack 116:    101 182 108 
stack 117:    235 251 146 
stack 118:    150 
stack 119:    38 32 280 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 301.77 s (time limit exceeded)
objective value: 86.0 (not optimal)

stacks (top to bottom):
stack   0:    10 
stack   1:    0 253 283 
stack   2:    26 185 165 
stack   3:    68 251 98 
stack   4:    225 244 107 
stack   5:    30 232 152 
stack   6:    15 190 104 
stack   7:    241 252 
stack   8:    179 
stack   9:    270 220 258 
stack  10:    211 222 227 
stack  11:    44 183 
stack  12:    236 171 
stack  13:    4 124 63 
stack  14:    142 140 230 
stack  15:    250 193 29 
stack  16:    118 
stack  17:    43 291 248 
stack  18:    60 276 275 
stack  19:    88 257 8 
stack  20:    238 79 255 
stack  21:    136 93 188 
stack  22:    34 12 287 
stack  23:    234 228 213 
stack  24:    46 273 9 
stack  25:    38 204 
stack  26:    5 59 36 
stack  27:    17 202 269 
stack  28:    85 84 
stack  29:    33 
stack  30:    11 286 74 
stack  31:    86 239 112 
stack  32:    69 138 22 
stack  33:    296 111 120 
stack  34:    83 210 189 
stack  35:    57 
stack  36:    127 219 81 
stack  37:    109 290 146 
stack  38:    180 285 263 
stack  39:    279 141 148 
stack  40:    170 97 
stack  41:    119 295 103 
stack  42:    61 56 
stack  43:    247 92 151 
stack  44:    277 132 168 
stack  45:    24 125 167 
stack  46:    293 25 214 
stack  47:    114 106 67 
stack  48:    184 157 200 
stack  49:    181 
stack  50:    117 51 27 
stack  51:    217 89 
stack  52:    135 201 
stack  53:    216 23 196 
stack  54:    159 41 78 
stack  55:    162 254 65 
stack  56:    207 70 64 
stack  57:    260 55 208 
stack  58:    122 
stack  59:    262 278 133 
stack  60:    163 187 6 
stack  61:    292 
stack  62:    144 128 71 
stack  63:    288 267 176 
stack  64:    123 194 
stack  65:    294 218 264 
stack  66:    80 
stack  67:    66 126 
stack  68:    224 
stack  69:    272 121 231 
stack  70:    28 178 
stack  71:    137 298 233 
stack  72:    62 
stack  73:    16 145 
stack  74:    240 
stack  75:    100 
stack  76:    50 265 95 
stack  77:    150 
stack  78:    215 284 209 
stack  79:    274 
stack  80:    199 18 175 
stack  81:    261 156 
stack  82:    299 174 
stack  83:    113 297 
stack  84:    243 72 280 
stack  85:    1 
stack  86:    192 49 281 
stack  87:    76 
stack  88:    154 153 48 
stack  89:    42 19 20 
stack  90:    40 91 21 
stack  91:    7 223 47 
stack  92:    31 73 173 
stack  93:    2 32 53 
stack  94:    169 54 108 
stack  95:    186 242 203 
stack  96:    105 
stack  97:    134 282 271 
stack  98:    235 246 
stack  99:    266 99 143 
stack 100:    221 158 110 
stack 101:    256 39 229 
stack 102:    197 191 130 
stack 103:    75 45 198 
stack 104:    166 116 96 
stack 105:    160 149 172 
stack 106:    259 
stack 107:    245 289 35 
stack 108:    129 94 87 
stack 109:    249 90 13 
stack 110:    115 
stack 111:    102 212 82 
stack 112:    205 237 58 
stack 113:    101 37 131 
stack 114:    268 3 
stack 115:    161 139 195 
stack 116:    77 182 147 
stack 117:    164 206 52 
stack 118:    177 14 155 
stack 119:    226 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
time to solve: 8.11 s
objective value: 1402.0

stacks (top to bottom):
stack   0:    80 8 
stack   1:    28 178 
stack   2:    299 174 
stack   3:    224 204 
stack   4:    113 176 
stack   5:    161 16 130 
stack   6:    1 155 
stack   7:    77 19 20 
stack   8:    79 23 21 
stack   9:    83 29 27 
stack  10:    84 59 58 
stack  11:    87 68 67 
stack  12:    88 73 74 
stack  13:    101 82 81 
stack  14:    103 94 95 
stack  15:    119 99 98 
stack  16:    121 106 104 
stack  17:    128 107 108 
stack  18:    129 135 133 
stack  19:    159 147 146 
stack  20:    160 151 152 
stack  21:    162 175 173 
stack  22:    165 190 189 
stack  23:    163 202 200 
stack  24:    167 210 209 
stack  25:    170 214 213 
stack  26:    172 231 230 
stack  27:    181 257 258 
stack  28:    182 276 275 
stack  29:    183 282 281 
stack  30:    184 284 283 
stack  31:    4 3 
stack  32:    5 6 
stack  33:    185 12 13 
stack  34:    24 22 
stack  35:    31 35 
stack  36:    186 96 97 
stack  37:    117 120 
stack  38:    144 145 
stack  39:    216 228 229 
stack  40:    40 243 246 
stack  41:    245 248 
stack  42:    279 280 
stack  43:    30 259 
stack  44:    75 78 
stack  45:    261 109 110 
stack  46:    166 115 
stack  47:    219 142 143 
stack  48:    225 203 201 
stack  49:    262 263 
stack  50:    227 54 53 
stack  51:    102 100 
stack  52:    234 270 271 
stack  53:    277 247 156 
stack  54:    236 171 
stack  55:    85 288 287 
stack  56:    250 252 
stack  57:    46 48 
stack  58:    207 66 65 
stack  59:    38 123 89 
stack  60:    134 131 
stack  61:    44 217 194 
stack  62:    42 293 291 
stack  63:    235 50 292 
stack  64:    33 
stack  65:    226 
stack  66:    105 
stack  67:    10 
stack  68:    76 
stack  69:    240 
stack  70:    274 
stack  71:    179 
stack  72:    118 
stack  73:    150 
stack  74:    57 
stack  75:    122 
stack  76:    62 
stack  77:    297 
stack  78:    237 2 0 
stack  79:    241 15 14 
stack  80:    244 26 25 
stack  81:    294 132 49 
stack  82:    295 52 51 
stack  83:    9 56 55 
stack  84:    11 72 71 
stack  85:    39 91 90 
stack  86:    86 93 92 
stack  87:    136 112 111 
stack  88:    137 116 114 
stack  89:    153 125 124 
stack  90:    154 127 126 
stack  91:    164 139 138 
stack  92:    211 141 140 
stack  93:    212 149 148 
stack  94:    215 158 157 
stack  95:    218 169 168 
stack  96:    220 180 177 
stack  97:    221 188 187 
stack  98:    266 192 191 
stack  99:    267 195 193 
stack 100:    208 197 196 
stack 101:    238 199 198 
stack 102:    242 206 205 
stack 103:    249 223 222 
stack 104:    251 233 232 
stack 105:    260 254 253 
stack 106:    278 256 255 
stack 107:    37 265 264 
stack 108:    47 269 268 
stack 109:    239 273 272 
stack 110:    41 286 285 
stack 111:    290 289 
stack 112:    298 296 
stack 113:    7 32 
stack 114:    17 18 
stack 115:    34 36 
stack 116:    43 45 
stack 117:    60 63 
stack 118:    61 64 
stack 119:    69 70 

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
time to solve: 0.11 s
objective value: 1394.0

stacks (top to bottom):
stack   0:    50 292 95 
stack   1:    247 156 74 
stack   2:    7 32 21 
stack   3:    11 9 23 
stack   4:    17 18 53 
stack   5:    34 36 54 
stack   6:    40 39 67 
stack   7:    42 41 68 
stack   8:    60 63 73 
stack   9:    61 64 94 
stack  10:    69 70 96 
stack  11:    83 84 97 
stack  12:    85 86 98 
stack  13:    88 87 99 
stack  14:    101 103 107 
stack  15:    136 137 108 
stack  16:    159 160 146 
stack  17:    161 164 147 
stack  18:    163 167 151 
stack  19:    170 172 152 
stack  20:    181 182 173 
stack  21:    184 183 175 
stack  22:    207 208 189 
stack  23:    211 212 190 
stack  24:    216 219 200 
stack  25:    221 220 201 
stack  26:    225 227 202 
stack  27:    234 237 203 
stack  28:    235 239 209 
stack  29:    238 242 210 
stack  30:    241 244 213 
stack  31:    266 267 214 
stack  32:    277 278 228 
stack  33:    44 47 229 
stack  34:    46 48 271 
stack  35:    77 79 230 
stack  36:    119 121 231 
stack  37:    129 128 257 
stack  38:    162 165 258 
stack  39:    186 185 270 
stack  40:    261 260 275 
stack  41:    294 295 276 
stack  42:    38 37 281 
stack  43:    43 45 282 
stack  44:    215 218 283 
stack  45:    249 251 284 
stack  46:    293 123 89 
stack  47:    75 72 0 
stack  48:    117 116 2 
stack  49:    262 256 12 
stack  50:    279 273 13 
stack  51:    66 71 14 
stack  52:    243 233 15 
stack  53:    288 289 19 
stack  54:    109 106 22 
stack  55:    113 297 176 
stack  56:    24 29 20 
stack  57:    1 155 291 
stack  58:    16 130 145 
stack  59:    31 49 25 
stack  60:    245 232 26 
stack  61:    154 153 27 
stack  62:    51 52 35 
stack  63:    55 56 58 
stack  64:    92 93 59 
stack  65:    124 125 65 
stack  66:    102 91 78 
stack  67:    134 135 81 
stack  68:    144 148 82 
stack  69:    112 114 90 
stack  70:    139 140 104 
stack  71:    138 141 110 
stack  72:    30 259 
stack  73:    166 115 
stack  74:    236 171 
stack  75:    299 174 
stack  76:    224 204 
stack  77:    217 194 
stack  78:    5 6 
stack  79:    250 246 
stack  80:    4 3 
stack  81:    80 8 
stack  82:    28 178 
stack  83:    126 127 133 
stack  84:    157 158 142 
stack  85:    168 169 143 
stack  86:    177 180 149 
stack  87:    187 188 252 
stack  88:    191 192 254 
stack  89:    193 195 255 
stack  90:    196 197 263 
stack  91:    198 199 272 
stack  92:    205 206 280 
stack  93:    222 223 287 
stack  94:    264 265 290 
stack  95:    268 269 248 
stack  96:    285 286 253 
stack  97:    296 298 
stack  98:    111 120 
stack  99:    132 131 
stack 100:    10 
stack 101:    33 
stack 102:    57 
stack 103:    62 
stack 104:    76 
stack 105:    100 
stack 106:    105 
stack 107:    118 
stack 108:    122 
stack 109:    150 
stack 110:    179 
stack 111:    226 
stack 112:    240 
stack 113:    274 
stack 114:    
stack 115:    
stack 116:    
stack 117:    
stack 118:    
stack 119:    
