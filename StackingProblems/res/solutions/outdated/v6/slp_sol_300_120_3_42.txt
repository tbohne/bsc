solved with: BinPacking Formulation
time to solve: 169.89 s
objective value: 0.0

stacks (top to bottom):
stack   0:    82 
stack   1:    252 
stack   2:    78 172 
stack   3:    245 
stack   4:    204 264 224 
stack   5:    185 128 153 
stack   6:    7 240 174 
stack   7:    261 138 292 
stack   8:    192 170 291 
stack   9:    283 219 241 
stack  10:    113 
stack  11:    54 142 48 
stack  12:    99 20 140 
stack  13:    37 297 101 
stack  14:    50 281 112 
stack  15:    118 269 102 
stack  16:    4 18 171 
stack  17:    294 282 94 
stack  18:    199 51 59 
stack  19:    84 
stack  20:    146 53 97 
stack  21:    56 226 
stack  22:    234 47 22 
stack  23:    44 249 124 
stack  24:    143 15 81 
stack  25:    214 114 198 
stack  26:    46 299 179 
stack  27:    230 
stack  28:    34 52 218 
stack  29:    237 130 246 
stack  30:    92 69 107 
stack  31:    30 178 28 
stack  32:    233 149 25 
stack  33:    13 106 231 
stack  34:    265 
stack  35:    290 134 
stack  36:    26 164 40 
stack  37:    79 31 55 
stack  38:    144 223 80 
stack  39:    58 132 203 
stack  40:    221 65 98 
stack  41:    183 137 228 
stack  42:    189 45 66 
stack  43:    73 103 298 
stack  44:    180 38 217 
stack  45:    190 271 75 
stack  46:    257 229 168 
stack  47:    187 123 197 
stack  48:    201 177 175 
stack  49:    157 243 232 
stack  50:    68 279 193 
stack  51:    220 
stack  52:    17 
stack  53:    235 9 145 
stack  54:    24 216 213 
stack  55:    160 227 129 
stack  56:    125 
stack  57:    87 41 10 
stack  58:    166 260 296 
stack  59:    151 116 
stack  60:    89 288 163 
stack  61:    280 120 12 
stack  62:    29 72 286 
stack  63:    251 23 278 
stack  64:    248 
stack  65:    195 209 253 
stack  66:    115 263 147 
stack  67:    284 277 250 
stack  68:    188 88 242 
stack  69:    156 239 119 
stack  70:    173 61 236 
stack  71:    111 254 225 
stack  72:    200 
stack  73:    131 3 
stack  74:    11 
stack  75:    238 244 
stack  76:    150 96 93 
stack  77:    32 212 6 
stack  78:    83 
stack  79:    162 57 16 
stack  80:    186 
stack  81:    64 287 202 
stack  82:    184 205 141 
stack  83:    273 152 
stack  84:    70 90 126 
stack  85:    135 
stack  86:    100 285 167 
stack  87:    268 
stack  88:    19 76 222 
stack  89:    5 133 136 
stack  90:    71 161 259 
stack  91:    74 108 275 
stack  92:    109 194 49 
stack  93:    110 159 255 
stack  94:    85 
stack  95:    104 60 276 
stack  96:    1 158 27 
stack  97:    176 
stack  98:    247 62 
stack  99:    42 215 262 
stack 100:    274 8 182 
stack 101:    63 210 272 
stack 102:    105 
stack 103:    208 21 
stack 104:    256 91 122 
stack 105:    43 
stack 106:    95 139 155 
stack 107:    39 35 2 
stack 108:    211 154 207 
stack 109:    14 169 86 
stack 110:    293 206 121 
stack 111:    148 
stack 112:    0 
stack 113:    67 181 270 
stack 114:    289 267 295 
stack 115:    77 
stack 116:    258 36 
stack 117:    266 196 165 
stack 118:    33 
stack 119:    117 127 191 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.77 s (time limit exceeded)
objective value: 329.0 (not optimal)

stacks (top to bottom):
stack   0:    72 130 51 
stack   1:    279 26 217 
stack   2:    268 
stack   3:    117 71 203 
stack   4:    189 41 174 
stack   5:    185 143 
stack   6:    266 133 122 
stack   7:    77 
stack   8:    32 139 286 
stack   9:    194 178 136 
stack  10:    161 138 16 
stack  11:    65 287 179 
stack  12:    83 
stack  13:    14 228 101 
stack  14:    273 81 
stack  15:    154 75 
stack  16:    281 206 18 
stack  17:    247 30 270 
stack  18:    79 110 278 
stack  19:    99 102 
stack  20:    17 
stack  21:    245 
stack  22:    47 60 94 
stack  23:    237 54 246 
stack  24:    162 90 93 
stack  25:    289 95 198 
stack  26:    229 123 134 
stack  27:    37 140 124 
stack  28:    183 100 232 
stack  29:    135 
stack  30:    107 196 262 
stack  31:    283 219 277 
stack  32:    156 57 25 
stack  33:    176 
stack  34:    264 64 295 
stack  35:    280 160 80 
stack  36:    106 46 255 
stack  37:    201 216 191 
stack  38:    39 181 223 
stack  39:    184 59 58 
stack  40:    269 149 250 
stack  41:    44 152 27 
stack  42:    263 249 202 
stack  43:    208 21 
stack  44:    239 132 112 
stack  45:    256 23 66 
stack  46:    235 108 168 
stack  47:    78 248 36 
stack  48:    188 103 276 
stack  49:    159 242 155 
stack  50:    92 38 40 
stack  51:    170 275 231 
stack  52:    257 267 8 
stack  53:    84 
stack  54:    19 35 142 
stack  55:    104 128 147 
stack  56:    214 67 153 
stack  57:    252 
stack  58:    50 227 12 
stack  59:    180 73 213 
stack  60:    29 52 171 
stack  61:    290 225 
stack  62:    240 63 163 
stack  63:    82 148 22 
stack  64:    131 
stack  65:    284 13 253 
stack  66:    150 177 167 
stack  67:    192 85 
stack  68:    89 96 2 
stack  69:    293 126 
stack  70:    173 61 236 
stack  71:    157 3 
stack  72:    285 215 272 
stack  73:    220 172 175 
stack  74:    88 259 296 
stack  75:    238 209 20 
stack  76:    1 114 127 
stack  77:    42 212 10 
stack  78:    226 
stack  79:    56 144 292 
stack  80:    200 
stack  81:    261 158 207 
stack  82:    9 205 48 
stack  83:    68 271 165 
stack  84:    70 119 
stack  85:    120 53 6 
stack  86:    4 31 49 
stack  87:    265 
stack  88:    199 45 222 
stack  89:    241 
stack  90:    244 
stack  91:    243 76 297 
stack  92:    105 
stack  93:    113 
stack  94:    118 137 224 
stack  95:    33 
stack  96:    221 43 
stack  97:    151 116 
stack  98:    288 298 121 
stack  99:    74 254 197 
stack 100:    294 5 34 
stack 101:    204 166 141 
stack 102:    0 97 
stack 103:    234 186 
stack 104:    87 91 291 
stack 105:    190 164 115 
stack 106:    195 282 145 
stack 107:    251 111 7 
stack 108:    169 109 69 
stack 109:    260 210 86 
stack 110:    233 98 28 
stack 111:    146 24 55 
stack 112:    125 
stack 113:    274 299 129 
stack 114:    62 
stack 115:    211 15 218 
stack 116:    258 182 
stack 117:    11 
stack 118:    187 230 
stack 119:    193 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
Problem not solved.

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
Problem not solved.
