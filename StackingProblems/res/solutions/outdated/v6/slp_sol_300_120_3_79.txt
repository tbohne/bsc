solved with: BinPacking Formulation
time to solve: 73.97 s
objective value: 0.0

stacks (top to bottom):
stack   0:    14 277 96 
stack   1:    84 143 72 
stack   2:    116 30 128 
stack   3:    161 76 157 
stack   4:    209 160 13 
stack   5:    197 294 179 
stack   6:    86 57 190 
stack   7:    289 
stack   8:    257 227 77 
stack   9:    24 
stack  10:    232 195 124 
stack  11:    261 
stack  12:    6 250 70 
stack  13:    225 45 292 
stack  14:    242 224 91 
stack  15:    260 163 222 
stack  16:    191 272 165 
stack  17:    142 231 36 
stack  18:    110 44 281 
stack  19:    73 103 185 
stack  20:    146 
stack  21:    11 27 198 
stack  22:    7 263 75 
stack  23:    132 177 194 
stack  24:    60 68 155 
stack  25:    149 89 105 
stack  26:    10 228 12 
stack  27:    46 259 214 
stack  28:    170 50 252 
stack  29:    40 61 107 
stack  30:    206 266 52 
stack  31:    144 
stack  32:    237 
stack  33:    125 112 
stack  34:    180 156 245 
stack  35:    284 
stack  36:    48 117 174 
stack  37:    71 150 210 
stack  38:    280 
stack  39:    127 136 255 
stack  40:    207 
stack  41:    153 240 145 
stack  42:    223 
stack  43:    173 186 276 
stack  44:    299 31 38 
stack  45:    290 220 229 
stack  46:    5 101 176 
stack  47:    221 28 243 
stack  48:    171 219 140 
stack  49:    183 217 23 
stack  50:    148 
stack  51:    94 154 115 
stack  52:    90 
stack  53:    25 256 213 
stack  54:    59 189 279 
stack  55:    88 226 270 
stack  56:    22 249 63 
stack  57:    130 47 141 
stack  58:    53 
stack  59:    178 286 133 
stack  60:    67 
stack  61:    248 42 100 
stack  62:    8 235 164 
stack  63:    98 21 291 
stack  64:    17 37 298 
stack  65:    81 275 121 
stack  66:    254 268 83 
stack  67:    168 131 295 
stack  68:    152 
stack  69:    92 126 244 
stack  70:    1 65 211 
stack  71:    85 
stack  72:    253 216 82 
stack  73:    93 202 87 
stack  74:    296 2 234 
stack  75:    19 262 239 
stack  76:    129 32 97 
stack  77:    122 151 233 
stack  78:    0 20 205 
stack  79:    241 69 138 
stack  80:    16 
stack  81:    109 
stack  82:    236 162 278 
stack  83:    287 114 
stack  84:    9 118 293 
stack  85:    169 196 18 
stack  86:    264 182 111 
stack  87:    26 
stack  88:    139 
stack  89:    56 120 267 
stack  90:    215 
stack  91:    204 123 297 
stack  92:    288 
stack  93:    3 265 51 
stack  94:    95 
stack  95:    74 193 208 
stack  96:    200 4 102 
stack  97:    54 
stack  98:    43 104 135 
stack  99:    106 188 66 
stack 100:    147 271 167 
stack 101:    62 
stack 102:    212 58 283 
stack 103:    159 158 39 
stack 104:    64 175 230 
stack 105:    166 201 258 
stack 106:    199 218 285 
stack 107:    113 137 29 
stack 108:    35 282 238 
stack 109:    134 33 184 
stack 110:    41 246 49 
stack 111:    172 
stack 112:    34 80 274 
stack 113:    187 
stack 114:    15 78 192 
stack 115:    108 
stack 116:    99 203 181 
stack 117:    55 247 251 
stack 118:    269 273 79 
stack 119:    119 

#####################################################

solved with: ThreeIndex Formulation
time to solve: 300.31 s (time limit exceeded)
objective value: 201.0 (not optimal)

stacks (top to bottom):
stack   0:    223 152 
stack   1:    109 
stack   2:    248 265 226 
stack   3:    139 
stack   4:    237 
stack   5:    17 106 211 
stack   6:    153 163 133 
stack   7:    54 
stack   8:    33 263 79 
stack   9:    125 252 280 
stack  10:    232 58 75 
stack  11:    275 199 63 
stack  12:    22 6 270 
stack  13:    253 74 101 
stack  14:    123 42 279 
stack  15:    130 136 39 
stack  16:    191 141 
stack  17:    182 31 23 
stack  18:    173 276 
stack  19:    88 15 291 
stack  20:    120 228 198 
stack  21:    296 294 234 
stack  22:    287 7 165 
stack  23:    55 194 
stack  24:    41 246 87 
stack  25:    59 206 70 
stack  26:    286 255 281 
stack  27:    40 68 214 
stack  28:    180 131 174 
stack  29:    8 94 107 
stack  30:    299 0 140 
stack  31:    144 274 
stack  32:    85 
stack  33:    67 
stack  34:    215 62 
stack  35:    98 50 245 
stack  36:    166 156 190 
stack  37:    196 118 210 
stack  38:    46 147 78 
stack  39:    10 179 155 
stack  40:    116 73 176 
stack  41:    221 267 240 
stack  42:    161 222 135 
stack  43:    257 1 35 
stack  44:    26 
stack  45:    117 229 167 
stack  46:    172 
stack  47:    200 3 243 
stack  48:    193 272 45 
stack  49:    56 218 251 
stack  50:    260 80 278 
stack  51:    149 177 121 
stack  52:    44 175 27 
stack  53:    207 
stack  54:    241 21 244 
stack  55:    100 89 181 
stack  56:    105 137 82 
stack  57:    110 69 36 
stack  58:    282 37 83 
stack  59:    204 76 189 
stack  60:    236 195 297 
stack  61:    60 148 
stack  62:    235 34 51 
stack  63:    19 269 97 
stack  64:    247 171 13 
stack  65:    11 150 233 
stack  66:    170 20 43 
stack  67:    187 
stack  68:    86 205 217 
stack  69:    90 
stack  70:    159 91 
stack  71:    261 
stack  72:    168 49 
stack  73:    95 
stack  74:    290 57 
stack  75:    224 102 154 
stack  76:    264 239 
stack  77:    254 216 192 
stack  78:    108 
stack  79:    178 271 
stack  80:    28 132 268 
stack  81:    64 112 
stack  82:    209 285 162 
stack  83:    284 
stack  84:    129 184 293 
stack  85:    231 99 164 
stack  86:    93 2 295 
stack  87:    53 
stack  88:    48 249 
stack  89:    262 227 202 
stack  90:    142 104 72 
stack  91:    208 160 12 
stack  92:    219 186 238 
stack  93:    242 29 
stack  94:    169 30 185 
stack  95:    84 203 157 
stack  96:    16 
stack  97:    250 277 38 
stack  98:    126 32 
stack  99:    134 188 151 
stack 100:    146 
stack 101:    258 220 128 
stack 102:    212 283 145 
stack 103:    256 197 292 
stack 104:    288 
stack 105:    230 103 124 
stack 106:    201 4 96 
stack 107:    127 158 77 
stack 108:    24 298 
stack 109:    25 114 213 
stack 110:    61 273 52 
stack 111:    9 71 66 
stack 112:    81 18 
stack 113:    266 138 115 
stack 114:    14 65 259 
stack 115:    143 122 183 
stack 116:    289 
stack 117:    5 113 111 
stack 118:    225 47 92 
stack 119:    119 

#####################################################

solved with: Constructive Permutation Heuristic (3cap)
time to solve: 1.01 s
objective value: 1446.0

stacks (top to bottom):
stack   0:    261 12 
stack   1:    85 133 
stack   2:    108 233 
stack   3:    60 148 165 
stack   4:    223 152 
stack   5:    237 185 
stack   6:    90 97 
stack   7:    215 62 
stack   8:    172 291 
stack   9:    246 283 280 
stack  10:    24 49 
stack  11:    247 244 245 
stack  12:    144 67 
stack  13:    254 15 13 
stack  14:    255 40 39 
stack  15:    258 50 51 
stack  16:    259 68 66 
stack  17:    265 69 70 
stack  18:    266 76 75 
stack  19:    271 78 77 
stack  20:    272 92 91 
stack  21:    4 186 107 
stack  22:    5 114 112 
stack  23:    19 125 124 
stack  24:    20 136 135 
stack  25:    41 142 140 
stack  26:    42 154 155 
stack  27:    47 156 157 
stack  28:    48 182 181 
stack  29:    58 199 198 
stack  30:    59 216 210 
stack  31:    64 217 211 
stack  32:    65 235 234 
stack  33:    93 269 270 
stack  34:    94 275 276 
stack  35:    132 282 279 
stack  36:    22 14 63 
stack  37:    25 23 
stack  38:    134 80 79 
stack  39:    84 83 
stack  40:    151 113 111 
stack  41:    153 120 121 
stack  42:    160 147 145 
stack  43:    130 168 167 
stack  44:    161 177 176 
stack  45:    173 188 189 
stack  46:    175 218 213 
stack  47:    200 240 238 
stack  48:    201 250 251 
stack  49:    220 273 274 
stack  50:    221 277 278 
stack  51:    225 285 281 
stack  52:    226 294 293 
stack  53:    212 26 
stack  54:    252 28 27 
stack  55:    253 30 29 
stack  56:    256 37 38 
stack  57:    257 71 72 
stack  58:    116 115 
stack  59:    178 179 
stack  60:    191 190 
stack  61:    263 195 194 
stack  62:    264 219 214 
stack  63:    260 242 243 
stack  64:    290 292 
stack  65:    88 95 
stack  66:    209 109 
stack  67:    110 288 
stack  68:    169 129 128 
stack  69:    286 143 141 
stack  70:    180 146 
stack  71:    241 239 
stack  72:    299 297 
stack  73:    287 35 36 
stack  74:    81 82 
stack  75:    61 89 298 
stack  76:    98 96 
stack  77:    236 139 
stack  78:    11 170 174 
stack  79:    126 267 268 
stack  80:    17 18 
stack  81:    296 295 
stack  82:    55 52 
stack  83:    248 249 
stack  84:    86 87 
stack  85:    16 
stack  86:    53 
stack  87:    54 
stack  88:    119 
stack  89:    187 
stack  90:    284 
stack  91:    207 
stack  92:    289 
stack  93:    127 166 164 
stack  94:    131 193 192 
stack  95:    149 1 0 
stack  96:    150 3 2 
stack  97:    171 7 6 
stack  98:    204 9 8 
stack  99:    205 32 31 
stack 100:    231 34 33 
stack 101:    232 44 43 
stack 102:    262 46 45 
stack 103:    10 57 56 
stack 104:    158 74 73 
stack 105:    159 100 99 
stack 106:    21 102 101 
stack 107:    104 103 
stack 108:    106 105 
stack 109:    118 117 
stack 110:    123 122 
stack 111:    138 137 
stack 112:    163 162 
stack 113:    184 183 
stack 114:    197 196 
stack 115:    203 202 
stack 116:    208 206 
stack 117:    224 222 
stack 118:    228 227 
stack 119:    230 229 

#####################################################

solved with: Constructive Recursion Heuristic (3cap)
time to solve: 0.08 s
objective value: 1310.0

stacks (top to bottom):
stack   0:    180 146 77 
stack   1:    5 4 13 
stack   2:    11 10 15 
stack   3:    19 20 37 
stack   4:    22 21 38 
stack   5:    41 42 69 
stack   6:    59 58 70 
stack   7:    60 61 71 
stack   8:    64 65 72 
stack   9:    93 94 78 
stack  10:    127 126 79 
stack  11:    130 131 80 
stack  12:    134 132 89 
stack  13:    149 150 111 
stack  14:    153 151 113 
stack  15:    159 158 120 
stack  16:    161 160 121 
stack  17:    169 171 124 
stack  18:    253 252 125 
stack  19:    260 262 145 
stack  20:    264 263 147 
stack  21:    287 286 154 
stack  22:    81 82 238 
stack  23:    173 175 155 
stack  24:    200 201 156 
stack  25:    221 220 157 
stack  26:    225 226 164 
stack  27:    232 231 166 
stack  28:    48 47 198 
stack  29:    170 174 245 
stack  30:    129 128 280 
stack  31:    296 295 278 
stack  32:    116 115 276 
stack  33:    204 205 199 
stack  34:    257 256 213 
stack  35:    0 1 214 
stack  36:    2 3 218 
stack  37:    6 7 219 
stack  38:    8 9 234 
stack  39:    31 32 235 
stack  40:    33 34 240 
stack  41:    43 44 244 
stack  42:    45 46 267 
stack  43:    56 57 268 
stack  44:    73 74 273 
stack  45:    99 100 274 
stack  46:    101 102 275 
stack  47:    103 104 277 
stack  48:    105 106 279 
stack  49:    117 118 282 
stack  50:    122 123 283 
stack  51:    137 138 298 
stack  52:    215 62 63 
stack  53:    178 177 12 
stack  54:    248 247 18 
stack  55:    290 285 27 
stack  56:    242 246 28 
stack  57:    86 87 49 
stack  58:    236 90 97 
stack  59:    50 68 51 
stack  60:    98 136 140 
stack  61:    85 133 
stack  62:    209 196 194 
stack  63:    228 229 66 
stack  64:    55 40 39 
stack  65:    217 222 107 
stack  66:    223 152 
stack  67:    212 26 
stack  68:    76 255 75 
stack  69:    17 241 243 
stack  70:    184 258 112 
stack  71:    142 183 141 
stack  72:    92 216 96 
stack  73:    14 294 292 
stack  74:    193 143 190 
stack  75:    88 95 
stack  76:    254 162 251 
stack  77:    299 271 270 
stack  78:    197 202 52 
stack  79:    168 30 29 
stack  80:    250 249 233 
stack  81:    203 206 181 
stack  82:    148 165 
stack  83:    191 189 
stack  84:    114 272 135 
stack  85:    266 269 185 
stack  86:    195 192 83 
stack  87:    110 288 
stack  88:    84 182 179 
stack  89:    172 291 
stack  90:    25 163 167 
stack  91:    259 265 211 
stack  92:    208 230 210 
stack  93:    144 67 
stack  94:    35 36 
stack  95:    224 227 91 
stack  96:    186 188 297 
stack  97:    16 
stack  98:    24 
stack  99:    53 
stack 100:    54 
stack 101:    119 
stack 102:    139 
stack 103:    187 
stack 104:    207 
stack 105:    261 
stack 106:    284 
stack 107:    289 
stack 108:    109 
stack 109:    237 
stack 110:    108 
stack 111:    293 
stack 112:    176 
stack 113:    281 
stack 114:    23 
stack 115:    239 
stack 116:    
stack 117:    
stack 118:    
stack 119:    
