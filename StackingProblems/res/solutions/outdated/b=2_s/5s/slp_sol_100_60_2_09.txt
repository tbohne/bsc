solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 4.72 s
objective value: 2210.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    3 2 
stack  3:    
stack  4:    4 
stack  5:    5 
stack  6:    
stack  7:    7 6 
stack  8:    10 
stack  9:    9 
stack 10:    8 
stack 11:    11 12 
stack 12:    
stack 13:    13 
stack 14:    14 
stack 15:    15 
stack 16:    16 
stack 17:    19 17 
stack 18:    18 
stack 19:    21 
stack 20:    20 
stack 21:    24 70 
stack 22:    23 22 
stack 23:    59 60 
stack 24:    83 30 
stack 25:    95 25 
stack 26:    26 87 
stack 27:    27 28 
stack 28:    51 81 
stack 29:    29 33 
stack 30:    53 97 
stack 31:    31 63 
stack 32:    72 32 
stack 33:    43 38 
stack 34:    65 34 
stack 35:    39 35 
stack 36:    90 36 
stack 37:    75 37 
stack 38:    54 48 
stack 39:    47 42 
stack 40:    76 40 
stack 41:    67 41 
stack 42:    80 79 
stack 43:    57 88 
stack 44:    44 73 
stack 45:    82 45 
stack 46:    84 46 
stack 47:    66 92 
stack 48:    78 93 
stack 49:    49 71 
stack 50:    85 50 
stack 51:    62 52 
stack 52:    96 86 
stack 53:    91 69 
stack 54:    55 58 
stack 55:    89 74 
stack 56:    64 56 
stack 57:    98 94 
stack 58:    68 77 
stack 59:    99 61 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 1.03 s
objective value: 2210.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    3 2 
stack  3:    
stack  4:    4 
stack  5:    5 
stack  6:    
stack  7:    7 6 
stack  8:    10 
stack  9:    9 
stack 10:    8 
stack 11:    11 
stack 12:    
stack 13:    12 13 
stack 14:    14 
stack 15:    15 
stack 16:    16 
stack 17:    19 17 
stack 18:    18 
stack 19:    21 
stack 20:    20 
stack 21:    72 24 
stack 22:    23 22 
stack 23:    27 55 
stack 24:    26 25 
stack 25:    95 30 
stack 26:    61 39 
stack 27:    68 40 
stack 28:    67 28 
stack 29:    29 34 
stack 30:    32 38 
stack 31:    31 33 
stack 32:    59 56 
stack 33:    94 46 
stack 34:    43 35 
stack 35:    36 42 
stack 36:    49 92 
stack 37:    47 37 
stack 38:    58 60 
stack 39:    62 41 
stack 40:    69 93 
stack 41:    96 83 
stack 42:    65 45 
stack 43:    99 90 
stack 44:    44 52 
stack 45:    77 48 
stack 46:    89 97 
stack 47:    51 81 
stack 48:    91 53 
stack 49:    54 78 
stack 50:    85 50 
stack 51:    73 71 
stack 52:    66 86 
stack 53:    74 70 
stack 54:    80 84 
stack 55:    82 87 
stack 56:    76 64 
stack 57:    98 57 
stack 58:    79 63 
stack 59:    75 88 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 5 s
time to solve: 0.01 s
objective value: 2254.0

stacks (top to bottom):
stack  0:    
stack  1:    1 8 
stack  2:    3 4 
stack  3:    
stack  4:    0 2 
stack  5:    7 5 
stack  6:    
stack  7:    9 6 
stack  8:    
stack  9:    
stack 10:    
stack 11:    11 13 
stack 12:    
stack 13:    
stack 14:    98 14 
stack 15:    10 12 
stack 16:    67 15 
stack 17:    18 16 
stack 18:    19 17 
stack 19:    
stack 20:    20 22 
stack 21:    
stack 22:    23 24 
stack 23:    61 63 
stack 24:    21 25 
stack 25:    27 26 
stack 26:    30 32 
stack 27:    74 73 
stack 28:    29 28 
stack 29:    49 41 
stack 30:    31 33 
stack 31:    66 65 
stack 32:    57 56 
stack 33:    37 34 
stack 34:    91 88 
stack 35:    39 35 
stack 36:    36 42 
stack 37:    51 47 
stack 38:    43 38 
stack 39:    40 46 
stack 40:    72 71 
stack 41:    78 84 
stack 42:    53 48 
stack 43:    76 77 
stack 44:    44 45 
stack 45:    69 70 
stack 46:    55 52 
stack 47:    90 89 
stack 48:    95 93 
stack 49:    54 50 
stack 50:    96 97 
stack 51:    68 64 
stack 52:    99 81 
stack 53:    86 87 
stack 54:    82 79 
stack 55:    80 75 
stack 56:    62 59 
stack 57:    83 85 
stack 58:    58 60 
stack 59:    94 92 
