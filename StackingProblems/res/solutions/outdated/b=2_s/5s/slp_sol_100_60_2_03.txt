solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 3.76 s
objective value: 2211.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    
stack  5:    6 4 
stack  6:    5 
stack  7:    7 
stack  8:    8 9 
stack  9:    
stack 10:    10 
stack 11:    11 12 
stack 12:    
stack 13:    
stack 14:    14 13 
stack 15:    
stack 16:    16 
stack 17:    18 15 
stack 18:    17 
stack 19:    20 19 
stack 20:    81 
stack 21:    21 38 
stack 22:    54 22 
stack 23:    35 23 
stack 24:    72 24 
stack 25:    25 26 
stack 26:    58 65 
stack 27:    28 27 
stack 28:    64 29 
stack 29:    34 52 
stack 30:    30 89 
stack 31:    31 48 
stack 32:    98 32 
stack 33:    33 94 
stack 34:    50 73 
stack 35:    36 69 
stack 36:    55 37 
stack 37:    42 46 
stack 38:    39 91 
stack 39:    97 87 
stack 40:    40 88 
stack 41:    41 84 
stack 42:    76 43 
stack 43:    95 66 
stack 44:    85 44 
stack 45:    45 51 
stack 46:    47 74 
stack 47:    99 86 
stack 48:    68 49 
stack 49:    62 78 
stack 50:    93 63 
stack 51:    61 90 
stack 52:    53 57 
stack 53:    75 92 
stack 54:    79 59 
stack 55:    70 71 
stack 56:    56 80 
stack 57:    77 60 
stack 58:    83 67 
stack 59:    82 96 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 1.05 s
objective value: 2211.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    4 3 
stack  4:    
stack  5:    
stack  6:    6 
stack  7:    5 7 
stack  8:    8 9 
stack  9:    
stack 10:    10 
stack 11:    11 12 
stack 12:    13 
stack 13:    
stack 14:    14 
stack 15:    
stack 16:    16 
stack 17:    18 15 
stack 18:    17 
stack 19:    20 19 
stack 20:    92 
stack 21:    62 21 
stack 22:    30 22 
stack 23:    95 23 
stack 24:    27 24 
stack 25:    25 26 
stack 26:    39 31 
stack 27:    40 28 
stack 28:    37 29 
stack 29:    83 32 
stack 30:    41 42 
stack 31:    34 53 
stack 32:    36 82 
stack 33:    33 57 
stack 34:    35 44 
stack 35:    84 46 
stack 36:    45 88 
stack 37:    38 67 
stack 38:    98 52 
stack 39:    65 59 
stack 40:    68 90 
stack 41:    79 80 
stack 42:    43 66 
stack 43:    85 48 
stack 44:    49 63 
stack 45:    72 51 
stack 46:    47 89 
stack 47:    81 61 
stack 48:    93 97 
stack 49:    50 74 
stack 50:    54 73 
stack 51:    76 71 
stack 52:    56 91 
stack 53:    75 96 
stack 54:    55 70 
stack 55:    69 86 
stack 56:    58 78 
stack 57:    77 60 
stack 58:    99 64 
stack 59:    94 87 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 5 s
time to solve: 0.02 s
objective value: 2262.0

stacks (top to bottom):
stack  0:    
stack  1:    
stack  2:    
stack  3:    2 3 
stack  4:    
stack  5:    
stack  6:    5 4 
stack  7:    6 7 
stack  8:    8 9 
stack  9:    
stack 10:    0 96 
stack 11:    11 10 
stack 12:    
stack 13:    
stack 14:    12 13 
stack 15:    
stack 16:    14 16 
stack 17:    18 15 
stack 18:    
stack 19:    20 17 
stack 20:    1 98 
stack 21:    21 19 
stack 22:    25 22 
stack 23:    28 23 
stack 24:    45 39 
stack 25:    26 24 
stack 26:    35 31 
stack 27:    27 29 
stack 28:    99 92 
stack 29:    30 32 
stack 30:    54 49 
stack 31:    41 34 
stack 32:    65 64 
stack 33:    40 33 
stack 34:    97 95 
stack 35:    36 37 
stack 36:    73 74 
stack 37:    68 67 
stack 38:    38 43 
stack 39:    76 66 
stack 40:    44 48 
stack 41:    93 94 
stack 42:    42 46 
stack 43:    77 84 
stack 44:    79 80 
stack 45:    50 47 
stack 46:    83 87 
stack 47:    86 90 
stack 48:    55 52 
stack 49:    53 51 
stack 50:    60 57 
stack 51:    69 71 
stack 52:    58 56 
stack 53:    59 61 
stack 54:    75 78 
stack 55:    88 91 
stack 56:    85 89 
stack 57:    82 81 
stack 58:    62 63 
stack 59:    72 70 
