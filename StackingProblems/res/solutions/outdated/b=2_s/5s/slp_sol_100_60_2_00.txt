solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 2.96 s
objective value: 2212.0

stacks (top to bottom):
stack  0:    1 
stack  1:    2 0 
stack  2:    
stack  3:    3 
stack  4:    4 
stack  5:    5 
stack  6:    
stack  7:    6 
stack  8:    7 8 
stack  9:    9 
stack 10:    10 
stack 11:    12 
stack 12:    11 
stack 13:    
stack 14:    13 14 
stack 15:    15 
stack 16:    
stack 17:    17 
stack 18:    16 19 
stack 19:    18 
stack 20:    91 20 
stack 21:    59 21 
stack 22:    22 94 
stack 23:    23 65 
stack 24:    24 43 
stack 25:    27 25 
stack 26:    82 26 
stack 27:    97 57 
stack 28:    76 28 
stack 29:    71 29 
stack 30:    30 84 
stack 31:    32 31 
stack 32:    48 45 
stack 33:    34 33 
stack 34:    78 35 
stack 35:    53 49 
stack 36:    52 36 
stack 37:    37 80 
stack 38:    38 99 
stack 39:    39 98 
stack 40:    40 74 
stack 41:    89 41 
stack 42:    42 96 
stack 43:    83 75 
stack 44:    44 54 
stack 45:    50 95 
stack 46:    72 46 
stack 47:    47 88 
stack 48:    62 56 
stack 49:    86 67 
stack 50:    64 90 
stack 51:    92 51 
stack 52:    68 60 
stack 53:    85 73 
stack 54:    69 63 
stack 55:    55 66 
stack 56:    58 77 
stack 57:    93 70 
stack 58:    81 87 
stack 59:    79 61 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 1.14 s
objective value: 2212.0

stacks (top to bottom):
stack  0:    1 
stack  1:    2 0 
stack  2:    
stack  3:    3 
stack  4:    4 
stack  5:    5 
stack  6:    
stack  7:    6 
stack  8:    7 8 
stack  9:    9 
stack 10:    10 
stack 11:    12 
stack 12:    11 13 
stack 13:    
stack 14:    14 
stack 15:    15 
stack 16:    
stack 17:    17 
stack 18:    16 19 
stack 19:    18 
stack 20:    72 20 
stack 21:    28 21 
stack 22:    22 65 
stack 23:    23 36 
stack 24:    24 29 
stack 25:    27 25 
stack 26:    54 26 
stack 27:    30 63 
stack 28:    68 44 
stack 29:    75 49 
stack 30:    34 79 
stack 31:    35 31 
stack 32:    32 33 
stack 33:    42 40 
stack 34:    37 45 
stack 35:    38 48 
stack 36:    47 90 
stack 37:    50 77 
stack 38:    39 84 
stack 39:    56 80 
stack 40:    92 82 
stack 41:    83 41 
stack 42:    70 43 
stack 43:    89 53 
stack 44:    87 99 
stack 45:    88 73 
stack 46:    52 46 
stack 47:    94 67 
stack 48:    55 96 
stack 49:    85 97 
stack 50:    98 51 
stack 51:    91 78 
stack 52:    71 57 
stack 53:    69 66 
stack 54:    62 61 
stack 55:    60 74 
stack 56:    93 59 
stack 57:    58 64 
stack 58:    76 95 
stack 59:    86 81 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 5 s
time to solve: 0.11 s
objective value: 2236.0

stacks (top to bottom):
stack  0:    
stack  1:    
stack  2:    1 0 
stack  3:    5 6 
stack  4:    2 3 
stack  5:    7 4 
stack  6:    
stack  7:    
stack  8:    
stack  9:    9 8 
stack 10:    12 10 
stack 11:    
stack 12:    11 13 
stack 13:    
stack 14:    
stack 15:    16 14 
stack 16:    
stack 17:    17 19 
stack 18:    24 21 
stack 19:    15 20 
stack 20:    
stack 21:    22 18 
stack 22:    97 99 
stack 23:    23 26 
stack 24:    64 65 
stack 25:    27 25 
stack 26:    72 73 
stack 27:    30 31 
stack 28:    28 29 
stack 29:    93 95 
stack 30:    37 34 
stack 31:    32 33 
stack 32:    92 94 
stack 33:    86 84 
stack 34:    39 35 
stack 35:    69 71 
stack 36:    38 36 
stack 37:    98 96 
stack 38:    41 43 
stack 39:    44 45 
stack 40:    42 40 
stack 41:    75 74 
stack 42:    50 63 
stack 43:    91 88 
stack 44:    47 46 
stack 45:    59 60 
stack 46:    54 53 
stack 47:    76 77 
stack 48:    48 49 
stack 49:    52 51 
stack 50:    68 70 
stack 51:    81 78 
stack 52:    83 82 
stack 53:    55 57 
stack 54:    80 79 
stack 55:    62 61 
stack 56:    56 58 
stack 57:    89 85 
stack 58:    87 90 
stack 59:    66 67 
