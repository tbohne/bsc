solved with: SP.mip_formulations.BinPackingFormulation
time limit: 3 s
time to solve: 2.97 s
objective value: 3305.0

stacks (top to bottom):
stack  0:    0
stack  1:    3 1
stack  2:    2
stack  3:
stack  4:    4
stack  5:    5 6
stack  6:
stack  7:    8 7
stack  8:
stack  9:    9 10
stack 10:    11 21
stack 11:    71 12 60
stack 12:    64 90 96
stack 13:    13 80 29
stack 14:    15 31 14
stack 15:    25 89 69
stack 16:    16 87 47
stack 17:    17 57 92
stack 18:    18 32 59
stack 19:    20 19 63
stack 20:    26 98 75
stack 21:    27 56 54
stack 22:    24 39 22
stack 23:    30 23 58
stack 24:    95 35 44
stack 25:    93 67 65
stack 26:    28 86 52
stack 27:    79 38 46
stack 28:    76 45 62
stack 29:    42 88 50
stack 30:    70 91 33
stack 31:    68 36 85
stack 32:    73 43 78
stack 33:    48 53 34
stack 34:    84 82 72
stack 35:    74 37 66
stack 36:    51 41 40
stack 37:    99 55 97
stack 38:    49 61 94
stack 39:    83 81 77

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 3 s
time to solve: 3.02 s (time limit exceeded)
objective value: 3787.0 (not optimal)

stacks (top to bottom):
stack  0:    0 52
stack  1:    32 47 1
stack  2:    38 2
stack  3:    17 87 43
stack  4:    58 4
stack  5:    99 39 94
stack  6:    54 37 7
stack  7:    5 78
stack  8:    83 97 66
stack  9:    9 19
stack 10:    11 65 44
stack 11:    10 12
stack 12:    41 80
stack 13:    98 57
stack 14:    8 13 3
stack 15:    86 34 69
stack 16:    15 40 89
stack 17:    53 33 46
stack 18:    18 50
stack 19:    20 74 22
stack 20:    48 61
stack 21:    25 95
stack 22:    51 96
stack 23:    23 16
stack 24:    24 90
stack 25:    76 49 67
stack 26:    73 81 63
stack 27:    26
stack 28:    28 45 29
stack 29:    70 91 92
stack 30:    64 27 75
stack 31:    30 21
stack 32:    56 14 77
stack 33:    85
stack 34:    71 35
stack 35:    42 93 72
stack 36:    88 55 59
stack 37:    84 82 6
stack 38:    31 79 60
stack 39:    68 36 62

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapPermutationHeuristic
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.deprecated.ThreeCapRecursiveMCMHeuristic
time limit: 3 s
time to solve: 0.01 s
objective value: 4233.0

stacks (top to bottom):
stack  0:    30 15 13
stack  1:    9 42 39
stack  2:    71 76 21
stack  3:    17 75 78
stack  4:    28 25 95
stack  5:    68 36 60
stack  6:    22 63 66
stack  7:    51 50 69
stack  8:    11 14 82
stack  9:    24 31 23
stack 10:    20 19 1
stack 11:    26 18 16
stack 12:    8 74 73
stack 13:    0 48 46
stack 14:    5 3 97
stack 15:    56 55 80
stack 16:    10 12 86
stack 17:    93 41 40
stack 18:    84 49 52
stack 19:    98 32 33
stack 20:    83 53 54
stack 21:    61 35 34
stack 22:    90 87 96
stack 23:    45 44 29
stack 24:    88 70 72
stack 25:    27 64 59
stack 26:    81 6 7
stack 27:    58 57 77
stack 28:    47 43
stack 29:    67 65 62
stack 30:    79 38 37
stack 31:    85 94
stack 32:    91 92
stack 33:    4 2
stack 34:    99 89
stack 35:
stack 36:
stack 37:
stack 38:
stack 39:

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 3 s
time to solve: 0.06 s
objective value: 3354.0

stacks (top to bottom):
stack  0:
stack  1:    18 1
stack  2:
stack  3:
stack  4:    4 2
stack  5:    0 97
stack  6:    5 3
stack  7:    6 7
stack  8:    11 14 72
stack  9:
stack 10:    9 76 95
stack 11:    71 10 12
stack 12:    8 16
stack 13:    15 13 70
stack 14:    36 60
stack 15:    28 25 80
stack 16:    58 57 92
stack 17:    30 17
stack 18:    27 88 29
stack 19:    20 19 73
stack 20:    93 53 54
stack 21:    24 79 21
stack 22:    26 74 22
stack 23:    31 23 75
stack 24:    83 35 34
stack 25:    68 85 69
stack 26:    64 96 59
stack 27:    90 38 37
stack 28:    45 44 78
stack 29:    61 62 94
stack 30:    56 55 89
stack 31:    32 33 77
stack 32:    41 40 82
stack 33:    84 49 52
stack 34:    87 47 43
stack 35:    42 99 39
stack 36:    67 86 65
stack 37:    98 63 66
stack 38:    51 91 50
stack 39:    48 81 46
