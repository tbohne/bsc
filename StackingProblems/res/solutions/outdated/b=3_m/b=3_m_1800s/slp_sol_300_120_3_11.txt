solved with: SP.mip_formulations.BinPackingFormulation
time limit: 1800 s
time to solve: 533,97 s
objective value: 26114.0

stacks (top to bottom):
stack   0:
stack   1:    1
stack   2:    0 2
stack   3:    3
stack   4:    4
stack   5:    5 6
stack   6:    7
stack   7:
stack   8:    8
stack   9:    9
stack  10:    10
stack  11:    11
stack  12:    12
stack  13:    13
stack  14:    15
stack  15:    14
stack  16:    16
stack  17:    17
stack  18:    18
stack  19:
stack  20:    19 21
stack  21:    22 20
stack  22:
stack  23:
stack  24:    23 24
stack  25:    26 25
stack  26:
stack  27:    27
stack  28:    28
stack  29:    253
stack  30:    133 29 30
stack  31:    31 255 165
stack  32:    32 298 126
stack  33:    33 93 264
stack  34:    34 270 297
stack  35:    37 35 79
stack  36:    36 282 129
stack  37:    211 242 38
stack  38:    180 226 176
stack  39:    191 39 145
stack  40:    205 184 40
stack  41:    208 225 41
stack  42:    42 134 132
stack  43:    43 219 217
stack  44:    196 44 48
stack  45:    137 45 182
stack  46:    204 241 46
stack  47:    47 201 263
stack  48:    192 198 266
stack  49:    49 50 230
stack  50:    52 287 294
stack  51:    51 289 227
stack  52:    193 260 261
stack  53:    53 257 276
stack  54:    54 288 256
stack  55:    55 140 239
stack  56:    56 199 244
stack  57:    110 57 58
stack  58:    216 171 172
stack  59:    59 213 101
stack  60:    92 60 283
stack  61:    61 97 62
stack  62:    259 273 284
stack  63:    142 63 166
stack  64:    183 64 187
stack  65:    65 152 120
stack  66:    164 67 66
stack  67:    209 103 123
stack  68:    124 296 68
stack  69:    147 69 228
stack  70:    214 117 70
stack  71:    72 71 234
stack  72:    202 150 73
stack  73:    131 170 122
stack  74:    74 146 185
stack  75:    144 75 281
stack  76:    207 76 279
stack  77:    121 119 77
stack  78:    235 84 78
stack  79:    197 141 258
stack  80:    155 292 80
stack  81:    278 163 81
stack  82:    286 233 82
stack  83:    127 160 83
stack  84:    85 231 252
stack  85:    167 86 210
stack  86:    262 179 299
stack  87:    87 175 271
stack  88:    89 88 168
stack  89:    153 223 195
stack  90:    186 91 90
stack  91:    189 190 277
stack  92:    151 118 181
stack  93:    94 237 200
stack  94:    188 250 148
stack  95:    269 95 247
stack  96:    238 203 96
stack  97:    267 98 275
stack  98:    248 136 99
stack  99:    245 254 159
stack 100:    240 274 100
stack 101:    290 222 139
stack 102:    212 220 102
stack 103:    224 272 206
stack 104:    104 138 268
stack 105:    135 169 105
stack 106:    106 291 236
stack 107:    107 173 221
stack 108:    108 293 218
stack 109:    251 295 109
stack 110:    111 149 249
stack 111:    154 157 156
stack 112:    265 112 177
stack 113:    161 128 113
stack 114:    116 114 115
stack 115:    246 130 178
stack 116:    229 243 174
stack 117:    285 232 143
stack 118:    158 280 194
stack 119:    215 125 162

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
Problem not solved.

#####################################################

solved with: SP.constructive_heuristics.ThreeCapHeuristic
time limit: 1800 s
time to solve: 1.01 s
objective value: 26191.0

stacks (top to bottom):
stack   0:
stack   1:
stack   2:    0 2
stack   3:
stack   4:    3 4
stack   5:    5 6
stack   6:    7 1
stack   7:
stack   8:
stack   9:    9 14
stack  10:
stack  11:
stack  12:    10 12
stack  13:    11 299
stack  14:    8 298
stack  15:
stack  16:    13 16
stack  17:    17 20
stack  18:    23 19
stack  19:
stack  20:    18 21
stack  21:    22 15
stack  22:
stack  23:
stack  24:
stack  25:    26 25
stack  26:
stack  27:    27 24
stack  28:
stack  29:    212 31 28
stack  30:    29 30
stack  31:    34 32
stack  32:    42 40
stack  33:    33 216 35
stack  34:    74 230 73
stack  35:    37 218 38
stack  36:    214 36 39
stack  37:    121 119 249
stack  38:    130 129 243
stack  39:    211 47 41
stack  40:    43 44 210
stack  41:    45 220 48
stack  42:    52 51 213
stack  43:    246 95 100
stack  44:    53 226 50
stack  45:    163 274 165
stack  46:    49 219 46
stack  47:    285 167 169
stack  48:    188 291 187
stack  49:    57 60 221
stack  50:    142 267 138
stack  51:    55 54 215
stack  52:    157 156 264
stack  53:    133 131 263
stack  54:    56 231 58
stack  55:    65 223 68
stack  56:    224 59 62
stack  57:    286 194 195
stack  58:    84 241 80
stack  59:    61 222 63
stack  60:    94 242 96
stack  61:    225 70 79
stack  62:    64 217 66
stack  63:    106 105 247
stack  64:    116 255 120
stack  65:    235 75 76
stack  66:    69 236 67
stack  67:    164 170 271
stack  68:    87 85 258
stack  69:    229 81 83
stack  70:    160 158 280
stack  71:    72 71 227
stack  72:    196 293 199
stack  73:    154 250 148
stack  74:    92 93 234
stack  75:    204 292 200
stack  76:    233 86 77
stack  77:    180 272 177
stack  78:    237 78 82
stack  79:    269 159 166
stack  80:    205 295 203
stack  81:    278 161 162
stack  82:    240 101 102
stack  83:    149 152 256
stack  84:    137 136 266
stack  85:    208 209 297
stack  86:    254 140 143
stack  87:    122 252 123
stack  88:    89 88 239
stack  89:    232 97 99
stack  90:    91 228 90
stack  91:    124 257 126
stack  92:    168 288 173
stack  93:    146 268 145
stack  94:    183 279 182
stack  95:    189 190 277
stack  96:    238 98 103
stack  97:    147 273 150
stack  98:    135 262 134
stack  99:    192 186 290
stack 100:    155 153 276
stack 101:    287 171 172
stack 102:    110 248 112
stack 103:    245 104 107
stack 104:    144 259 141
stack 105:    108 109 244
stack 106:    111 261 115
stack 107:    127 260 125
stack 108:    282 178 181
stack 109:    128 265 132
stack 110:    117 270 118
stack 111:    191 193 289
stack 112:    251 114 113
stack 113:    151 253 139
stack 114:    202 197 296
stack 115:    201 198 294
stack 116:    175 281 174
stack 117:    179 176 275
stack 118:    184 185 283
stack 119:    207 284 206
