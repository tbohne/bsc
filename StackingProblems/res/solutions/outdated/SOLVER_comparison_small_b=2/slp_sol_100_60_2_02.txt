solved with: SP.mip_formulations.BinPackingFormulation
time limit: 30 s
time to solve: 1.36 s
objective value: 102.0

stacks (top to bottom):
stack  0:    92 15 
stack  1:    82 71 
stack  2:    11 
stack  3:    5 
stack  4:    81 
stack  5:    95 98 
stack  6:    44 35 
stack  7:    7 19 
stack  8:    50 90 
stack  9:    65 88 
stack 10:    79 
stack 11:    18 6 
stack 12:    45 25 
stack 13:    55 
stack 14:    80 
stack 15:    2 
stack 16:    54 89 
stack 17:    57 74 
stack 18:    12 83 
stack 19:    56 46 
stack 20:    60 
stack 21:    43 27 
stack 22:    96 21 
stack 23:    62 84 
stack 24:    41 13 
stack 25:    29 53 
stack 26:    9 1 
stack 27:    85 59 
stack 28:    0 
stack 29:    33 31 
stack 30:    78 8 
stack 31:    40 
stack 32:    64 
stack 33:    97 
stack 34:    14 47 
stack 35:    66 
stack 36:    3 49 
stack 37:    17 72 
stack 38:    20 76 
stack 39:    30 23 
stack 40:    86 16 
stack 41:    36 
stack 42:    99 37 
stack 43:    42 
stack 44:    58 39 
stack 45:    93 69 
stack 46:    28 87 
stack 47:    10 34 
stack 48:    70 94 
stack 49:    26 
stack 50:    24 77 
stack 51:    73 52 
stack 52:    32 
stack 53:    48 61 
stack 54:    63 
stack 55:    4 91 
stack 56:    22 
stack 57:    68 38 
stack 58:    75 
stack 59:    67 51 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 30 s
time to solve: 0.97 s
objective value: 102.0

stacks (top to bottom):
stack  0:    92 15 
stack  1:    82 37 
stack  2:    11 
stack  3:    73 20 
stack  4:    81 
stack  5:    13 98 
stack  6:    65 35 
stack  7:    7 72 
stack  8:    93 69 
stack  9:    94 38 
stack 10:    44 33 
stack 11:    90 6 
stack 12:    12 25 
stack 13:    28 64 
stack 14:    97 
stack 15:    80 2 
stack 16:    54 89 
stack 17:    57 74 
stack 18:    32 
stack 19:    43 56 
stack 20:    60 
stack 21:    18 10 
stack 22:    96 21 
stack 23:    62 46 
stack 24:    41 47 
stack 25:    14 49 
stack 26:    9 1 
stack 27:    85 59 
stack 28:    0 
stack 29:    84 8 
stack 30:    67 88 
stack 31:    31 
stack 32:    75 
stack 33:    79 
stack 34:    24 39 
stack 35:    66 
stack 36:    55 
stack 37:    5 
stack 38:    68 3 
stack 39:    30 23 
stack 40:    86 16 
stack 41:    36 
stack 42:    42 
stack 43:    19 
stack 44:    58 83 
stack 45:    48 51 
stack 46:    95 71 
stack 47:    4 76 
stack 48:    70 87 
stack 49:    26 
stack 50:    99 
stack 51:    52 34 
stack 52:    40 
stack 53:    53 61 
stack 54:    63 
stack 55:    77 91 
stack 56:    22 
stack 57:    50 27 
stack 58:    78 45 
stack 59:    29 17 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 30 s
time to solve: 0.02 s
objective value: 426.0

stacks (top to bottom):
stack  0:    26 2 
stack  1:    7 3 
stack  2:    42 6 
stack  3:    9 10 
stack  4:    12 13 
stack  5:    4 1 
stack  6:    78 8 
stack  7:    11 63 
stack  8:    14 15 
stack  9:    98 16 
stack 10:    20 19 
stack 11:    18 17 
stack 12:    24 21 
stack 13:    22 74 
stack 14:    60 23 
stack 15:    29 25 
stack 16:    30 27 
stack 17:    44 39 
stack 18:    33 31 
stack 19:    79 34 
stack 20:    28 94 
stack 21:    43 38 
stack 22:    41 35 
stack 23:    53 52 
stack 24:    99 37 
stack 25:    40 46 
stack 26:    48 45 
stack 27:    47 49 
stack 28:    50 51 
stack 29:    54 56 
stack 30:    65 67 
stack 31:    59 61 
stack 32:    62 64 
stack 33:    57 58 
stack 34:    68 69 
stack 35:    82 83 
stack 36:    70 71 
stack 37:    73 72 
stack 38:    77 76 
stack 39:    86 87 
stack 40:    96 91 
stack 41:    93 89 
stack 42:    85 84 
stack 43:    92 88 
stack 44:    97 
stack 45:    95 90 
stack 46:    0 
stack 47:    36 
stack 48:    55 
stack 49:    
stack 50:    
stack 51:    
stack 52:    32 
stack 53:    5 
stack 54:    80 
stack 55:    81 
stack 56:    66 
stack 57:    
stack 58:    75 
stack 59:    
