solved with: SP.mip_formulations.BinPackingFormulation
time limit: 30 s
time to solve: 4.71 s
objective value: 100.0

stacks (top to bottom):
stack  0:    31 
stack  1:    58 
stack  2:    35 3 
stack  3:    54 
stack  4:    37 44 
stack  5:    19 29 
stack  6:    67 
stack  7:    59 
stack  8:    8 74 
stack  9:    41 
stack 10:    1 72 
stack 11:    18 5 
stack 12:    25 
stack 13:    63 
stack 14:    26 
stack 15:    64 
stack 16:    60 91 
stack 17:    48 75 
stack 18:    4 70 
stack 19:    66 39 
stack 20:    77 14 
stack 21:    50 73 
stack 22:    79 92 
stack 23:    84 23 
stack 24:    13 62 
stack 25:    2 
stack 26:    45 42 
stack 27:    30 
stack 28:    36 93 
stack 29:    81 10 
stack 30:    33 
stack 31:    27 6 
stack 32:    88 57 
stack 33:    61 96 
stack 34:    52 68 
stack 35:    46 15 
stack 36:    99 65 
stack 37:    34 
stack 38:    22 12 
stack 39:    38 95 
stack 40:    43 87 
stack 41:    0 86 
stack 42:    89 47 
stack 43:    40 32 
stack 44:    71 80 
stack 45:    82 78 
stack 46:    90 
stack 47:    20 17 
stack 48:    56 7 
stack 49:    85 
stack 50:    97 
stack 51:    53 
stack 52:    28 24 
stack 53:    11 16 
stack 54:    55 98 
stack 55:    83 49 
stack 56:    51 21 
stack 57:    76 9 
stack 58:    69 
stack 59:    94 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 30 s
time to solve: 4.76 s
objective value: 100.0

stacks (top to bottom):
stack  0:    33 
stack  1:    58 
stack  2:    35 3 
stack  3:    55 22 
stack  4:    31 
stack  5:    19 29 
stack  6:    10 20 
stack  7:    98 17 
stack  8:    8 12 
stack  9:    41 
stack 10:    1 32 
stack 11:    18 5 
stack 12:    59 
stack 13:    63 
stack 14:    36 57 
stack 15:    64 
stack 16:    60 91 
stack 17:    83 72 
stack 18:    4 70 
stack 19:    66 44 
stack 20:    37 
stack 21:    50 73 
stack 22:    79 92 
stack 23:    90 
stack 24:    13 62 
stack 25:    2 
stack 26:    45 42 
stack 27:    30 
stack 28:    84 93 
stack 29:    81 14 
stack 30:    67 
stack 31:    27 6 
stack 32:    88 96 
stack 33:    25 
stack 34:    52 68 
stack 35:    15 
stack 36:    99 65 
stack 37:    46 34 
stack 38:    26 
stack 39:    38 95 
stack 40:    43 87 
stack 41:    75 86 
stack 42:    89 47 
stack 43:    40 77 
stack 44:    71 80 
stack 45:    82 78 
stack 46:    0 85 
stack 47:    54 
stack 48:    56 7 
stack 49:    48 74 
stack 50:    97 
stack 51:    53 
stack 52:    28 24 
stack 53:    11 16 
stack 54:    61 39 
stack 55:    23 49 
stack 56:    51 21 
stack 57:    76 9 
stack 58:    69 
stack 59:    94 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 30 s
time to solve: 0.01 s
objective value: 465.0

stacks (top to bottom):
stack  0:    0 3 
stack  1:    13 2 
stack  2:    1 92 
stack  3:    56 7 
stack  4:    4 15 
stack  5:    5 12 
stack  6:    10 9 
stack  7:    11 16 
stack  8:    8 6 
stack  9:    90 17 
stack 10:    19 96 
stack 11:    18 14 
stack 12:    22 20 
stack 13:    31 21 
stack 14:    36 25 
stack 15:    28 24 
stack 16:    40 34 
stack 17:    26 39 
stack 18:    27 32 
stack 19:    37 44 
stack 20:    30 23 
stack 21:    45 47 
stack 22:    35 29 
stack 23:    38 57 
stack 24:    41 51 
stack 25:    52 68 
stack 26:    50 73 
stack 27:    43 42 
stack 28:    48 65 
stack 29:    53 46 
stack 30:    55 74 
stack 31:    58 49 
stack 32:    60 64 
stack 33:    61 78 
stack 34:    62 91 
stack 35:    66 70 
stack 36:    76 97 
stack 37:    63 94 
stack 38:    72 80 
stack 39:    77 98 
stack 40:    75 71 
stack 41:    83 89 
stack 42:    79 81 
stack 43:    84 85 
stack 44:    88 86 
stack 45:    82 95 
stack 46:    93 87 
stack 47:    54 
stack 48:    59 
stack 49:    
stack 50:    67 
stack 51:    
stack 52:    
stack 53:    99 
stack 54:    69 
stack 55:    
stack 56:    
stack 57:    
stack 58:    
stack 59:    33 
