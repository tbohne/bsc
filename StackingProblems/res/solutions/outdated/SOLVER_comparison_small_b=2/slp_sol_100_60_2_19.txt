solved with: SP.mip_formulations.BinPackingFormulation
time limit: 30 s
time to solve: 19.22 s
objective value: 105.0

stacks (top to bottom):
stack  0:    20 
stack  1:    32 38 
stack  2:    42 
stack  3:    14 87 
stack  4:    98 
stack  5:    13 86 
stack  6:    81 45 
stack  7:    33 4 
stack  8:    34 
stack  9:    6 
stack 10:    27 62 
stack 11:    0 
stack 12:    28 22 
stack 13:    5 77 
stack 14:    23 
stack 15:    7 54 
stack 16:    68 71 
stack 17:    74 10 
stack 18:    78 41 
stack 19:    60 63 
stack 20:    99 90 
stack 21:    44 
stack 22:    21 18 
stack 23:    53 89 
stack 24:    12 
stack 25:    39 31 
stack 26:    35 51 
stack 27:    9 50 
stack 28:    76 2 
stack 29:    92 94 
stack 30:    93 80 
stack 31:    40 30 
stack 32:    17 
stack 33:    67 56 
stack 34:    57 
stack 35:    72 70 
stack 36:    8 46 
stack 37:    64 
stack 38:    55 
stack 39:    47 3 
stack 40:    79 1 
stack 41:    29 
stack 42:    65 85 
stack 43:    43 
stack 44:    83 36 
stack 45:    24 52 
stack 46:    49 66 
stack 47:    37 48 
stack 48:    59 25 
stack 49:    75 15 
stack 50:    96 69 
stack 51:    16 82 
stack 52:    84 
stack 53:    61 19 
stack 54:    91 88 
stack 55:    95 
stack 56:    58 
stack 57:    73 26 
stack 58:    11 
stack 59:    97 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 30 s
time to solve: 13.12 s
objective value: 105.0

stacks (top to bottom):
stack  0:    20 
stack  1:    32 38 
stack  2:    79 45 
stack  3:    59 87 
stack  4:    98 
stack  5:    13 86 
stack  6:    6 
stack  7:    42 
stack  8:    34 
stack  9:    5 71 
stack 10:    27 62 
stack 11:    0 
stack 12:    28 22 
stack 13:    84 
stack 14:    23 
stack 15:    14 54 
stack 16:    88 33 
stack 17:    74 10 
stack 18:    78 41 
stack 19:    91 48 
stack 20:    99 90 
stack 21:    44 
stack 22:    53 18 
stack 23:    49 89 
stack 24:    12 
stack 25:    39 31 
stack 26:    51 77 
stack 27:    9 50 
stack 28:    76 7 
stack 29:    92 94 
stack 30:    93 4 
stack 31:    21 30 
stack 32:    17 
stack 33:    73 67 
stack 34:    8 
stack 35:    72 70 
stack 36:    57 46 
stack 37:    64 
stack 38:    81 63 
stack 39:    47 52 
stack 40:    3 1 
stack 41:    29 
stack 42:    60 85 
stack 43:    43 
stack 44:    83 36 
stack 45:    55 
stack 46:    68 66 
stack 47:    65 37 
stack 48:    35 80 
stack 49:    75 15 
stack 50:    96 69 
stack 51:    16 82 
stack 52:    25 26 
stack 53:    61 19 
stack 54:    40 24 
stack 55:    95 
stack 56:    58 
stack 57:    97 
stack 58:    11 
stack 59:    2 56 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 30 s
time to solve: 0.00 s
objective value: 465.0

stacks (top to bottom):
stack  0:    93 2 
stack  1:    9 50 
stack  2:    7 15 
stack  3:    4 3 
stack  4:    19 6 
stack  5:    47 1 
stack  6:    11 26 
stack  7:    14 22 
stack  8:    5 10 
stack  9:    61 12 
stack 10:    8 43 
stack 11:    24 25 
stack 12:    16 13 
stack 13:    21 18 
stack 14:    96 20 
stack 15:    27 36 
stack 16:    28 31 
stack 17:    39 37 
stack 18:    92 38 
stack 19:    40 30 
stack 20:    49 41 
stack 21:    32 42 
stack 22:    68 44 
stack 23:    35 33 
stack 24:    51 45 
stack 25:    52 48 
stack 26:    59 56 
stack 27:    53 54 
stack 28:    60 62 
stack 29:    57 46 
stack 30:    66 67 
stack 31:    65 63 
stack 32:    74 73 
stack 33:    71 70 
stack 34:    75 77 
stack 35:    72 69 
stack 36:    81 82 
stack 37:    76 79 
stack 38:    78 80 
stack 39:    83 85 
stack 40:    87 86 
stack 41:    91 94 
stack 42:    0 
stack 43:    88 89 
stack 44:    99 90 
stack 45:    34 
stack 46:    17 
stack 47:    64 
stack 48:    
stack 49:    
stack 50:    
stack 51:    29 
stack 52:    84 
stack 53:    98 
stack 54:    23 
stack 55:    95 
stack 56:    58 
stack 57:    97 
stack 58:    
stack 59:    55 
