solved with: SP.mip_formulations.BinPackingFormulation
time limit: 3 s
time to solve: 3.06 s (time limit exceeded)
objective value: 2254.0 (not optimal)

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    4 
stack  5:    5 
stack  6:    6 
stack  7:    7 
stack  8:    8 
stack  9:    9 
stack 10:    10 
stack 11:    12 
stack 12:    11 
stack 13:    14 
stack 14:    13 
stack 15:    15 
stack 16:    37 
stack 17:    16 17 
stack 18:    18 42 
stack 19:    19 
stack 20:    20 
stack 21:    97 
stack 22:    21 24 
stack 23:    22 23 
stack 24:    38 30 
stack 25:    61 47 
stack 26:    33 26 
stack 27:    27 87 
stack 28:    31 28 
stack 29:    25 29 
stack 30:    76 96 
stack 31:    81 52 
stack 32:    36 69 
stack 33:    32 86 
stack 34:    55 74 
stack 35:    39 82 
stack 36:    80 62 
stack 37:    72 34 
stack 38:    65 41 
stack 39:    67 48 
stack 40:    92 35 
stack 41:    49 78 
stack 42:    51 40 
stack 43:    88 85 
stack 44:    73 45 
stack 45:    44 43 
stack 46:    79 50 
stack 47:    68 46 
stack 48:    77 64 
stack 49:    94 59 
stack 50:    71 57 
stack 51:    53 60 
stack 52:    63 93 
stack 53:    54 91 
stack 54:    75 66 
stack 55:    98 84 
stack 56:    56 70 
stack 57:    90 58 
stack 58:    99 83 
stack 59:    89 95 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 3 s
time to solve: 1.09 s
objective value: 2204.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    4 
stack  5:    5 
stack  6:    6 
stack  7:    7 
stack  8:    8 
stack  9:    9 
stack 10:    10 
stack 11:    11 
stack 12:    
stack 13:    12 13 
stack 14:    
stack 15:    15 
stack 16:    14 
stack 17:    16 17 
stack 18:    18 
stack 19:    19 
stack 20:    22 20 
stack 21:    21 46 
stack 22:    30 24 
stack 23:    23 28 
stack 24:    90 82 
stack 25:    25 83 
stack 26:    33 26 
stack 27:    31 27 
stack 28:    68 37 
stack 29:    29 47 
stack 30:    92 40 
stack 31:    32 62 
stack 32:    38 34 
stack 33:    98 36 
stack 34:    35 50 
stack 35:    44 58 
stack 36:    80 51 
stack 37:    53 72 
stack 38:    79 41 
stack 39:    39 43 
stack 40:    66 87 
stack 41:    54 49 
stack 42:    42 45 
stack 43:    81 48 
stack 44:    76 96 
stack 45:    63 95 
stack 46:    65 67 
stack 47:    94 97 
stack 48:    55 77 
stack 49:    89 86 
stack 50:    56 91 
stack 51:    71 52 
stack 52:    75 70 
stack 53:    61 60 
stack 54:    69 93 
stack 55:    84 74 
stack 56:    57 73 
stack 57:    78 64 
stack 58:    99 59 
stack 59:    88 85 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 3 s
time to solve: 0.02 s
objective value: 2224.0

stacks (top to bottom):
stack  0:    1 0 
stack  1:    
stack  2:    
stack  3:    3 2 
stack  4:    
stack  5:    6 5 
stack  6:    
stack  7:    4 10 
stack  8:    8 9 
stack  9:    
stack 10:    
stack 11:    11 7 
stack 12:    
stack 13:    12 13 
stack 14:    
stack 15:    
stack 16:    18 15 
stack 17:    16 14 
stack 18:    19 17 
stack 19:    
stack 20:    22 20 
stack 21:    23 21 
stack 22:    65 64 
stack 23:    25 24 
stack 24:    46 48 
stack 25:    26 27 
stack 26:    33 30 
stack 27:    53 47 
stack 28:    29 28 
stack 29:    99 97 
stack 30:    31 34 
stack 31:    56 57 
stack 32:    32 36 
stack 33:    38 45 
stack 34:    35 41 
stack 35:    37 40 
stack 36:    84 85 
stack 37:    98 88 
stack 38:    51 50 
stack 39:    39 43 
stack 40:    73 76 
stack 41:    52 44 
stack 42:    49 42 
stack 43:    81 69 
stack 44:    87 86 
stack 45:    71 67 
stack 46:    68 66 
stack 47:    60 62 
stack 48:    94 93 
stack 49:    63 59 
stack 50:    79 78 
stack 51:    92 90 
stack 52:    80 83 
stack 53:    61 58 
stack 54:    54 55 
stack 55:    77 82 
stack 56:    89 91 
stack 57:    75 70 
stack 58:    72 74 
stack 59:    95 96 
