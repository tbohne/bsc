solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 4.43 s
objective value: 2204.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    4 
stack  5:    5 
stack  6:    6 
stack  7:    7 
stack  8:    8 
stack  9:    9 
stack 10:    11 
stack 11:    10 
stack 12:    12 
stack 13:    13 
stack 14:    14 
stack 15:    15 
stack 16:    16 
stack 17:    17 
stack 18:    18 
stack 19:    20 
stack 20:    22 19 
stack 21:    34 21 
stack 22:    23 57 
stack 23:    39 31 
stack 24:    69 24 
stack 25:    25 63 
stack 26:    72 26 
stack 27:    27 77 
stack 28:    61 28 
stack 29:    62 29 
stack 30:    30 94 
stack 31:    49 67 
stack 32:    32 74 
stack 33:    56 33 
stack 34:    76 35 
stack 35:    37 92 
stack 36:    36 83 
stack 37:    59 90 
stack 38:    88 38 
stack 39:    82 81 
stack 40:    91 40 
stack 41:    41 70 
stack 42:    42 87 
stack 43:    68 43 
stack 44:    44 45 
stack 45:    86 78 
stack 46:    46 55 
stack 47:    48 47 
stack 48:    71 98 
stack 49:    50 85 
stack 50:    79 53 
stack 51:    51 80 
stack 52:    54 52 
stack 53:    95 96 
stack 54:    58 93 
stack 55:    84 75 
stack 56:    66 97 
stack 57:    99 89 
stack 58:    73 60 
stack 59:    65 64 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 1.02 s
objective value: 2204.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    4 
stack  5:    5 
stack  6:    6 
stack  7:    7 
stack  8:    8 
stack  9:    9 
stack 10:    11 
stack 11:    10 
stack 12:    12 
stack 13:    13 
stack 14:    14 
stack 15:    15 
stack 16:    16 
stack 17:    17 
stack 18:    18 
stack 19:    20 
stack 20:    22 19 
stack 21:    36 21 
stack 22:    23 57 
stack 23:    27 26 
stack 24:    25 24 
stack 25:    53 35 
stack 26:    37 28 
stack 27:    29 31 
stack 28:    38 67 
stack 29:    72 89 
stack 30:    30 33 
stack 31:    91 40 
stack 32:    32 97 
stack 33:    34 48 
stack 34:    71 75 
stack 35:    39 76 
stack 36:    95 79 
stack 37:    84 47 
stack 38:    78 55 
stack 39:    92 85 
stack 40:    41 45 
stack 41:    82 62 
stack 42:    88 42 
stack 43:    69 43 
stack 44:    44 96 
stack 45:    46 63 
stack 46:    50 51 
stack 47:    56 54 
stack 48:    66 52 
stack 49:    49 83 
stack 50:    87 70 
stack 51:    73 60 
stack 52:    61 64 
stack 53:    98 74 
stack 54:    68 90 
stack 55:    65 81 
stack 56:    58 93 
stack 57:    59 77 
stack 58:    86 94 
stack 59:    99 80 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 5 s
time to solve: 0.01 s
objective value: 2238.0

stacks (top to bottom):
stack  0:    0 2 
stack  1:    
stack  2:    
stack  3:    4 1 
stack  4:    3 5 
stack  5:    
stack  6:    
stack  7:    7 6 
stack  8:    
stack  9:    8 9 
stack 10:    
stack 11:    
stack 12:    15 12 
stack 13:    10 14 
stack 14:    
stack 15:    
stack 16:    17 11 
stack 17:    16 21 
stack 18:    18 13 
stack 19:    20 26 
stack 20:    22 19 
stack 21:    23 47 
stack 22:    
stack 23:    61 63 
stack 24:    25 24 
stack 25:    40 48 
stack 26:    29 28 
stack 27:    27 34 
stack 28:    30 31 
stack 29:    37 35 
stack 30:    39 36 
stack 31:    62 60 
stack 32:    32 33 
stack 33:    72 77 
stack 34:    38 42 
stack 35:    99 89 
stack 36:    78 81 
stack 37:    97 94 
stack 38:    95 92 
stack 39:    98 96 
stack 40:    71 75 
stack 41:    41 45 
stack 42:    44 43 
stack 43:    65 64 
stack 44:    54 52 
stack 45:    49 46 
stack 46:    50 51 
stack 47:    82 83 
stack 48:    59 57 
stack 49:    91 90 
stack 50:    73 76 
stack 51:    66 67 
stack 52:    56 53 
stack 53:    88 85 
stack 54:    58 55 
stack 55:    86 87 
stack 56:    68 70 
stack 57:    84 93 
stack 58:    69 74 
stack 59:    79 80 
