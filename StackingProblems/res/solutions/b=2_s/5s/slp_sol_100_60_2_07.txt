solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 2.40 s
objective value: 2215.0

stacks (top to bottom):
stack  0:    
stack  1:    
stack  2:    2 3 
stack  3:    0 1 
stack  4:    5 
stack  5:    4 
stack  6:    6 
stack  7:    7 
stack  8:    8 
stack  9:    9 
stack 10:    10 
stack 11:    11 12 
stack 12:    
stack 13:    13 
stack 14:    14 
stack 15:    
stack 16:    15 16 
stack 17:    
stack 18:    17 18 
stack 19:    56 
stack 20:    19 26 
stack 21:    20 21 
stack 22:    67 22 
stack 23:    23 24 
stack 24:    25 32 
stack 25:    61 34 
stack 26:    99 86 
stack 27:    85 27 
stack 28:    66 28 
stack 29:    36 29 
stack 30:    87 30 
stack 31:    31 72 
stack 32:    53 76 
stack 33:    79 33 
stack 34:    91 35 
stack 35:    95 50 
stack 36:    54 42 
stack 37:    37 63 
stack 38:    65 38 
stack 39:    96 39 
stack 40:    40 62 
stack 41:    41 92 
stack 42:    49 98 
stack 43:    64 43 
stack 44:    51 44 
stack 45:    47 45 
stack 46:    46 48 
stack 47:    74 94 
stack 48:    70 80 
stack 49:    90 83 
stack 50:    77 57 
stack 51:    73 75 
stack 52:    58 52 
stack 53:    81 84 
stack 54:    55 60 
stack 55:    59 93 
stack 56:    78 82 
stack 57:    88 68 
stack 58:    97 71 
stack 59:    89 69 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 1.17 s
objective value: 2215.0

stacks (top to bottom):
stack  0:    
stack  1:    
stack  2:    2 
stack  3:    1 3 
stack  4:    0 5 
stack  5:    4 
stack  6:    6 
stack  7:    7 
stack  8:    8 
stack  9:    9 
stack 10:    10 
stack 11:    11 12 
stack 12:    
stack 13:    13 
stack 14:    14 
stack 15:    
stack 16:    15 16 
stack 17:    20 
stack 18:    17 18 
stack 19:    
stack 20:    78 19 
stack 21:    21 73 
stack 22:    26 22 
stack 23:    23 24 
stack 24:    36 25 
stack 25:    64 34 
stack 26:    29 32 
stack 27:    27 39 
stack 28:    46 28 
stack 29:    30 93 
stack 30:    31 33 
stack 31:    35 44 
stack 32:    76 94 
stack 33:    38 86 
stack 34:    59 69 
stack 35:    74 43 
stack 36:    41 98 
stack 37:    37 71 
stack 38:    77 81 
stack 39:    56 82 
stack 40:    40 45 
stack 41:    52 42 
stack 42:    51 97 
stack 43:    47 57 
stack 44:    49 60 
stack 45:    72 53 
stack 46:    55 92 
stack 47:    90 80 
stack 48:    48 63 
stack 49:    87 91 
stack 50:    66 50 
stack 51:    79 54 
stack 52:    89 88 
stack 53:    67 68 
stack 54:    61 58 
stack 55:    95 65 
stack 56:    99 62 
stack 57:    70 75 
stack 58:    83 84 
stack 59:    96 85 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 5 s
time to solve: 0.01 s
objective value: 2264.0

stacks (top to bottom):
stack  0:    
stack  1:    
stack  2:    
stack  3:    2 3 
stack  4:    1 99 
stack  5:    6 4 
stack  6:    7 5 
stack  7:    
stack  8:    9 8 
stack  9:    
stack 10:    11 10 
stack 11:    
stack 12:    
stack 13:    15 12 
stack 14:    14 13 
stack 15:    17 16 
stack 16:    0 97 
stack 17:    
stack 18:    20 18 
stack 19:    
stack 20:    19 22 
stack 21:    25 21 
stack 22:    27 26 
stack 23:    23 24 
stack 24:    
stack 25:    58 57 
stack 26:    36 32 
stack 27:    46 48 
stack 28:    30 28 
stack 29:    31 29 
stack 30:    35 33 
stack 31:    51 37 
stack 32:    61 60 
stack 33:    34 39 
stack 34:    40 38 
stack 35:    64 65 
stack 36:    52 42 
stack 37:    79 81 
stack 38:    71 69 
stack 39:    78 80 
stack 40:    66 68 
stack 41:    41 43 
stack 42:    56 53 
stack 43:    45 44 
stack 44:    47 49 
stack 45:    74 75 
stack 46:    96 98 
stack 47:    95 94 
stack 48:    91 93 
stack 49:    72 73 
stack 50:    55 50 
stack 51:    54 59 
stack 52:    89 88 
stack 53:    82 84 
stack 54:    90 92 
stack 55:    70 67 
stack 56:    62 63 
stack 57:    87 86 
stack 58:    85 83 
stack 59:    77 76 
