solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 3.72 s
objective value: 2213.0

stacks (top to bottom):
stack  0:    0 
stack  1:    
stack  2:    2 
stack  3:    1 
stack  4:    5 3 
stack  5:    4 
stack  6:    6 
stack  7:    7 
stack  8:    8 
stack  9:    11 9 
stack 10:    10 
stack 11:    
stack 12:    14 12 
stack 13:    
stack 14:    13 
stack 15:    15 
stack 16:    17 16 
stack 17:    18 
stack 18:    
stack 19:    20 19 
stack 20:    22 
stack 21:    55 21 
stack 22:    23 68 
stack 23:    33 63 
stack 24:    84 24 
stack 25:    25 60 
stack 26:    35 26 
stack 27:    40 27 
stack 28:    28 95 
stack 29:    29 48 
stack 30:    30 92 
stack 31:    31 44 
stack 32:    49 32 
stack 33:    34 52 
stack 34:    73 65 
stack 35:    43 77 
stack 36:    36 69 
stack 37:    38 37 
stack 38:    47 70 
stack 39:    45 39 
stack 40:    98 42 
stack 41:    91 41 
stack 42:    99 53 
stack 43:    64 58 
stack 44:    46 75 
stack 45:    76 50 
stack 46:    97 74 
stack 47:    93 66 
stack 48:    82 90 
stack 49:    54 72 
stack 50:    51 67 
stack 51:    61 86 
stack 52:    87 89 
stack 53:    81 57 
stack 54:    88 80 
stack 55:    56 79 
stack 56:    62 85 
stack 57:    59 96 
stack 58:    78 94 
stack 59:    83 71 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 0.62 s
objective value: 2213.0

stacks (top to bottom):
stack  0:    0 
stack  1:    
stack  2:    2 
stack  3:    1 
stack  4:    3 
stack  5:    5 
stack  6:    4 6 
stack  7:    7 
stack  8:    8 
stack  9:    11 9 
stack 10:    10 
stack 11:    
stack 12:    14 12 
stack 13:    
stack 14:    13 
stack 15:    15 
stack 16:    17 16 
stack 17:    18 
stack 18:    
stack 19:    22 19 
stack 20:    20 
stack 21:    36 21 
stack 22:    31 69 
stack 23:    23 33 
stack 24:    47 24 
stack 25:    25 75 
stack 26:    83 26 
stack 27:    85 27 
stack 28:    34 28 
stack 29:    29 72 
stack 30:    30 32 
stack 31:    55 44 
stack 32:    51 90 
stack 33:    70 52 
stack 34:    35 96 
stack 35:    41 37 
stack 36:    50 38 
stack 37:    39 48 
stack 38:    98 54 
stack 39:    40 53 
stack 40:    61 64 
stack 41:    84 43 
stack 42:    86 42 
stack 43:    46 77 
stack 44:    45 56 
stack 45:    88 99 
stack 46:    91 58 
stack 47:    78 65 
stack 48:    57 49 
stack 49:    97 80 
stack 50:    73 60 
stack 51:    93 66 
stack 52:    76 67 
stack 53:    81 82 
stack 54:    59 79 
stack 55:    92 87 
stack 56:    74 68 
stack 57:    94 89 
stack 58:    62 63 
stack 59:    71 95 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 5 s
time to solve: 0.01 s
objective value: 2230.0

stacks (top to bottom):
stack  0:    2 0 
stack  1:    
stack  2:    
stack  3:    5 1 
stack  4:    
stack  5:    4 6 
stack  6:    
stack  7:    7 8 
stack  8:    10 3 
stack  9:    11 9 
stack 10:    
stack 11:    
stack 12:    13 12 
stack 13:    
stack 14:    
stack 15:    
stack 16:    17 16 
stack 17:    14 15 
stack 18:    
stack 19:    18 19 
stack 20:    20 23 
stack 21:    47 49 
stack 22:    29 21 
stack 23:    25 22 
stack 24:    28 24 
stack 25:    30 26 
stack 26:    33 32 
stack 27:    31 27 
stack 28:    46 48 
stack 29:    34 35 
stack 30:    39 42 
stack 31:    71 67 
stack 32:    54 56 
stack 33:    40 38 
stack 34:    36 37 
stack 35:    70 66 
stack 36:    97 95 
stack 37:    98 99 
stack 38:    77 75 
stack 39:    64 65 
stack 40:    59 57 
stack 41:    43 41 
stack 42:    45 44 
stack 43:    83 82 
stack 44:    50 52 
stack 45:    73 72 
stack 46:    81 80 
stack 47:    78 79 
stack 48:    55 51 
stack 49:    84 85 
stack 50:    88 87 
stack 51:    96 94 
stack 52:    53 58 
stack 53:    92 90 
stack 54:    91 93 
stack 55:    76 74 
stack 56:    62 63 
stack 57:    86 89 
stack 58:    61 60 
stack 59:    68 69 
