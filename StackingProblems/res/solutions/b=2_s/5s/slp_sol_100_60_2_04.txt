solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 3.75 s
objective value: 2213.0

stacks (top to bottom):
stack  0:    1 
stack  1:    0 2 
stack  2:    3 
stack  3:    4 
stack  4:    
stack  5:    8 6 
stack  6:    5 
stack  7:    
stack  8:    7 
stack  9:    9 
stack 10:    10 
stack 11:    11 
stack 12:    
stack 13:    13 12 
stack 14:    14 
stack 15:    15 
stack 16:    16 
stack 17:    17 
stack 18:    18 
stack 19:    22 19 
stack 20:    20 
stack 21:    36 21 
stack 22:    99 62 
stack 23:    24 23 
stack 24:    26 43 
stack 25:    88 25 
stack 26:    93 49 
stack 27:    27 28 
stack 28:    96 76 
stack 29:    29 65 
stack 30:    71 30 
stack 31:    31 42 
stack 32:    32 34 
stack 33:    39 33 
stack 34:    61 55 
stack 35:    35 64 
stack 36:    80 75 
stack 37:    37 98 
stack 38:    38 95 
stack 39:    46 87 
stack 40:    60 40 
stack 41:    41 58 
stack 42:    89 73 
stack 43:    94 74 
stack 44:    53 44 
stack 45:    97 45 
stack 46:    51 69 
stack 47:    48 47 
stack 48:    59 50 
stack 49:    91 81 
stack 50:    83 54 
stack 51:    68 84 
stack 52:    52 72 
stack 53:    70 67 
stack 54:    86 63 
stack 55:    77 57 
stack 56:    56 82 
stack 57:    79 85 
stack 58:    78 90 
stack 59:    92 66 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 1.18 s
objective value: 2213.0

stacks (top to bottom):
stack  0:    1 
stack  1:    0 2 
stack  2:    3 
stack  3:    4 
stack  4:    
stack  5:    8 6 
stack  6:    5 
stack  7:    
stack  8:    7 
stack  9:    9 
stack 10:    10 
stack 11:    11 12 
stack 12:    
stack 13:    13 
stack 14:    14 
stack 15:    15 
stack 16:    16 
stack 17:    17 
stack 18:    18 
stack 19:    22 19 
stack 20:    20 
stack 21:    77 21 
stack 22:    27 25 
stack 23:    24 23 
stack 24:    31 45 
stack 25:    26 46 
stack 26:    28 55 
stack 27:    32 54 
stack 28:    42 34 
stack 29:    29 30 
stack 30:    36 51 
stack 31:    33 57 
stack 32:    49 40 
stack 33:    61 74 
stack 34:    35 65 
stack 35:    43 50 
stack 36:    48 58 
stack 37:    37 72 
stack 38:    38 39 
stack 39:    87 76 
stack 40:    78 93 
stack 41:    41 66 
stack 42:    92 44 
stack 43:    99 64 
stack 44:    59 84 
stack 45:    47 60 
stack 46:    98 91 
stack 47:    90 63 
stack 48:    71 81 
stack 49:    52 69 
stack 50:    80 75 
stack 51:    83 68 
stack 52:    53 96 
stack 53:    82 95 
stack 54:    79 73 
stack 55:    56 62 
stack 56:    86 97 
stack 57:    88 70 
stack 58:    89 94 
stack 59:    85 67 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 5 s
time to solve: 0.01 s
objective value: 2248.0

stacks (top to bottom):
stack  0:    
stack  1:    2 3 
stack  2:    
stack  3:    0 1 
stack  4:    
stack  5:    8 6 
stack  6:    4 7 
stack  7:    
stack  8:    5 14 
stack  9:    
stack 10:    10 9 
stack 11:    11 12 
stack 12:    
stack 13:    
stack 14:    
stack 15:    
stack 16:    16 13 
stack 17:    
stack 18:    24 18 
stack 19:    20 15 
stack 20:    22 17 
stack 21:    32 21 
stack 22:    26 19 
stack 23:    27 23 
stack 24:    56 54 
stack 25:    46 43 
stack 26:    47 49 
stack 27:    28 25 
stack 28:    68 63 
stack 29:    29 30 
stack 30:    41 40 
stack 31:    31 33 
stack 32:    36 37 
stack 33:    35 34 
stack 34:    98 95 
stack 35:    61 64 
stack 36:    55 58 
stack 37:    78 73 
stack 38:    38 39 
stack 39:    42 44 
stack 40:    52 50 
stack 41:    60 62 
stack 42:    99 94 
stack 43:    48 45 
stack 44:    83 87 
stack 45:    80 79 
stack 46:    96 90 
stack 47:    72 66 
stack 48:    82 84 
stack 49:    53 51 
stack 50:    71 65 
stack 51:    75 69 
stack 52:    86 85 
stack 53:    93 91 
stack 54:    88 89 
stack 55:    77 81 
stack 56:    76 74 
stack 57:    59 57 
stack 58:    70 67 
stack 59:    97 92 
