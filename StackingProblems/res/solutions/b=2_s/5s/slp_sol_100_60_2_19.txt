solved with: SP.mip_formulations.BinPackingFormulation
time limit: 5 s
time to solve: 4.12 s
objective value: 2211.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    5 
stack  5:    4 
stack  6:    6 
stack  7:    7 
stack  8:    8 10 
stack  9:    9 
stack 10:    11 
stack 11:    
stack 12:    12 
stack 13:    13 
stack 14:    14 
stack 15:    15 
stack 16:    16 
stack 17:    17 21 
stack 18:    
stack 19:    18 19 
stack 20:    34 
stack 21:    22 20 
stack 22:    25 41 
stack 23:    71 23 
stack 24:    26 24 
stack 25:    64 77 
stack 26:    80 53 
stack 27:    89 27 
stack 28:    28 97 
stack 29:    83 29 
stack 30:    31 30 
stack 31:    69 72 
stack 32:    55 32 
stack 33:    52 33 
stack 34:    44 67 
stack 35:    35 37 
stack 36:    39 36 
stack 37:    84 65 
stack 38:    95 38 
stack 39:    43 66 
stack 40:    98 40 
stack 41:    81 57 
stack 42:    92 42 
stack 43:    79 63 
stack 44:    96 74 
stack 45:    45 50 
stack 46:    46 61 
stack 47:    85 47 
stack 48:    48 94 
stack 49:    49 56 
stack 50:    51 76 
stack 51:    54 93 
stack 52:    60 73 
stack 53:    62 82 
stack 54:    90 75 
stack 55:    87 99 
stack 56:    68 78 
stack 57:    91 59 
stack 58:    58 88 
stack 59:    86 70 

#####################################################

solved with: SP.mip_formulations.ThreeIndexFormulation
time limit: 5 s
time to solve: 1.03 s
objective value: 2211.0

stacks (top to bottom):
stack  0:    0 
stack  1:    1 
stack  2:    2 
stack  3:    3 
stack  4:    5 
stack  5:    4 
stack  6:    6 
stack  7:    7 
stack  8:    8 10 
stack  9:    9 
stack 10:    11 
stack 11:    
stack 12:    12 
stack 13:    13 
stack 14:    14 
stack 15:    15 
stack 16:    16 
stack 17:    17 21 
stack 18:    
stack 19:    20 19 
stack 20:    18 
stack 21:    22 30 
stack 22:    24 23 
stack 23:    25 41 
stack 24:    28 26 
stack 25:    65 47 
stack 26:    33 78 
stack 27:    86 27 
stack 28:    35 31 
stack 29:    50 29 
stack 30:    44 81 
stack 31:    42 32 
stack 32:    46 34 
stack 33:    48 87 
stack 34:    39 36 
stack 35:    37 40 
stack 36:    43 99 
stack 37:    38 62 
stack 38:    92 56 
stack 39:    59 74 
stack 40:    73 54 
stack 41:    68 94 
stack 42:    85 67 
stack 43:    90 70 
stack 44:    83 97 
stack 45:    45 63 
stack 46:    60 82 
stack 47:    52 49 
stack 48:    95 51 
stack 49:    64 61 
stack 50:    71 77 
stack 51:    58 88 
stack 52:    53 55 
stack 53:    91 93 
stack 54:    79 96 
stack 55:    98 72 
stack 56:    66 57 
stack 57:    69 75 
stack 58:    84 76 
stack 59:    80 89 

#####################################################

solved with: SP.constructive_heuristics.TwoCapHeuristic
time limit: 5 s
time to solve: 0.01 s
objective value: 2250.0

stacks (top to bottom):
stack  0:    0 1 
stack  1:    
stack  2:    
stack  3:    
stack  4:    
stack  5:    2 10 
stack  6:    4 5 
stack  7:    7 6 
stack  8:    
stack  9:    
stack 10:    3 11 
stack 11:    9 13 
stack 12:    
stack 13:    
stack 14:    12 14 
stack 15:    16 15 
stack 16:    22 18 
stack 17:    17 21 
stack 18:    8 19 
stack 19:    
stack 20:    
stack 21:    20 23 
stack 22:    98 96 
stack 23:    25 24 
stack 24:    28 26 
stack 25:    29 34 
stack 26:    65 47 
stack 27:    43 27 
stack 28:    85 81 
stack 29:    36 33 
stack 30:    31 30 
stack 31:    35 32 
stack 32:    44 38 
stack 33:    89 87 
stack 34:    80 70 
stack 35:    42 41 
stack 36:    83 88 
stack 37:    37 40 
stack 38:    69 64 
stack 39:    39 46 
stack 40:    52 54 
stack 41:    48 53 
stack 42:    60 62 
stack 43:    73 66 
stack 44:    55 57 
stack 45:    45 50 
stack 46:    68 63 
stack 47:    59 61 
stack 48:    84 86 
stack 49:    49 51 
stack 50:    79 82 
stack 51:    72 75 
stack 52:    58 56 
stack 53:    95 99 
stack 54:    92 91 
stack 55:    93 94 
stack 56:    90 97 
stack 57:    77 78 
stack 58:    76 67 
stack 59:    71 74 
